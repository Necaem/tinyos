<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="51:SinkC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b129bc13668"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b129bc9f0c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b129bc9f0c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b129bcafc38"/></to>
    </wire>
    <wire loc="59:SinkC.nc">
      <from><interface-ref name="BootTimer" scoped="" ref="0x2b129bc1b598"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c37ca60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c37ca60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:SinkC.nc">
      <from><interface-ref name="DistTimer" scoped="" ref="0x2b129bc2a7b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c53e2b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c53e2b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:SinkC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b129bc2de18"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b129c538878"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b129c538878"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b129c54d020"/></to>
    </wire>
    <wire loc="66:SinkC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x2b129bc2fcc8"/></from>
      <to><interface-ref name="ForwardingControl" scoped="" ref="0x2b129c5343c0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b129c5343c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b129c54e710"/></to>
    </wire>
    <wire loc="67:SinkC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b129bc31890"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x2b129c534c20"/></to>
    </wire>
    <wire loc="85:SinkC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b129bc31890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129bf02850"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129bf02850"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129bf4f728"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b129c534c20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129c5f9850"/></to>
    </wire>
    <wire loc="69:SinkC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129bc44d68"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129c55e528"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129c55e528"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0eea10"/></to>
    </wire>
    <wire loc="72:SinkC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b129bc551c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129c533d30"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129c533d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129c54c020"/></to>
    </wire>
    <wire loc="73:SinkC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b129bc4b628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c532bb8"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c532bb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c54ce50"/></to>
    </wire>
    <wire loc="74:SinkC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129bc54ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c561c48"/></to>
    </wire>
    <wire loc="87:SinkC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129bc54ac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129befd0c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129befd0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129bf56d20"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c561c48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c57fbb8"/></to>
    </wire>
    <wire loc="75:SinkC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b129bc5b2b8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b129c564930"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b129c564930"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b129c57e930"/></to>
    </wire>
    <wire loc="76:SinkC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129bc62608"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5639a0"/></to>
    </wire>
    <wire loc="94:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5639a0"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5f25a8"/></to>
    </wire>
    <wire loc="80:SinkC.nc">
      <from><interface-ref name="ForecastUpdate" scoped="" ref="0x2b129bc40a38"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b129cf96ba0"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b129cf96ba0"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b129d034c98"/></to>
    </wire>
    <wire loc="81:SinkC.nc">
      <from><interface-ref name="ForecastValue" scoped="" ref="0x2b129bc412e0"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b129cf92e70"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b129cf92e70"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b129d061020"/></to>
    </wire>
    <wire loc="86:SinkC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x2b129bc511b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129befeab0"/>
      <arguments>
        <value cst="I:200">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:SinkC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129bc77c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129c334cb0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129c334cb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129c32c5e8"/></to>
    </wire>
    <wire loc="94:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129d20cc58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c561c48"/></to>
    </wire>
    <wire loc="95:SinkC.nc">
      <from><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b129bc73138"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d20c600"/></to>
    </wire>
    <wire loc="67:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129d20c600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d26f080"/></to>
    </wire>
    <wire loc="99:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129d25cdf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c561c48"/></to>
    </wire>
    <wire loc="100:SinkC.nc">
      <from><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b129bc73830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d25c798"/></to>
    </wire>
    <wire loc="69:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129d25c798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d2584a0"/></to>
    </wire>
    <wire loc="105:SinkC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129bc6f350"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c38dc48"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d9bec68"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d0e94a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d08a938"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d9447b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b129cc12020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b129d8c2430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129ca88238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d871de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d7a9438"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c54e110"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c396e38"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c384a38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b129c156b00"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b129c151998"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c0dd9f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129bf4f110"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c2fcc88"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b129be5c308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b129ba575c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b129ba575c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b129bb02d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b129be5cce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b129cd59870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b129be5cce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b129cc13450"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b129be5cce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129bc9ebe8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129bc9ebe8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129bcb94f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b129be5b418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b129bcad9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129cee1770"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b129bcad9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c2864e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129bca9b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129be2cae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b129bcb8398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129be2c4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b129bcb9b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c3662d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b129bcb9b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b129bca7a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b129bca7a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b129bcb1428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b129bcb4108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b129bcad9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b129bcbe5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b129bcc71a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b129bcc71a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd56430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b129bcc37f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b129bcb4108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b129bcf9c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bdd9520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b129bceb7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd6e020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd6e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3cf710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b129bcf47e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd8bd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd8bd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d445710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b129bcfe4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd948c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd948c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4c3710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b129bd08af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bdf0c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b129bcc54d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd54740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd54740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2cd710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b129bcec1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd965b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd965b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4c9710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b129bcd77e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd62930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd62930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3516a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b129bce0968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd67740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd67740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3c1710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b129bce8c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd81430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd81430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d437710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b129bcf1c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd87120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd87120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4ae710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b129bccbc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd43020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd43020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2dc6a8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b129bcd4c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd5fd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd5fd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d348710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b129bcdce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd63bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd63bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3b8710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b129bce41a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bd7e8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bd7e8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d42e710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b129bcfb968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd90d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd90d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4ba710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b129bd0a7e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bdfac38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b129bce24d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd8da50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd8da50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d44b710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd56430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2d3710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b129bcd0348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd5a120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd5a120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d33f710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b129bcf74d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bdeccd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b129bcce658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd69500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd69500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3c76a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b129bcea968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd83120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd83120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3cc710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b129bcf3968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd8ae18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd8ae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d442710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b129bcfd658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd93a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd93a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4c0710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b129bcc4658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bd538c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bd538c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2ca710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b129bcd6968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd61a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd61a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d34e710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b129bcdeaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd658c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd658c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3be710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b129bce7e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd805b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd805b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d434710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b129bcf0e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bd862a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bd862a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4ab710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b129bccae00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd42120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd42120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2d9710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b129bcd3e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd5ee18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd5ee18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d345710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b129bcda020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd78d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd78d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3b5710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b129bcfaaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bda7e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bda7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4b7710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b129bcd8348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd70e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd70e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3d26a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b129bcf5658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd8cbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd8cbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d448710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b129bcff348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd95740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd95740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4c6710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b129bd09968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bdf43e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b129bcc6348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd555b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd555b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2d0710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b129bccf4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bd592a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bd592a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d33c710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b129bcee020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd97500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd97500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4cc6a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b129bce17e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b129bd685b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b129bd685b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3c4710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b129bce9af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd822a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd822a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d43a710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b129bcf2af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd88020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd88020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d43f710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b129bcfc7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd91bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd91bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d4bd710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b129bcb3a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd45dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd45dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2df520"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b129bcd5af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b129bd60bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b129bd60bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d34b710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b129bcddc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b129bd64a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b129bd64a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3bb710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b129bce5020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b129bd7f740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b129bd7f740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d431710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b129bcf6658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129bde63e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b129bce3348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b129bd8e930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b129bd8e930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d44e6a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b129bcd91a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b129bd77e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b129bd77e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d3b2710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b129bcc8020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b129bd572a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b129bd572a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d2d6710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b129bcd1100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b129bd5c020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b129bd5c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b129d342710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129bb01c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b129bb0b168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b129ba56e30"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b129bb26988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b129c4330c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b129c323b90"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b129c2f0020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c321668"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c2f7800"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c2f7800"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129d5cf7c8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c3202a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c2f63f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c2f63f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129befd0c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b129c35c080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b129c323358"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129c2f5020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129befdcd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129befdcd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129bf58738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b129c2f45b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129befb348"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129befb348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129bf55908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129d5ce450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129bea95d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129d5cd060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129befdcd0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129bea95d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129beee920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129beed6f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129beff920"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129beff920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129bef7460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129beec3f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129befdcd0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129beeba10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129befd0c0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b129beea780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b129bee8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129bf4f728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129bf82da8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129befeab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129bf58180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129bf4f110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129bf82790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129bf698f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129befbc80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129bf54308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129bf6b208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129bf53020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129bf4e760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b129bf69020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b129c2de020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129bf6b208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129c0b3020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129bf4e760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c0b4868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b129c0b3db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b129bf69020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129bf96bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129bf698f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129c0b0a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129bf698f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129c0a8420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129bf698f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b129c0b16c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b129bf97b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b129c0b0020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b129bf7b950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b129bf91b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b129c0acb30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b129bf8f398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b129c0ab8b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b129c0ab8b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b129c0ec338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b129c0c0448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b129c0cb0c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b129c0cb0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b129c0e7310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b129bfde830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b129bfb4d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b129bfe0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b129bfda918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b129c0ae100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b129c0ae8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b129c0e8290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b129c0ecaf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b129c0ecaf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b129c132780"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b129c0e7310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b129c131020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b129c0ec338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b129c132020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c0e0398"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c1b5a88"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c1b5a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c2ae270"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c12e640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c0e0398"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b129c130020"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b129c15b328"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b129c15b328"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b129c153258"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b129c1307c0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b129c15bb80"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b129c15bb80"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b129c153af0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b129c12f020"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b129c15a510"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b129c15a510"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b129c1523c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b129c158be0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b129c14f240"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b129c1599d0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b129c1500f0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b129c1583a0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b129c150988"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129c14e7d8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129bca9b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b129c14d4b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b129bb273c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b129c2be450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c1af7f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c1af7f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c29ea98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c2b7b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c1c66e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c1c66e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c1f16f8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c1e15e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c1ec838"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b129c1c1020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b129c1ea020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129c1d6598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b129c20e938"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129c1d6598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b129c20abf8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129c1d6598"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b129c205020"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c286c08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c1c66e0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b129c31a3e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129c3662d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c32c020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b129c32bce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b129c32de10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b129c32de10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b129bccae00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b129c32ae70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b129c368020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b129c368020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b129bccbc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b129c356020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b129c3671b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b129c3671b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b129bcb3a70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b129c383080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b129c35c080"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b129c35fe28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b129bc9f0c0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b129c37b538"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129bf02850"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c392b68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b129c392b68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c52e5e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129c396e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c387348"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129c38dc48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c51e128"/></to>
    </wire>
    <wire loc="37:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129c387348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129c4a4c20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b129c528858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c4ddab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129c4d8c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b129c3ae838"/></to>
    </wire>
    <wire loc="38:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b129c3ae838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129c4a3478"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c515330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b129c3acc80"/></to>
    </wire>
    <wire loc="39:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b129c3acc80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129c49f608"/></to>
    </wire>
    <wire loc="40:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b129c3a8108"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b129c49d670"/></to>
    </wire>
    <wire loc="72:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b129c49d670"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b129d6af168"/></to>
    </wire>
    <wire loc="71:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129c49f608"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129d6b2128"/></to>
    </wire>
    <wire loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129c4a4c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d6b77b8"/></to>
    </wire>
    <wire loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129c4a3478"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129d6b5020"/></to>
    </wire>
    <wire loc="75:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129d6ae2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c41a180"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c41a180"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129c43ea70"/></to>
    </wire>
    <wire loc="76:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b129d6a92a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c415160"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c415160"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c439a98"/></to>
    </wire>
    <wire loc="77:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129d6a8538"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b129c4464e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129c4464e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b129c438e18"/></to>
    </wire>
    <wire loc="78:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b129d6a4688"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b129c4437b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b129c4437b0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b129c4337c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b129c4d4cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b129c523930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2b129c561650"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2b129c57f5c0"/></to>
    </wire>
    <wire loc="67:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129c5f9850"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129c61edf8"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b129c531868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c54aa30"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5f25a8"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129d0d0b28"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b129c5562b8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b129d1d3060"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Stats" scoped="" ref="0x2b129d1d3060"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b129d1cf500"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0eea10"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0e9ac8"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129c587020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129c576240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c5f4430"/></to>
    </wire>
    <wire loc="68:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c5f4430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c61d890"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129c573cc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c5f3c80"/></to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c5f3c80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c61b2b0"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129c573020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129c5f3080"/></to>
    </wire>
    <wire loc="69:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129c5f3080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129c61c5a8"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c594510"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5f25a8"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b129c628080"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b129c57ab30"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129c58dd40"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0eea10"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b129d112df8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b129c54d020"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129c624c30"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129d112460"/></to>
    </wire>
    <wire loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129d112460"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129d10b158"/></to>
    </wire>
    <wire loc="112:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2b129c56aa70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b129d1656e0"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x2b129c598d30"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b129d146478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2b129d146478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b129d9bd370"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketHistory" scoped="" ref="0x2b129c591958"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2b129d184d78"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CacheCompare" scoped="" ref="0x2b129d1727b8"/></from>
      <to><interface-ref name="CacheCompare" scoped="" ref="0x2b129c577ab8"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c58d060"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b129d1d3d78"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Updates" scoped="" ref="0x2b129d1d3d78"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b129d1cd240"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c627720"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b129d1d3d78"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficStatistics" scoped="" ref="0x2b129c6265d8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b129d1d3060"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="selfReceiveTask" scoped="" ref="0x2b129c584020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b129c5b5368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129d0d0b28"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129d0c6508"/></to>
    </wire>
    <wire loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b129c610020"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b129c628080"/></to>
    </wire>
    <wire loc="72:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PathCost" scoped="" ref="0x2b129c643b28"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129c624c30"/></to>
    </wire>
    <wire loc="73:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c63a8a8"/></from>
      <to><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c627720"/></to>
    </wire>
    <wire loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b129c63ca40"/></from>
      <to><interface-ref name="TrafficStatistics" scoped="" ref="0x2b129c6265d8"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b129c617168"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129c6bfe68"/></to>
    </wire>
    <wire loc="76:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129c6bfe68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129c70e2c0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b129c60e380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129c6f2448"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129c6f2448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129c709da0"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129c60f690"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b129cf9bcd8"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconPacket" scoped="" ref="0x2b129cf9bcd8"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b129cfe0d18"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129c60db40"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b129cf9e890"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x2b129cf9e890"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b129cf82990"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b129c610868"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b129cf99d58"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataPacket" scoped="" ref="0x2b129cf99d58"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b129cfded58"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b129c60c380"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b129cf9aa20"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x2b129cf9aa20"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b129cfdfa20"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSnoop" scoped="" ref="0x2b129c60ca20"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c6f5b68"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129c6450e8"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b129cf9b020"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x2b129cf9b020"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b129cfe0060"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b129c645d90"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b129cf990b8"/></to>
    </wire>
    <wire loc="87:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x2b129cf990b8"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b129cfde0b8"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c63fc00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6ed3a0"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6ed3a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6f8970"/></to>
    </wire>
    <wire loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129cf8e400"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c6f37a0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c6f37a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c709190"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129cf8f020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c6f7df8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cf8fd08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c6f5020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cf8fd08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c6f5b68"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b129cf8c6c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129d0d1b98"/></to>
    </wire>
    <wire loc="57:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129d0d1b98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129d0c75f8"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b129cf8d130"/></from>
      <to><interface-ref name="SendData" scoped="" ref="0x2b129d054158"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x2b129d054158"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129d052bb8"/></to>
    </wire>
    <wire loc="110:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b129cf8c020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d0d15c0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129d0d15c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d0c7020"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129cf8b488"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129c6f2448"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubSendData" scoped="" ref="0x2b129d054e80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129d0d4968"/></to>
    </wire>
    <wire loc="55:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129d0d4968"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129d0c82b8"/></to>
    </wire>
    <wire loc="116:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129d053bb0"/></from>
      <to><interface-ref name="BackoffConfig" scoped="" ref="0x2b129c6186e0"/></to>
    </wire>
    <wire loc="121:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMSubSend" scoped="" ref="0x2b129d0ce6b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c6f7df8"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129d0cc4e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c6f5020"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129d0ccb58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c6f37a0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129c611020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="131:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129cf8abb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="135:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129c617d18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129d0f46e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129d0f46e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129c6413b0"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0eea10"/></to>
    </wire>
    <wire loc="141:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b129c63bae8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b129d08b4c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b129d08b4c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b129d084208"/></to>
    </wire>
    <wire loc="145:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b129c63d298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b129c334cb0"/></to>
    </wire>
    <wire loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x2b129c6553e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129c70e2c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129c72b9e0"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6f8970"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c736020"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b129c6f31c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b129c70ab28"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b129c70ab28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b129c724348"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c6f7df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c70d270"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c70d270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c728aa8"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b129c6f5b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c70a020"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b129c70a020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c726818"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c709190"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b129c7219e8"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b129c6e2020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c7336b0"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c7336b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c772c38"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c715e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c72f670"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c72f670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c76fbf0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c6f5020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c70b3c8"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c70b3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c727c38"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b129c6e7dc0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b129c707498"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b129c707498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b129c73fc70"/></to>
    </wire>
    <wire loc="91:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129c709da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129c7222c0"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b129c6e3878"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b129c706140"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b129c706140"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b129c746968"/></to>
    </wire>
    <wire loc="217:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129c72b9e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129cb10440"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b129c6fb818"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b129c73ad28"/></to>
    </wire>
    <wire loc="311:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b129c73ad28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b129cc31388"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b129c724348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b129c8e71a0"/></to>
    </wire>
    <wire loc="127:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b129c7219e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c8eb700"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c728aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129c8ea510"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b129c726818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129c8e9aa0"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129c6fe480"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129c73d870"/></to>
    </wire>
    <wire loc="309:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129c73d870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129cc35060"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c727c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129c8e9388"/></to>
    </wire>
    <wire loc="271:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c772c38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129cbc77d8"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129c7342d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129c736830"/></to>
    </wire>
    <wire loc="313:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129c736830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cc27830"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129c705110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129c745518"/></to>
    </wire>
    <wire loc="310:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129c745518"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129cc2cd70"/></to>
    </wire>
    <wire loc="188:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b129c73fc70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b129cae1268"/></to>
    </wire>
    <wire loc="126:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129c7222c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129c8ec1f0"/></to>
    </wire>
    <wire loc="226:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b129c746968"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b129cb86bd0"/></to>
    </wire>
    <wire loc="312:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c736020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129cc27020"/></to>
    </wire>
    <wire loc="272:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c76fbf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129cbcba48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129cb10440"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b129cb0c858"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b129cc31388"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b129cc5d0c8"/></to>
    </wire>
    <wire loc="161:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b129c71f710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b129c994840"/></to>
    </wire>
    <wire loc="149:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b129c7174b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129c981200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b129c981200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129d7a7918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b129c8e71a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b129d780898"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b129c8ea510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b129d782d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b129c8e9aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b129d7801c0"/></to>
    </wire>
    <wire loc="162:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129c747308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129ca78900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129ca78900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129d83ed98"/></to>
    </wire>
    <wire loc="163:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b129c7506e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129c97b980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129cc35060"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129cc0fcd0"/></to>
    </wire>
    <wire loc="218:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b129c73f1d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b129cb0dd60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b129cb0dd60"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b129d8ca5e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129c8eb700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129d782060"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129c8e9388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d781a60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129cbc77d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129d905c48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cc27830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cd07438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129cc2cd70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129cc57860"/></to>
    </wire>
    <wire loc="159:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c718250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c995578"/></to>
    </wire>
    <wire loc="129:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129c723020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129c8e78b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129c8e78b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129d77f020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b129cae1268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b129cadc470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b129cb86bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b129d8c19c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129c8ec1f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129d784a10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129cbcba48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129d907020"/></to>
    </wire>
    <wire loc="160:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c71f020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c9942a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129cc27020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129cc559d0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b129c723bb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b129c8e6020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b129c8e6020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b129d77f738"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129c7a1d58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129ca7c980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129ca7c980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129d845d50"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c79abd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c7fac50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129c799020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129cbc77d8"/></to>
    </wire>
    <wire loc="106:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b129c794e08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbe3020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbe3020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cc10ca8"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129c851c68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129cc26ae0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129cc26ae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129cd0b2e0"/></to>
    </wire>
    <wire loc="117:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129c8e4328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b129c77c130"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129c8e5430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b129c8dc100"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129c8e5d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b129c9e5060"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129c8e6678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b129c9e5638"/></to>
    </wire>
    <wire loc="138:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b129c9113f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129c981200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129c8dca48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b129c9e6740"/></to>
    </wire>
    <wire loc="154:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129c994e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129ca7c980"/></to>
    </wire>
    <wire loc="155:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129c990ba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c988838"/></to>
    </wire>
    <wire loc="156:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129c98e5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c9e82a8"/></to>
    </wire>
    <wire loc="157:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129c991d98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129c9e8880"/></to>
    </wire>
    <wire loc="170:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129c9e4490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129caf3470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129caf3470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129d875da0"/></to>
    </wire>
    <wire loc="171:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129c9e4d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129cae2bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129cae2bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b129cadf5b8"/></to>
    </wire>
    <wire loc="172:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129c9e3378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129ca77b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129ca77b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129d83c020"/></to>
    </wire>
    <wire loc="177:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129ca76ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cae1e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129cae1e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129cadfb90"/></to>
    </wire>
    <wire loc="182:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129caf1580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b129c7546c0"/></to>
    </wire>
    <wire loc="183:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129caf2510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129cae22e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129cae22e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b129cae0c38"/></to>
    </wire>
    <wire loc="195:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129cae0c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129cb0e020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129cb0e020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b129cb0b430"/></to>
    </wire>
    <wire loc="196:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129cadf5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129cb0e908"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129cb0e908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b129cb0bd18"/></to>
    </wire>
    <wire loc="197:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129cadfb90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cb0d020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129cb0d020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129cb0a328"/></to>
    </wire>
    <wire loc="213:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b129cb0c858"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129cb87270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b129cb87270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b129d8c3870"/></to>
    </wire>
    <wire loc="214:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129cb0b430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129cb87ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b129cb87ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b129d8c2a08"/></to>
    </wire>
    <wire loc="215:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129cb0bd18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129cb86638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b129cb86638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b129d8c1430"/></to>
    </wire>
    <wire loc="216:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129cb0a328"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbc4220"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbc4220"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129d9017a0"/></to>
    </wire>
    <wire loc="223:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b129cb843f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b129cbe5020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b129cbe5020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b129cc11450"/></to>
    </wire>
    <wire loc="224:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b129cb84c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b129caf3d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b129caf3d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b129d8716c8"/></to>
    </wire>
    <wire loc="225:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b129cb855d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b129cbe7148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b129cbe7148"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b129cc12620"/></to>
    </wire>
    <wire loc="230:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129caf2df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b129cbe5948"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b129cbe5948"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b129cc11d78"/></to>
    </wire>
    <wire loc="269:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cbc2168"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cc27830"/></to>
    </wire>
    <wire loc="270:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129cbc1188"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbbba70"/></to>
    </wire>
    <wire loc="273:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b129cbc0020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b129cbbb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129cbec928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbe3020"/></to>
    </wire>
    <wire loc="306:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129cc22b80"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129cf1de78"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129cf1de78"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129cf79428"/></to>
    </wire>
    <wire loc="308:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129cc21bc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129cbc77d8"/></to>
    </wire>
    <wire loc="315:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b129cc1d750"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b129cbbb020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b129cc1c368"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b129cbbb020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="317:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b129cc1b020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b129cbbb020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="318:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b129cc1bab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c7fac50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c7fac50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b129d7a04d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129d79f350"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129c851c68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b129d79b3f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b129c8535b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129d77bb98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129c8c0c60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129d77fd90"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129c8e6678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129d77dba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b129c8e5430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129d77c5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b129c8e5d18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129d77cb90"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b129c8e4328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b129c980020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b129d7a6698"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129c980760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129d7a6dd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129d7a46c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129c97e020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b129d7a4e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b129d7a9a10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b129d7a3920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129d83cdc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129c8c0c60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129d83b890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129ca76ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b129d86e020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b129ca8ed58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b129ca8ed58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b129ca88850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129d86ebd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129d86b140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129d86b140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129ca87b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b129d870458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b129caf2510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129d870d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b129caf2df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b129d86f4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b129caf1580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b129cadb100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129cadda10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b129d8c0450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b129cb855d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b129d8bf268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b129c8535b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b129d8bfc98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b129cb843f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b129d8bd578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b129cb84c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b129d8bc4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b129d8bcc90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b129d8bdd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129d8fc2a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129cbc1188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129d8ff1c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cbc2168"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d8fe290"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b129d900618"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b129cbc0020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b129cc347c8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b129cc10518"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129cd0b2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129cf016f0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b129cc2e880"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b129cc5a458"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cd07438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129cefa208"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b129cc42100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b129cc22b80"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b129cc42e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b129cc1d750"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b129cc41988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b129cc1c368"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b129cc40518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b129cc1b020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129cc3f2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129cc21bc8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129cc45020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cd07438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b129cc3bab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b129cc1bab8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b129cc53130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b129cd13710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b129cd13710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b129bcd77e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b129cc524f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b129cd10990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b129cd10990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129cd40978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cc4b1f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd0f5e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd0f5e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd42668"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b129cc4bd00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b129cd0e140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b129cd0e140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b129bccf4d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b129cc50e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b129cd0d338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b129cd0d338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b129bcc54d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b129cc465e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b129cd0c4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b129cd0c4c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b129cd06cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b129cc3b020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b129c8535b8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b129cc44c60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b129cf327d0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b129ccfcd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b129cf016f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b129d9a0bc8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd42668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd35428"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129cefa208"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129cf3b020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b129cd54830"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b129bce5020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b129cd53af8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b129bce8c78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b129cd58190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b129ce16020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b129ce16020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b129ce5e808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b129cd39c20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b129cd34020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b129cd42020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b129cd36d80"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129cd5a9d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129cd367a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b129cd40978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129cd34c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b129cd6c208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129ce2a748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b129ce2a748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b129d942b80"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129cd6ce30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129ce29c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129ce29c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129d93f268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b129cd31020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b129cdcf020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b129cdcf020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b129cdccdc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b129cd6b600"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b129bb273c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b129cda2b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b129cdc0350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b129bb273c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b129cdc3c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b129bcd77e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b129cdc6de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b129bcd6968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b129cdc2020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b129bcd5af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b129cdc1190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b129bcd4c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b129ce29510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b129d9419a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129d93fb08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129ce27550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b129d93e2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b129d944d88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b129d93ed68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b129ce18838"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b129ce5f160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129ce1f6e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129ce64180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129ce12e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b129ce58020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129ce12e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b129ce55360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b129ce12e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b129ce51770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b129d99cc18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129ce1f6e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b129d997c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b129ce12e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129cee0020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129ce1f6e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129cf3a230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129cf435a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b129cf407f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129cef5020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b129cef5020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b129cef2b90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129ceefc58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129ce1f6e0"/></to>
    </wire>
    <wire loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b129d034c98"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b129d9edcc0"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b129cf92300"/></from>
      <to><interface-ref name="Dissemination" scoped="" ref="0x2b129cfddaf8"/></to>
    </wire>
    <wire loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b129d061020"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b129d9eb020"/></to>
    </wire>
    <wire loc="91:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cfd69b8"/></from>
      <to><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cf8fd08"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129cfd7ba0"/></from>
      <to><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129cf8f020"/></to>
    </wire>
    <wire loc="93:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129cfd50f8"/></from>
      <to><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129cf8e400"/></to>
    </wire>
    <wire loc="94:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b129cfd4cf0"/></from>
      <to><interface-ref name="DataSubReceive" scoped="" ref="0x2b129cf8c020"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b129cfd4020"/></from>
      <to><interface-ref name="DataSubSend" scoped="" ref="0x2b129cf8d130"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b129cfd33f0"/></from>
      <to><interface-ref name="DataSubPacket" scoped="" ref="0x2b129cf8c6c0"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b129cfd2080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b129cf8b488"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129cfd18a8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129cf8abb8"/></to>
    </wire>
    <wire loc="61:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <from><interface-ref name="decodingTask" scoped="" ref="0x2b129cfcd020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Delay" scoped="" ref="0x2b129d060970"/></from>
      <to><interface-ref name="Delay" scoped="" ref="0x2b129d9e9970"/></to>
    </wire>
    <wire loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Dissemination" scoped="" ref="0x2b129d9e8020"/></from>
      <to><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b129cf92300"/></to>
    </wire>
    <wire loc="18:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d9e8a10"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <from><interface-ref name="valueChangedTask" scoped="" ref="0x2b129d9e7a30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b129d04f9e8"/></from>
      <to><interface-ref name="SubSendData" scoped="" ref="0x2b129d054e80"/></to>
    </wire>
    <wire loc="53:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b129d04e7d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b129d053bb0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b129d04eda8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b129d08b4c8"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129d04d738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129d08cab8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129d08cab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <from><interface-ref name="doneTask" scoped="" ref="0x2b129d043a80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b129d088348"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b129d0851e8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b129d08e658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b129d08a938"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b129d0c3020"/></from>
      <to><interface-ref name="AMSubSend" scoped="" ref="0x2b129d0ce6b8"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b129d0c3cc8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b129d0cc4e0"/></to>
    </wire>
    <wire loc="61:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b129d0c23c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b129d0ccb58"/></to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d0c1220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b129d10baf0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b129d112df8"/></to>
    </wire>
    <wire loc="54:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129d10a4a8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6ed3a0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b129d1cb490"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="PktRateJob" scoped="" ref="0x2b129d1c7700"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b129d2074c0"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b129d2074c0"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b129d1fe030"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b129d207c80"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d2229c0"/></to>
    </wire>
    <wire loc="65:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d221020"/></from>
      <to><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b129d1ccc58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d232530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d207c80"/></to>
    </wire>
    <wire loc="52:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b129d1fb3a0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b129d1f9420"/></to>
    </wire>
    <wire loc="53:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b129d1fe030"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b129d1f81c8"/></to>
    </wire>
    <wire loc="50:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="DispatchTimer" scoped="" ref="0x2b129d1f8bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b129d23b8d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b129d23b8d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <from><interface-ref name="dispatch" scoped="" ref="0x2b129d1ebbe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b129d231788"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b129bc9f0c0"/></to>
    </wire>
    <wire loc="51:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d22e2e8"/></from>
      <to><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d232530"/></to>
    </wire>
    <wire loc="54:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b129d22e8f0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b129d1fb3a0"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b129d26e428"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b129d273540"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b129d273540"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b129d1fe030"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b129d273d00"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d263838"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d263e70"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d261758"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b129d26ed00"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b129d1d3060"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129d26f6d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129d20cc58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d232530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d273d00"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b129d255738"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b129d256120"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b129d256120"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b129d1fe030"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b129d2568e0"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d2a9598"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d2a9bd0"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d2a7560"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="QueueStats" scoped="" ref="0x2b129d2541f8"/></from>
      <to><interface-ref name="QueueStatistics" scoped="" ref="0x2b129c579158"/></to>
    </wire>
    <wire loc="65:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="PacketStats" scoped="" ref="0x2b129d2534a0"/></from>
      <to><interface-ref name="PacketStatistics" scoped="" ref="0x2b129c619060"/></to>
    </wire>
    <wire loc="66:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="DissStats" scoped="" ref="0x2b129d251788"/></from>
      <to><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b129cfd8a48"/></to>
    </wire>
    <wire loc="70:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b129d258af8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b129d25cdf0"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d232530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b129d2568e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SinkP" loc="65:SinkP.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TThree" ref="0x2b129bb07d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TThree" ref="0x2b129bb07d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b129bb05630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <value cst="I:400">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SinkC.BootTimer" loc="44(SinkC.BootTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="26:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <documentation loc="11:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="59(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b129c3a3020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SinkC.DistTimer" loc="44(SinkC.DistTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoQueueP" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioP" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <documentation loc="34:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
        <short>&#10; Modifications by Christian Renner from Hamburg University of Technology:&#10; Removed PacketAcknowledgement, and LowPowerListening to comply&#10; with Orinoco&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="42:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="38:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230SlimRadioC" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230SlimRadioP" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC" loc="41:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date February 18th 2015&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerP" loc="6:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator" loc="1(OrinocoDisseminationLayerC.Disseminator):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP" loc="1(OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b129d036590"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoForwardLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC.TimerMilliC" loc="44(OrinocoForwardLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoRadioC.Timer" loc="44(OrinocoRadioC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoConfigC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
        <short>&#10; configuration of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; configuration of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoConfigP" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
        <short>&#10; implementation of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; implementation of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoPathCostHopCountC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoP.SendQueue" loc="42(OrinocoP.SendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bc18358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b129bc186b0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.MsgPool" loc="41(OrinocoP.MsgPool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
            <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP.MsgPool.PoolP" loc="53(OrinocoP.MsgPool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b129d148e68"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.PacketHistory" loc="44(OrinocoP.PacketHistory):../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="OrinocoCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129bc08500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b129bc089b8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
        <short>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoTrafficStatisticsP" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.Job" loc="42(OrinocoTrafficStatisticsC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="0">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EASchedulerC" loc="40:../../../EAJobs/lib/EASchedulerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EASchedulerP" loc="44:../../../EAJobs/lib/EASchedulerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EASchedulerC.DispatchTimer" loc="44(EASchedulerC.DispatchTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerC" loc="40:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerP" loc="42:../../../EAJobs/lib/EAEnergyManagerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC" loc="42(OrinocoTrafficStatisticsC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC" loc="40:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobP" loc="42:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC.Job" loc="42(OrinocoStatsReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="1">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoStatsReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobConfigC" loc="40:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC" loc="40:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobP" loc="42:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingMsg.h">
        <short>&#10; Orinoco Statistics Message&#10;&#10; </short>
        <long>&#10; Orinoco Statistics Message&#10;&#10; @author Christian Renner&#10; @date February 7th 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC.Job" loc="42(OrinocoDebugReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="2">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoDebugReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobConfigC" loc="42:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b129bd04d00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b129bd010c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b129bd01410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b129bd0d608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b129bd0d970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b129bd0dcd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b129bd20060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b129bd9f508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b129bd9f870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b129bd9fbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b129bd9d020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b129be641b8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b129be90380" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b129bea7890" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b129c285528" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c285528"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b129c285878" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b129c28ad48" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b129c28ad48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b129c29c4e8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c29c4e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b129c2b0740" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b129c2b0740"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b129c2ad020" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b129c2ad020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b129c2ad3e8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b129c2ad3e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b129c2adb60" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b129c2adb60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b129c2ab020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b129c2ab7b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b129c2ab7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b129c2f2990" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b129c2f2990"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b129c2f2cf8" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b129c3a3020" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b129c3a3020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b129c3a3310" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b129c3c98e8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b129c3c98e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b129c3c9bd8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c388de8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c388de8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c4d2cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c4d2cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b129c4cf020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c5209f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c5209f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b129c90eab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b129c8fe170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b129ced7210" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b129ced7210"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b129ced7960" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129ced7960"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b129ced7c60" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoDisseminatorC" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b129d036590" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
          <component-ref qname="OrinocoDisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b129d036590"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminatorP" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b129d02f740" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
          <component-ref qname="OrinocoDisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b129d02f740"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b129d164198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b129d164198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b129d1644f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b129d148e68" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b129d148e68"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b129d1451e8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b129d141e50" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b129d141e50"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b129d13d1b8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoCacheC" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc" abstract="">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b129d182020" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129d182020"/></type-var>
        </typedef>
        <constant name="SIZE" ref="0x2b129d182340" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EAJobC" loc="42:../../../EAJobs/lib/EAJobC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="EAPeriodicJobConfigC" loc="42:../../../EAJobs/lib/EAPeriodicJobConfigC.nc" abstract="">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x2b129bc2de18" loc="74:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b129bc2de18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b129bc301a8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b129bc30330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b129bc304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoConfig" ref="0x2b129bc44d68" loc="77:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129bc44d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129bc2e0f0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129bc2e278"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129bc2e400"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129bc2e588"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129bc2e710"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129bc2e898"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129bc2ea20"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129bc2eba8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129bc2ed30"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129bc3d020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129bc3d1a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129bc3d330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129bc3d4b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129bc3d740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129bc3d8c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129bc3da50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129bc3dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x2b129bc5b2b8" loc="86:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b129bc5b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129bc5b608"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b129bc5b790"/>
        <function-ref name="setType" scoped="" ref="0x2b129bc5b918"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b129bc5baa0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129bc5bc28"/>
        <function-ref name="getType" scoped="" ref="0x2b129bc5bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b129bc13668" loc="67:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b129bc13668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b129bc139b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129bc6f350" loc="92:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129bc6f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129bc71020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoDebugReporting" ref="0x2b129bc73830" loc="91:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b129bc73830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bc73b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b129bc31890" loc="71:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b129bc31890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129bc31be0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129bc31d68"/>
        <function-ref name="start" scoped="" ref="0x2b129bc24020"/>
        <function-ref name="stop" scoped="" ref="0x2b129bc241a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b129bc54ac8" loc="84:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129bc54ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129bc54e18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129bc4c020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bc4c1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bc4c330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129bc4c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b129bc62608" loc="89:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129bc62608"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129bc5a670"/>
        <function-ref name="init" scoped="" ref="0x2b129bc5a198"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129bc5ab48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b129bc4b628" loc="87:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129bc4b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bc4ba78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoStatsReporting" ref="0x2b129bc73138" loc="90:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b129bc73138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bc73488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x2b129bc2fcc8" loc="72:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x2b129bc2fcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129bc230a0"/>
        <function-ref name="stop" scoped="" ref="0x2b129bc23228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x2b129bc511b8" loc="85:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x2b129bc511b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bc51508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129bc77c38" loc="93:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129bc77c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129bc70020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129bc701a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b129bc70330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129bc704b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129bc70640"/>
        <function-ref name="get" scoped="" ref="0x2b129bc707c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129bc70950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129bc6e020"/>
        <function-ref name="set" scoped="" ref="0x2b129bc70ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129bc70c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b129bc70de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b129bc551c8" loc="88:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b129bc551c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129bc55518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bc556a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bc55828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BootTimer" ref="0x2b129bc1b598" loc="68:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BootTimer" scoped="" ref="0x2b129bc1b598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129bc2b8f0"/>
        <function-ref name="fired" scoped="" ref="0x2b129bc1a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129bc1ad10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129bc1a8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b129bc2a1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b129bc2bd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129bc1a470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129bc15118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129bc2b320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129bc155b8"/>
        <function-ref name="stop" scoped="" ref="0x2b129bc15a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForecastUpdate" ref="0x2b129bc40a38" loc="80:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForecastUpdate" scoped="" ref="0x2b129bc40a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b129bc42620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForecastValue" ref="0x2b129bc412e0" loc="81:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForecastValue" scoped="" ref="0x2b129bc412e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b129bc3e7e0"/>
        <function-ref name="get" scoped="" ref="0x2b129bc41e60"/>
        <function-ref name="set" scoped="" ref="0x2b129bc3e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DistTimer" ref="0x2b129bc2a7b8" loc="69:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DistTimer" scoped="" ref="0x2b129bc2a7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129bc26a18"/>
        <function-ref name="fired" scoped="" ref="0x2b129bc27158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129bc27e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129bc279f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b129bc252e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129bc26e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129bc275a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129bc29370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129bc26448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129bc29810"/>
        <function-ref name="stop" scoped="" ref="0x2b129bc29cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b129bc9a4c8" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b129bc9a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bc9a818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b129bc9f0c0" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b129bc9f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b129bc9f410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b129bcad9a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b129bcad9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcadcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129bc9ebe8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129bc9ebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b129bca9b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129bca9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b129bcad020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b129bcad1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b129bcad330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b129bcad4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b129bcad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b129bcb9b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b129bcb9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129bcb94f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129bcb94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcb9840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b129bcb8398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b129bcb8398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcb86e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b129bcb4108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b129bcb4108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcb4458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b129bca7a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b129bca7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bca7d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b129bcc37f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b129bcc37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcc3b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b129bcbe5f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b129bcbe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcbe948"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcbead0"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcbec58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcbede0"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc31a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc3330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b129bcb1428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b129bcb1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bcb1778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b129bcf9c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b129bcf9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf85e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf8770"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf88f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf8a80"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf8d90"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf7020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b129bceb7e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b129bceb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcebb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcebcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcea020"/>
        <function-ref name="get" scoped="" ref="0x2b129bcea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcea330"/>
        <function-ref name="set" scoped="" ref="0x2b129bcea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b129bcf47e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b129bcf47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf4b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf4cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf4e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf3020"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf3330"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b129bcfe4d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b129bcfe4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcfe820"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcfe9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcfeb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcfecb8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcfee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcfd020"/>
        <function-ref name="set" scoped="" ref="0x2b129bcfd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcfd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b129bd08af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b129bd08af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd08e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd07020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd07330"/>
        <function-ref name="get" scoped="" ref="0x2b129bd074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd07640"/>
        <function-ref name="set" scoped="" ref="0x2b129bd077c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd07950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b129bcc54d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b129bcc54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc5820"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc5cb8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc4020"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b129bcec1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b129bcec1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcec4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcec678"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcec800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcec988"/>
        <function-ref name="get" scoped="" ref="0x2b129bcecb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcecc98"/>
        <function-ref name="set" scoped="" ref="0x2b129bcece20"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b129bcd77e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b129bcd77e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd7b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd7cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd7e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd6020"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd6330"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b129bce0968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b129bce0968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce0cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce0e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcde020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcde1a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcde330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcde4b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcde640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcde7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b129bce8c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b129bce8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce7020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce74b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bce7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce77c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bce7950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b129bcf1c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b129bcf1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf04b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf07c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf0950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b129bccbc78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b129bccbc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcca020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcca1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcca330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcca4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcca640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcca7c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcca950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bccaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b129bcd4c78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b129bcd4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd34b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd37c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd3950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b129bcdce00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b129bcdce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcdb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcdb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcdb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcdb640"/>
        <function-ref name="get" scoped="" ref="0x2b129bcdb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcdb950"/>
        <function-ref name="set" scoped="" ref="0x2b129bcdbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcdbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b129bce41a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b129bce41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce44f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce4678"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce4800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce4988"/>
        <function-ref name="get" scoped="" ref="0x2b129bce4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce4c98"/>
        <function-ref name="set" scoped="" ref="0x2b129bce4e20"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b129bcfb968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b129bcfb968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcfbcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcfbe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcfa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcfa1a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcfa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcfa4b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcfa640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcfa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b129bd0a7e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b129bd0a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd0ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd0acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd0ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd09020"/>
        <function-ref name="get" scoped="" ref="0x2b129bd091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd09330"/>
        <function-ref name="set" scoped="" ref="0x2b129bd094b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd09640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b129bce24d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b129bce24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce2820"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce29a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce2b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce2cb8"/>
        <function-ref name="get" scoped="" ref="0x2b129bce2e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf5020"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b129bcc71a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b129bcc71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc74f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc7678"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc7800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc7988"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc7c98"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc7e20"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b129bcd0348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b129bcd0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd0698"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd0820"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd09a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd0b30"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd0cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd0e40"/>
        <function-ref name="set" scoped="" ref="0x2b129bccf020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bccf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b129bcf74d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b129bcf74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf7820"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf7cb8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf6020"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b129bcce658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b129bcce658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcce9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcceb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bccecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bccee40"/>
        <function-ref name="get" scoped="" ref="0x2b129bce1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce11a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bce1330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b129bcea968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b129bcea968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bceacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bceae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce91a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bce9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce94b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bce9640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b129bcf3968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b129bcf3968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf3cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf3e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf21a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf24b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf2640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b129bcfd658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b129bcfd658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcfd9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcfdb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcfdcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcfde40"/>
        <function-ref name="get" scoped="" ref="0x2b129bcfc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcfc1a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcfc330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcfc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b129bcc4658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b129bcc4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc4b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc4e40"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd71a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd7330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b129bcd6968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b129bcd6968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd6cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd6e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd5020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd51a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd5330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd54b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd5640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b129bcdeaf0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b129bcdeaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcdee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcdd020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcdd1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcdd330"/>
        <function-ref name="get" scoped="" ref="0x2b129bcdd4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcdd640"/>
        <function-ref name="set" scoped="" ref="0x2b129bcdd7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcdd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b129bce7e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b129bce7e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce6640"/>
        <function-ref name="get" scoped="" ref="0x2b129bce67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce6950"/>
        <function-ref name="set" scoped="" ref="0x2b129bce6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b129bcf0e00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b129bcf0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcef1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcef330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcef4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcef640"/>
        <function-ref name="get" scoped="" ref="0x2b129bcef7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcef950"/>
        <function-ref name="set" scoped="" ref="0x2b129bcefad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcefc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b129bccae00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b129bccae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc9640"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc9950"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b129bcd3e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b129bcd3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd22e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd2470"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd25f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd2780"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd2908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd2a90"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd2c18"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b129bcda020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b129bcda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcda370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcda4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcda680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcda808"/>
        <function-ref name="get" scoped="" ref="0x2b129bcda990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcdab18"/>
        <function-ref name="set" scoped="" ref="0x2b129bcdaca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcdae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b129bcfaaf0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b129bcfaaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcfae40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf9330"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf9640"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b129bcd8348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b129bcd8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd8898"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd8a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd8ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd8d30"/>
        <function-ref name="get" scoped="" ref="0x2b129bceb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bceb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bceb330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bceb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b129bcf5658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b129bcf5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf59a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf5b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf5cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf5e40"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf41a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf4330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b129bcff348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b129bcff348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcff698"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcff820"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcff9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcffb30"/>
        <function-ref name="get" scoped="" ref="0x2b129bcffcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcffe40"/>
        <function-ref name="set" scoped="" ref="0x2b129bcfe020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcfe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b129bd09968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b129bd09968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd09cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd09e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd08020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd081a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd08330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd084b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd08640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b129bcc6348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b129bcc6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc6698"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc6820"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc6b30"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc6e40"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc5020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b129bccf4d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b129bccf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bccf820"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bccf9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bccfb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bccfcb8"/>
        <function-ref name="get" scoped="" ref="0x2b129bccfe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcce020"/>
        <function-ref name="set" scoped="" ref="0x2b129bcce1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b129bcee020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b129bcee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcee370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcee4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcee680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcee808"/>
        <function-ref name="get" scoped="" ref="0x2b129bcee990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bceeb18"/>
        <function-ref name="set" scoped="" ref="0x2b129bceeca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bceee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b129bce17e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b129bce17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce1b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce1cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce1e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce0020"/>
        <function-ref name="get" scoped="" ref="0x2b129bce01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce0330"/>
        <function-ref name="set" scoped="" ref="0x2b129bce04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b129bce9af0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b129bce9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce8020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce8330"/>
        <function-ref name="get" scoped="" ref="0x2b129bce84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce8640"/>
        <function-ref name="set" scoped="" ref="0x2b129bce87c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b129bcf2af0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b129bcf2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf2e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf1330"/>
        <function-ref name="get" scoped="" ref="0x2b129bcf14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcf1640"/>
        <function-ref name="set" scoped="" ref="0x2b129bcf17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcf1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b129bcfc7e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b129bcfc7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcfcb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcfccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcfce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcfb020"/>
        <function-ref name="get" scoped="" ref="0x2b129bcfb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcfb330"/>
        <function-ref name="set" scoped="" ref="0x2b129bcfb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcfb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b129bcb3a70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b129bcb3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcb3dc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bccb020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bccb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bccb330"/>
        <function-ref name="get" scoped="" ref="0x2b129bccb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bccb640"/>
        <function-ref name="set" scoped="" ref="0x2b129bccb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bccb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b129bcd5af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b129bcd5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd5e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd4020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd4330"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd4640"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd47c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b129bcddc78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b129bcddc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcdc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcdc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcdc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcdc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcdc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcdc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcdc950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcdcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b129bce5020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b129bce5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce5808"/>
        <function-ref name="get" scoped="" ref="0x2b129bce5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce5b18"/>
        <function-ref name="set" scoped="" ref="0x2b129bce5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b129bcf6658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b129bcf6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcf69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcf6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcf6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcf6e40"/>
        <function-ref name="get" scoped="" ref="0x2b129bd0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd0a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd0a330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd0a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b129bce3348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b129bce3348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bce3698"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bce3820"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bce39a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bce3b30"/>
        <function-ref name="get" scoped="" ref="0x2b129bce3cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bce3e40"/>
        <function-ref name="set" scoped="" ref="0x2b129bce2020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bce21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b129bcd91a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b129bcd91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd94f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd9678"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd9800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd9988"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd9c98"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd9e20"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b129bcc8020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b129bcc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcc8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcc84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcc8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcc8808"/>
        <function-ref name="get" scoped="" ref="0x2b129bcc8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcc8b18"/>
        <function-ref name="set" scoped="" ref="0x2b129bcc8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcc8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b129bcd1100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b129bcd1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bcd1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bcd15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bcd1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bcd18e8"/>
        <function-ref name="get" scoped="" ref="0x2b129bcd1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bcd1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b129bcd1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b129bcd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd42120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd42120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd42470"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd425f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd42780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd42908"/>
        <function-ref name="get" scoped="" ref="0x2b129bd42a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd42c18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd42da0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd555b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd555b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd55908"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd55a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd55c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd55da0"/>
        <function-ref name="get" scoped="" ref="0x2b129bd54020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd541a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd54330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd45dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd45dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd44170"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd442f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd44480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd44608"/>
        <function-ref name="get" scoped="" ref="0x2b129bd44790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd44918"/>
        <function-ref name="set" scoped="" ref="0x2b129bd44aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd44c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd572a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd572a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd575f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd57780"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd57908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd57a90"/>
        <function-ref name="get" scoped="" ref="0x2b129bd57c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd57da0"/>
        <function-ref name="set" scoped="" ref="0x2b129bd56020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd54740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd54740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd54a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd54c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd54da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd53020"/>
        <function-ref name="get" scoped="" ref="0x2b129bd531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd53330"/>
        <function-ref name="set" scoped="" ref="0x2b129bd534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd43020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd43370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd434f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd43680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd43808"/>
        <function-ref name="get" scoped="" ref="0x2b129bd43990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd43b18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd43ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd43e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd56430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd56430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd56780"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd56908"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd56a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd56c18"/>
        <function-ref name="get" scoped="" ref="0x2b129bd56da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd55020"/>
        <function-ref name="set" scoped="" ref="0x2b129bd551a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd55330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bd538c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bd538c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd53c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd53da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd52020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd521a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd52330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd524b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd52640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2df520" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2df520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2df870"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2df9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2dfb80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2dfd08"/>
        <function-ref name="get" scoped="" ref="0x2b129d2de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2de1a8"/>
        <function-ref name="set" scoped="" ref="0x2b129d2de330"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2dc6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2dc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2dc9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2dcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2dcd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2db020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2db330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2db4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2d9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2d9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2d9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2d9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2d9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2d8020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2d8330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2d84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2d6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2d6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2d6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2d6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2d6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2d5020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2d51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2d5330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2d54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2d3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2d3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2d3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2d3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2d2020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2d21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2d2330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2d24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2d2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2d0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2d0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2d0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2d0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2cf020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2cf330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2cf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2cd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2cd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2cda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2cdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2cdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2cc020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2cc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2cc330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2cc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d2ca710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d2ca710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d2caa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d2cabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d2cad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d2c9020"/>
        <function-ref name="get" scoped="" ref="0x2b129d2c91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d2c9330"/>
        <function-ref name="set" scoped="" ref="0x2b129d2c94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d2c9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd60bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd60bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd5f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd5f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd5f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd5f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd5f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd5f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd5f950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd5fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd5c020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd5c370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd5c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd5c680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd5c808"/>
        <function-ref name="get" scoped="" ref="0x2b129bd5c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd5cb18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd5cca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd5ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd62930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd62930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd62c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd62e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd61020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd611a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd61330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd614b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd61640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd5fd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd5fd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd5e0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd5e260"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd5e3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd5e570"/>
        <function-ref name="get" scoped="" ref="0x2b129bd5e6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd5e880"/>
        <function-ref name="set" scoped="" ref="0x2b129bd5ea08"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd5eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd5a120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd5a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd5a470"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd5a5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd5a780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd5a908"/>
        <function-ref name="get" scoped="" ref="0x2b129bd5aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd5ac18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd5ada0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd61a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd61a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd61da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd60020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd601a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd60330"/>
        <function-ref name="get" scoped="" ref="0x2b129bd604b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd60640"/>
        <function-ref name="set" scoped="" ref="0x2b129bd607c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd60950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd5ee18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd5ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd5d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd5d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd5d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd5d640"/>
        <function-ref name="get" scoped="" ref="0x2b129bd5d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd5d950"/>
        <function-ref name="set" scoped="" ref="0x2b129bd5dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd5dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bd592a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bd592a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd595f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd59780"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd59908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd59a90"/>
        <function-ref name="get" scoped="" ref="0x2b129bd59c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd59da0"/>
        <function-ref name="set" scoped="" ref="0x2b129bd58020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3516a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3516a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3519f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d351b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d351d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d350020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d350330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d350640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d34e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d34e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d34ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d34ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d34ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d34d020"/>
        <function-ref name="get" scoped="" ref="0x2b129d34d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d34d330"/>
        <function-ref name="set" scoped="" ref="0x2b129d34d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d34d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d34b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d34b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d34ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d34bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d34bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d34a020"/>
        <function-ref name="get" scoped="" ref="0x2b129d34a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d34a330"/>
        <function-ref name="set" scoped="" ref="0x2b129d34a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d34a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d348710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d348710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d348a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d348be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d348d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d347020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d347330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d347640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d345710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d345710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d345a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d345be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d345d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d344020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d344330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d344640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d342710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d342710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d342a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d342be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d342d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d341020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d341330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d341640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d33f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d33f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d33fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d33fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d33fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d33e020"/>
        <function-ref name="get" scoped="" ref="0x2b129d33e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d33e330"/>
        <function-ref name="set" scoped="" ref="0x2b129d33e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d33e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d33c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d33c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d33ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d33cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d33cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d33b020"/>
        <function-ref name="get" scoped="" ref="0x2b129d33b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d33b330"/>
        <function-ref name="set" scoped="" ref="0x2b129d33b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d33b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd67740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd67740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd67a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd67c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd67da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd65020"/>
        <function-ref name="get" scoped="" ref="0x2b129bd651a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd65330"/>
        <function-ref name="set" scoped="" ref="0x2b129bd654b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd65640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd63bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd63bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd78020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd781a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd78330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd784b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd78640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd787c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd78950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd78ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd69500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd69500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd69850"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd699d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd69b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd69ce8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd69e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd68020"/>
        <function-ref name="set" scoped="" ref="0x2b129bd681a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd68330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd658c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd658c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd65c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd65da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd64020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd641a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd64330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd644b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd64640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd647c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd78d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd78d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd770d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd77260"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd773e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd77570"/>
        <function-ref name="get" scoped="" ref="0x2b129bd776f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd77880"/>
        <function-ref name="set" scoped="" ref="0x2b129bd77a08"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd77b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd685b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd68908"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd68a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd68c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd68da0"/>
        <function-ref name="get" scoped="" ref="0x2b129bd67020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd671a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd67330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd674b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd64a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd64a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd64da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd63020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd631a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd63330"/>
        <function-ref name="get" scoped="" ref="0x2b129bd634b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd63640"/>
        <function-ref name="set" scoped="" ref="0x2b129bd637c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd63950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bd77e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bd77e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd761a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd76330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd764b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd76640"/>
        <function-ref name="get" scoped="" ref="0x2b129bd767c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd76950"/>
        <function-ref name="set" scoped="" ref="0x2b129bd76ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd76c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3c76a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3c76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3c79f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3c7b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3c7d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3c6020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3c61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3c6330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3c64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3c6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3c4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3c4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3c4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3c4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3c4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3c3020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3c31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3c3330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3c34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3c3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3c1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3c1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3c1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3c1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3c1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3c0020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3c01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3c0330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3c04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3be710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3be710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3bea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3bebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3bed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3bd020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3bd330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3bb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3bb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3bba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3bbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3bbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3ba020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3ba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3ba330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3ba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3ba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3b8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3b8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3b8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3b8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3b8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3b7020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3b71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3b7330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3b74b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3b5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3b5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3b5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3b5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3b4020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3b41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3b4330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3b44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3b4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3b2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3b2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3b2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3b2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3b2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3b1020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3b11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3b1330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3b14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3b1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd83120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd83120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd83470"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd835f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd83780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd83908"/>
        <function-ref name="get" scoped="" ref="0x2b129bd83a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd83c18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd83da0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd805b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd805b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd80908"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd80a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd80c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd80da0"/>
        <function-ref name="get" scoped="" ref="0x2b129bd7f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd7f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd7f330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd7f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd70e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd70e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd6f1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd6f348"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd6f4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd6f658"/>
        <function-ref name="get" scoped="" ref="0x2b129bd6f7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd6f968"/>
        <function-ref name="set" scoped="" ref="0x2b129bd6faf0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd6fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd822a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd822a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd825f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd82780"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd82908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd82a90"/>
        <function-ref name="get" scoped="" ref="0x2b129bd82c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd82da0"/>
        <function-ref name="set" scoped="" ref="0x2b129bd81020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd7f740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd7f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd7fa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd7fc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd7fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd7e020"/>
        <function-ref name="get" scoped="" ref="0x2b129bd7e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd7e330"/>
        <function-ref name="set" scoped="" ref="0x2b129bd7e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd7e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd6e020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd6e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd6e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd6e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd6e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd6e808"/>
        <function-ref name="get" scoped="" ref="0x2b129bd6e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd6eb18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd6eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd6ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd81430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd81430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd81780"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd81908"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd81a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd81c18"/>
        <function-ref name="get" scoped="" ref="0x2b129bd81da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd80020"/>
        <function-ref name="set" scoped="" ref="0x2b129bd801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd80330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bd7e8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bd7e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd7ec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd7eda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd7d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd7d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd7d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd7d640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3d26a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3d26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3d29f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3d2b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3d2d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3d1020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3d11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3d1330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3d14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3d1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3cf710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3cf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3cfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3cfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3cfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d3ce020"/>
        <function-ref name="get" scoped="" ref="0x2b129d3ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d3ce330"/>
        <function-ref name="set" scoped="" ref="0x2b129d3ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d3ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d3cc710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d3cc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d3cca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d3ccbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d3ccd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d43c020"/>
        <function-ref name="get" scoped="" ref="0x2b129d43c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d43c330"/>
        <function-ref name="set" scoped="" ref="0x2b129d43c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d43c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d43a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d43a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d43aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d43abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d43ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d439020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d439330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4394b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d439640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d437710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d437710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d437a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d437be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d437d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d436020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d436330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4364b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d436640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d434710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d434710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d434a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d434be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d434d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d433020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4331a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d433330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4334b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d433640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d431710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d431710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d431a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d431be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d431d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d430020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d430330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d430640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d42e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d42e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d42ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d42ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d42ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d42d020"/>
        <function-ref name="get" scoped="" ref="0x2b129d42d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d42d330"/>
        <function-ref name="set" scoped="" ref="0x2b129d42d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d42d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd8cbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd8cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd8b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd8b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd8b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd8b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd8b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd8b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd8b950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd8bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd88020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd88020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd88370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd884f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd88680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd88808"/>
        <function-ref name="get" scoped="" ref="0x2b129bd88990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd88b18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd88ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd88e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd8e930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd8e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd8ec80"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd8ee08"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd8d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd8d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd8d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd8d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd8d640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd8d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd8bd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd8bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd8a0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd8a260"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd8a3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd8a570"/>
        <function-ref name="get" scoped="" ref="0x2b129bd8a6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd8a880"/>
        <function-ref name="set" scoped="" ref="0x2b129bd8aa08"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd8ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd87120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd87120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd87470"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd875f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd87780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd87908"/>
        <function-ref name="get" scoped="" ref="0x2b129bd87a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd87c18"/>
        <function-ref name="set" scoped="" ref="0x2b129bd87da0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd8da50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd8da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd8dda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd8c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd8c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd8c330"/>
        <function-ref name="get" scoped="" ref="0x2b129bd8c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd8c640"/>
        <function-ref name="set" scoped="" ref="0x2b129bd8c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd8c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd8ae18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd8ae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd891a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd89330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd894b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd89640"/>
        <function-ref name="get" scoped="" ref="0x2b129bd897c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd89950"/>
        <function-ref name="set" scoped="" ref="0x2b129bd89ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd89c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bd862a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bd862a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd865f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd86780"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd86908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd86a90"/>
        <function-ref name="get" scoped="" ref="0x2b129bd86c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd86da0"/>
        <function-ref name="set" scoped="" ref="0x2b129bd84020"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d44e6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d44e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d44e9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d44eb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d44ed08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d44d020"/>
        <function-ref name="get" scoped="" ref="0x2b129d44d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d44d330"/>
        <function-ref name="set" scoped="" ref="0x2b129d44d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d44d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d44b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d44b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d44ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d44bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d44bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d44a020"/>
        <function-ref name="get" scoped="" ref="0x2b129d44a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d44a330"/>
        <function-ref name="set" scoped="" ref="0x2b129d44a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d44a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d448710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d448710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d448a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d448be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d448d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d447020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d447330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d447640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d445710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d445710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d445a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d445be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d445d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d444020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d444330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d444640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d442710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d442710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d442a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d442be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d442d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d441020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d441330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d441640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d43f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d43f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d43fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d43fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d43fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d43e020"/>
        <function-ref name="get" scoped="" ref="0x2b129d43e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d43e330"/>
        <function-ref name="set" scoped="" ref="0x2b129d43e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d43e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4ae710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4ae710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4aea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4aebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4aed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4ad020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4ad1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4ad330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4ad4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4ad640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4ab710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4ab710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4aba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4abbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4abd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4aa020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4aa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4aa330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4aa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b129bd95740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b129bd95740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd95a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd95c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd95da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd94020"/>
        <function-ref name="get" scoped="" ref="0x2b129bd941a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd94330"/>
        <function-ref name="set" scoped="" ref="0x2b129bd944b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd94640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b129bd91bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b129bd91bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd90020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd901a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd90330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd904b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd90640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd907c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd90950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd90ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b129bd97500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b129bd97500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd97850"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd979d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd97b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd97ce8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd97e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd96020"/>
        <function-ref name="set" scoped="" ref="0x2b129bd961a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b129bd948c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b129bd948c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd94c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd94da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd93020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd931a8"/>
        <function-ref name="get" scoped="" ref="0x2b129bd93330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd934b8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd93640"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd937c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b129bd90d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b129bd90d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bda70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bda7260"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bda73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bda7570"/>
        <function-ref name="get" scoped="" ref="0x2b129bda76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bda7880"/>
        <function-ref name="set" scoped="" ref="0x2b129bda7a08"/>
        <function-ref name="clr" scoped="" ref="0x2b129bda7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b129bd965b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b129bd965b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd96908"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd96a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd96c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd96da0"/>
        <function-ref name="get" scoped="" ref="0x2b129bd95020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd951a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bd95330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b129bd93a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b129bd93a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bd93da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bd91020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bd911a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bd91330"/>
        <function-ref name="get" scoped="" ref="0x2b129bd914b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bd91640"/>
        <function-ref name="set" scoped="" ref="0x2b129bd917c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bd91950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b129bda7e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b129bda7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bda61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bda6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bda64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bda6640"/>
        <function-ref name="get" scoped="" ref="0x2b129bda67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bda6950"/>
        <function-ref name="set" scoped="" ref="0x2b129bda6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bda6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4cc6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4cc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4cc9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4ccb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4ccd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4cb020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4cb330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4c9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4c9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4c9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4c9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4c9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4c8020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4c81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4c8330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4c84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4c8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4c6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4c6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4c6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4c6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4c6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4c5020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4c51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4c5330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4c54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4c5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4c3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4c3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4c3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4c3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4c3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4c2020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4c21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4c2330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4c24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4c2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4c0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4c0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4c0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4c0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4bf020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4bf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4bf330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4bf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4bd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4bd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4bda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4bdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4bdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4bc020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4bc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4bc330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4bc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4bc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4ba710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4ba710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4baa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4babe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4bad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4b9020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4b91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4b9330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4b94b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4b9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129d4b7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129d4b7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129d4b7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129d4b7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129d4b7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129d4b6020"/>
        <function-ref name="get" scoped="" ref="0x2b129d4b61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129d4b6330"/>
        <function-ref name="set" scoped="" ref="0x2b129d4b64b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129d4b6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bda03e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bda03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bda0730"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bda08b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bda0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bda0bc8"/>
        <function-ref name="get" scoped="" ref="0x2b129bda0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdb9020"/>
        <function-ref name="set" scoped="" ref="0x2b129bdb91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdb9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdb5c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdb5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdb4020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdb41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdb4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdb44b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdb4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdb47c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bdb4950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdb4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdc83e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdc83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdc8730"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdc88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdc8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdc8bc8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdc8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdc7020"/>
        <function-ref name="set" scoped="" ref="0x2b129bdc71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdc7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdc3c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdc3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdc2020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdc21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdc2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdc24b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdc2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdc27c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bdc2950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdc2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdd53e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdd53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdd5730"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdd58b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdd5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdd5bc8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdd5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdd4020"/>
        <function-ref name="set" scoped="" ref="0x2b129bdd41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdd4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdd1c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdd1c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdd0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdd01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdd0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdd04b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdd0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdd07c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bdd0950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdd0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bde3480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bde3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bde37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bde3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bde3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bde3c68"/>
        <function-ref name="get" scoped="" ref="0x2b129bde3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bde2020"/>
        <function-ref name="set" scoped="" ref="0x2b129bde21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bde2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bddec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bddec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bddd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bddd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bddd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bddd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bddd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bddd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bddd950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdddad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdd9520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdd9520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdd9870"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdd99f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdd9b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdd9d08"/>
        <function-ref name="get" scoped="" ref="0x2b129bdd8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdd81a8"/>
        <function-ref name="set" scoped="" ref="0x2b129bdd8330"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdd84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdeccd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdeccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdeb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdeb228"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdeb3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdeb538"/>
        <function-ref name="get" scoped="" ref="0x2b129bdeb6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdeb848"/>
        <function-ref name="set" scoped="" ref="0x2b129bdeb9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdebb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bde63e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bde63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bde6730"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bde68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bde6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bde6bc8"/>
        <function-ref name="get" scoped="" ref="0x2b129bde6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bde5020"/>
        <function-ref name="set" scoped="" ref="0x2b129bde51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bde5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdfac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdfac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdf9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdf91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdf9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdf94b8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdf9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdf97c8"/>
        <function-ref name="set" scoped="" ref="0x2b129bdf9950"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdf9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdf43e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdf43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129bdf4730"/>
        <function-ref name="isInput" scoped="" ref="0x2b129bdf48b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129bdf4a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129bdf4bc8"/>
        <function-ref name="get" scoped="" ref="0x2b129bdf4d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129bdf3020"/>
        <function-ref name="set" scoped="" ref="0x2b129bdf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b129bdf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b129bdf0c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b129bdf0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129be06020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129be061a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129be06330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129be064b8"/>
        <function-ref name="get" scoped="" ref="0x2b129be06640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129be067c8"/>
        <function-ref name="set" scoped="" ref="0x2b129be06950"/>
        <function-ref name="clr" scoped="" ref="0x2b129be06ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129be2c4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129be2c4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129be2c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b129be2cae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129be2cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b129be2ce30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b129be2b020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b129be2b1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b129be2b330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b129be2b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b129be5b418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b129be5b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129be5b768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b129bcafc38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b129bcafc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b129be5c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b129be5cce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b129be5cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129be5b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b129be5c308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b129be5c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129be5c658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b129be5c7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b129be5c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b129ba301c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b129ba301c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129ba30518"/>
        <function-ref name="runTask" scoped="" ref="0x2b129ba306a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b129ba575c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b129ba575c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129ba57918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b129ba57aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b129ba57c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b129bb01c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b129bb01c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bb0e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bb0e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b129bb0b168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b129bb0b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b129bb0b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b129bb02d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b129bb02d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bb01170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b129bb012f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b129bb01480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b129bb26988" loc="88:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b129bb26988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b129bb26cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b129ba56e30" loc="84:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b129ba56e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b129bb2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b129bb273c8" loc="85:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b129bb273c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b129bb27718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129c2f7800" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c2f7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c2f7b50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c2f7cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c2f7e60"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c2f6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c2f61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c2f63f0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c2f63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c2f6740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c2f68c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c2f6a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c2f6bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c2f6d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129c2f5020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129c2f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c2f5370"/>
        <function-ref name="source" scoped="" ref="0x2b129c2f54f8"/>
        <function-ref name="address" scoped="" ref="0x2b129c2f5680"/>
        <function-ref name="destination" scoped="" ref="0x2b129c2f5808"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c2f5990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c2f5b18"/>
        <function-ref name="type" scoped="" ref="0x2b129c2f5ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b129c2f5e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c2f4020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c2f41a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c2f4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b129c2f45b8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b129c2f45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b129c2f4908"/>
        <function-ref name="noAck" scoped="" ref="0x2b129c2f4a90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b129c2f4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129d5cf7c8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129d5cf7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d5cfb18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d5cfca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d5cfe28"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d5ce020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d5ce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b129d5ce450" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129d5ce450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d5ce7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d5ce928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d5ceab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d5cec38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d5cedc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b129d5cd060" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129d5cd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129d5cd3b0"/>
        <function-ref name="source" scoped="" ref="0x2b129d5cd538"/>
        <function-ref name="address" scoped="" ref="0x2b129d5cd6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b129d5cd848"/>
        <function-ref name="setSource" scoped="" ref="0x2b129d5cd9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129d5cdb58"/>
        <function-ref name="type" scoped="" ref="0x2b129d5cdce0"/>
        <function-ref name="setType" scoped="" ref="0x2b129d5cde68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129d5cc020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129d5cc1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129d5cc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129bea95d8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129bea95d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129bea9928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bea9ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bea9c38"/>
        <function-ref name="cancel" scoped="" ref="0x2b129bea9dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129bea8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b129beed6f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129beed6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129beeda68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129beedbf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129beedd78"/>
        <function-ref name="cancel" scoped="" ref="0x2b129beec020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129beec1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129beee920" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129beee920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129beeec90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129beeee18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129beed020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129beed1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129beed330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129beeba10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129beeba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129beebd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129beea020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129beea1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129beea330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129beea4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b129beea780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b129beea780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129beeaad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129beeac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b129bee8020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b129bee8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bee8370"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bee84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b129beec3f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129beec3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129beec740"/>
        <function-ref name="source" scoped="" ref="0x2b129beec8c8"/>
        <function-ref name="address" scoped="" ref="0x2b129beeca50"/>
        <function-ref name="destination" scoped="" ref="0x2b129beecbd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b129beecd60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129beeb020"/>
        <function-ref name="type" scoped="" ref="0x2b129beeb1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b129beeb330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129beeb4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129beeb640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129beeb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129bf02850" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129bf02850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129bf02ba0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129bf02d28"/>
        <function-ref name="start" scoped="" ref="0x2b129beff020"/>
        <function-ref name="stop" scoped="" ref="0x2b129beff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129beff920" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129beff920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129beffc70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129beffdf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129befe020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129befe1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129befe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129befd0c0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129befd0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129befd410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129befd598"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129befd720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129befd8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129befda30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129befeab0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129befeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129befee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129befbc80" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129befbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129befa020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129befa1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b129befa330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129befa4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129befa640"/>
        <function-ref name="get" scoped="" ref="0x2b129befa7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129befa950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129bef9020"/>
        <function-ref name="set" scoped="" ref="0x2b129befaad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129befac60"/>
        <function-ref name="led2On" scoped="" ref="0x2b129befade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b129befb348" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129befb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b129befb698"/>
        <function-ref name="noAck" scoped="" ref="0x2b129befb820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b129befb9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129befdcd0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129befdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129befc0a0"/>
        <function-ref name="source" scoped="" ref="0x2b129befc228"/>
        <function-ref name="address" scoped="" ref="0x2b129befc3b0"/>
        <function-ref name="destination" scoped="" ref="0x2b129befc538"/>
        <function-ref name="setSource" scoped="" ref="0x2b129befc6c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129befc848"/>
        <function-ref name="type" scoped="" ref="0x2b129befc9d0"/>
        <function-ref name="setType" scoped="" ref="0x2b129befcb58"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129befcce0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129befce68"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129befb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129bf54308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129bf54308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129bf54658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bf547e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bf54968"/>
        <function-ref name="cancel" scoped="" ref="0x2b129bf54af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129bf54c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129bf53020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129bf53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bf53370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129bef7460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129bef7460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129bef77d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bef7958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bef7ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129bef7c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129bef7df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129bf56d20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129bf56d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129bf550a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129bf55228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bf553b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bf55538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129bf556c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129bf58180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129bf58180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bf584f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b129bf55908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129bf55908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b129bf55c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b129bf55de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b129bf54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129bf58738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129bf58738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129bf58a88"/>
        <function-ref name="source" scoped="" ref="0x2b129bf58c10"/>
        <function-ref name="address" scoped="" ref="0x2b129bf58d98"/>
        <function-ref name="destination" scoped="" ref="0x2b129bf56020"/>
        <function-ref name="setSource" scoped="" ref="0x2b129bf561a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129bf56330"/>
        <function-ref name="type" scoped="" ref="0x2b129bf564b8"/>
        <function-ref name="setType" scoped="" ref="0x2b129bf56640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129bf567c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129bf56950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129bf56ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129bf4f728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129bf4f728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129bf4fa78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129bf4fc00"/>
        <function-ref name="start" scoped="" ref="0x2b129bf4fd88"/>
        <function-ref name="stop" scoped="" ref="0x2b129bf4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129bf6b208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129bf6b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129bf6b558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129bf6b6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129bf6b868"/>
        <function-ref name="cancel" scoped="" ref="0x2b129bf6b9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129bf6bb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129bf4f110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129bf4f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bf4f460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129bf4e760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129bf4e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129bf4eab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129bf698f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129bf698f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129bf69c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129bf69dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b129bf68020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129bf681a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129bf68330"/>
        <function-ref name="get" scoped="" ref="0x2b129bf684b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129bf68640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129bf68c60"/>
        <function-ref name="set" scoped="" ref="0x2b129bf687c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129bf68950"/>
        <function-ref name="led2On" scoped="" ref="0x2b129bf68ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b129bf69020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b129bf69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b129bf69370"/>
        <function-ref name="offset" scoped="" ref="0x2b129bf694f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b129bf69680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129bf82da8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129bf82da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129bf81170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129bf812f8"/>
        <function-ref name="start" scoped="" ref="0x2b129bf81480"/>
        <function-ref name="stop" scoped="" ref="0x2b129bf81608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b129bfde830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b129bfde830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bfdeb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bfded08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b129bf8f398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b129bf8f398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129bf8f6e8"/>
        <function-ref name="stop" scoped="" ref="0x2b129bf8f870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b129bfb4d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b129bfb4d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bfb30f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bfb3278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129bf82790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129bf82790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129bf82ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b129bf8ce40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b129bf8ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b129bf8e1c0"/>
        <function-ref name="flush" scoped="" ref="0x2b129bf8e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b129bfe0020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b129bfe0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bfe0370"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bfe04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b129bf91b38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b129bf91b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b129bf96020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b129bf961a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b129bf96330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b129bf964b8"/>
        <function-ref name="putData" scoped="" ref="0x2b129bf96640"/>
        <function-ref name="putDone" scoped="" ref="0x2b129bf967c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b129bf96950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129bf96bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129bf96bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129bf95020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129bf951a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b129bf95330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129bf954b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129bf95640"/>
        <function-ref name="get" scoped="" ref="0x2b129bf957c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129bf95950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129bf8f020"/>
        <function-ref name="set" scoped="" ref="0x2b129bf95ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129bf95c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b129bf95de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b129bfda918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b129bfda918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129bfdac68"/>
        <function-ref name="runTask" scoped="" ref="0x2b129bfdadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b129bf7b950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b129bf7b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b129bf7bca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b129bf7be28"/>
        <function-ref name="startSend" scoped="" ref="0x2b129bf80020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b129bf801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b129bf97b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b129bf97b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b129bf7f020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b129bf7f1a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b129bf7f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b129c0ae100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b129c0ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c0ae450"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c0ae5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129c0b3020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129c0b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0b3390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c0b3518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c0b36a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c0b3828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c0b39b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b129c0ae8a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b129c0ae8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c0aebf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c0aed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c0b4868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c0b4868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c0b4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b129c0b3db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b129c0b3db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b129bbe44b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b129c0b1170"/>
        <function-ref name="offset" scoped="" ref="0x2b129c0b12f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b129c0b1480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129c0b0a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c0b0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c0b0da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c0af020"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c0af1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c0af330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c0af4b8"/>
        <function-ref name="get" scoped="" ref="0x2b129c0af640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c0af7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c0afde8"/>
        <function-ref name="set" scoped="" ref="0x2b129c0afad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c0af950"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c0afc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b129c0b0020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b129c0b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b129c0b0370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b129c0b04f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b129c0b0680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b129c0b0808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b129c0b16c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b129c0b16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b129c0b1a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b129c0b1ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b129c0b1d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b129c0c0448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b129c0c0448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0c0798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b129c0c0920"/>
        <function-ref name="receive" scoped="" ref="0x2b129c0c0aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b129c0c0c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b129c0c0db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b129c0a8020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c0a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b129c0acb30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b129c0acb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b129c0ace80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b129c0a9030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b129c0a91b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b129c0a9340"/>
        <function-ref name="putData" scoped="" ref="0x2b129c0a94c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b129c0a9650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b129c0a97d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129c0a8420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c0a8420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c0a8770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c0a88f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c0a8a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c0a8c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c0a8d90"/>
        <function-ref name="get" scoped="" ref="0x2b129c0a7020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c0a71a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c0a77c8"/>
        <function-ref name="set" scoped="" ref="0x2b129c0a7330"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c0a74b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c0a7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b129c0e8290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b129c0e8290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0e85e0"/>
        <function-ref name="receive" scoped="" ref="0x2b129c0e8768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b129c0cb0c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b129c0cb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0cb410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b129c0cb598"/>
        <function-ref name="receive" scoped="" ref="0x2b129c0cb720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b129c0cb8a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b129c0cba30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b129c0cbbb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c0cbd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b129c0ab8b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b129c0ab8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c0abc00"/>
        <function-ref name="stop" scoped="" ref="0x2b129c0abd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b129c0ecaf0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b129c0ecaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0ece40"/>
        <function-ref name="receive" scoped="" ref="0x2b129c0e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b129c0e7310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b129c0e7310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c0e7660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b129c0e77e8"/>
        <function-ref name="receive" scoped="" ref="0x2b129c0e7970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b129c0e7af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b129c0e7c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b129c0e7e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c0e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b129c0e0398" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c0e0398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c0e5130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c0e5a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c0e55b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c0e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b129c0ec338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b129c0ec338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c0ec688"/>
        <function-ref name="stop" scoped="" ref="0x2b129c0ec810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b129c132780" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b129c132780"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c132ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b129c132c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b129c130020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b129c130020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c130370"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1304f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c0dd9f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c0dd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c0ddd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b129c131020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b129c131020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c131370"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b129c1314f8"/>
        <function-ref name="receive" scoped="" ref="0x2b129c131680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b129c131808"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b129c131990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b129c131b18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c131ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b129c12e640" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c12e640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c12d3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c12dd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c12d878"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c12b1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b129c12f020" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b129c12f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b129c12f370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b129c12f4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b129c12f680"/>
        <function-ref name="txDone" scoped="" ref="0x2b129c12f808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b129c12f990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b129c12fb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b129c12fca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b129c12fe28"/>
        <function-ref name="tx" scoped="" ref="0x2b129c12e020"/>
        <function-ref name="rx" scoped="" ref="0x2b129c12e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b129c132020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b129c132020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c132370"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1324f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b129c1307c0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b129c1307c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c130b10"/>
        <function-ref name="stop" scoped="" ref="0x2b129c130c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b129c15a510" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b129c15a510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b129c15a860"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b129c15a9e8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b129c15ab70"/>
        <function-ref name="txDone" scoped="" ref="0x2b129c15acf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b129c15ae80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b129c159030"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b129c1591b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b129c159340"/>
        <function-ref name="tx" scoped="" ref="0x2b129c1594c8"/>
        <function-ref name="rx" scoped="" ref="0x2b129c159650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b129c158be0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b129c158be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b129c157020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b129c1571a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b129c157330"/>
        <function-ref name="txDone" scoped="" ref="0x2b129c1574b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b129c157640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b129c1577c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b129c157950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b129c157ad8"/>
        <function-ref name="tx" scoped="" ref="0x2b129c157c60"/>
        <function-ref name="rx" scoped="" ref="0x2b129c157de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b129c15bb80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b129c15bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c15a020"/>
        <function-ref name="stop" scoped="" ref="0x2b129c15a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b129c1599d0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b129c1599d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c159d20"/>
        <function-ref name="stop" scoped="" ref="0x2b129c158020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b129c1583a0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b129c1583a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c1586f0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c158878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b129c15b328" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b129c15b328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c15b678"/>
        <function-ref name="stop" scoped="" ref="0x2b129c15b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b129c156b00" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b129c156b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c156e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b129c1523c8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b129c1523c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b129c152718"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b129c1528a0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b129c152a28"/>
        <function-ref name="txDone" scoped="" ref="0x2b129c152bb0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b129c152d38"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b129c151020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b129c1511a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b129c151330"/>
        <function-ref name="tx" scoped="" ref="0x2b129c1514b8"/>
        <function-ref name="rx" scoped="" ref="0x2b129c151640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b129c151998" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b129c151998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c151ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b129c14f240" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b129c14f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b129c14f590"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b129c14f718"/>
        <function-ref name="rxDone" scoped="" ref="0x2b129c14f8a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b129c14fa28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b129c14fbb0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b129c14fd38"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b129c14e020"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b129c14e1a8"/>
        <function-ref name="tx" scoped="" ref="0x2b129c14e330"/>
        <function-ref name="rx" scoped="" ref="0x2b129c14e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b129c153af0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b129c153af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c153e40"/>
        <function-ref name="stop" scoped="" ref="0x2b129c152020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b129c1500f0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b129c1500f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c150440"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1505c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b129c150988" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b129c150988"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c150cd8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c150e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b129c14e7d8" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b129c14e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b129c14eb28"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b129c14ecb0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b129c14ee38"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b129c14d020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b129c14d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b129c14d4b8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b129c14d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b129c14d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b129c153258" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b129c153258"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c1535a8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c153730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129c1b5a88" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c1b5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c1b1828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c1b0190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c1b1cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c1b0618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129c1af7f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c1af7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TThree" ref="0x2b129bb07d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c1ac578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c1d3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c1aca00"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c1d34a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129c1e15e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c1e15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b129c1e1938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129c1e1ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129c1e1c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129c1e1dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129c1c2020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129c1c21a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129c1c2330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129c1c24b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b129c1c2640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129c1c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b129c1c1020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b129c1c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b129c1d7270"/>
        <function-ref name="test" scoped="" ref="0x2b129c1d8930"/>
        <function-ref name="get" scoped="" ref="0x2b129c1c1ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b129c1d9560"/>
        <function-ref name="reset" scoped="" ref="0x2b129c1d9a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c1d8db8"/>
        <function-ref name="set" scoped="" ref="0x2b129c1d9088"/>
        <function-ref name="start" scoped="" ref="0x2b129c1d8020"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1d84a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b129c1d6598" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b129c1d6598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c1f6db8"/>
        <function-ref name="fired" scoped="" ref="0x2b129c1d5ab0"/>
        <function-ref name="get" scoped="" ref="0x2b129c1d5150"/>
        <function-ref name="reset" scoped="" ref="0x2b129c1f6020"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c1f5270"/>
        <function-ref name="set" scoped="" ref="0x2b129c1d55d8"/>
        <function-ref name="start" scoped="" ref="0x2b129c1f64a8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1f6930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c1c66e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c1c66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c1c4930"/>
        <function-ref name="test" scoped="" ref="0x2b129c1c4020"/>
        <function-ref name="get" scoped="" ref="0x2b129c1ce3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c1c4db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c1c32f0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c1c51f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c1ced08"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c1c44a8"/>
        <function-ref name="set" scoped="" ref="0x2b129c1ce830"/>
        <function-ref name="start" scoped="" ref="0x2b129c1c5680"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1c5b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129c1ec838" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c1ec838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b129c1ecb88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129c1ecd10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129c1eb020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129c1eb1a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129c1eb330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129c1eb4b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129c1eb640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129c1eb7c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b129c1eb950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129c1ebad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b129c20e938" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b129c20e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c20a0f8"/>
        <function-ref name="fired" scoped="" ref="0x2b129c20de40"/>
        <function-ref name="get" scoped="" ref="0x2b129c20d4e0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c20b310"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c20a580"/>
        <function-ref name="set" scoped="" ref="0x2b129c20d968"/>
        <function-ref name="start" scoped="" ref="0x2b129c20b798"/>
        <function-ref name="stop" scoped="" ref="0x2b129c20bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b129c1ea020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b129c1ea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b129c20e270"/>
        <function-ref name="test" scoped="" ref="0x2b129c20f930"/>
        <function-ref name="get" scoped="" ref="0x2b129c1eaba0"/>
        <function-ref name="captured" scoped="" ref="0x2b129c1e9560"/>
        <function-ref name="reset" scoped="" ref="0x2b129c1e9a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c20fdb8"/>
        <function-ref name="set" scoped="" ref="0x2b129c1e9088"/>
        <function-ref name="start" scoped="" ref="0x2b129c20f020"/>
        <function-ref name="stop" scoped="" ref="0x2b129c20f4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b129c20abf8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b129c20abf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c2064a8"/>
        <function-ref name="fired" scoped="" ref="0x2b129c208130"/>
        <function-ref name="get" scoped="" ref="0x2b129c2097a0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c2085b8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c206930"/>
        <function-ref name="set" scoped="" ref="0x2b129c209c28"/>
        <function-ref name="start" scoped="" ref="0x2b129c208a40"/>
        <function-ref name="stop" scoped="" ref="0x2b129c206020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b129c205020" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b129c205020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c2037a8"/>
        <function-ref name="fired" scoped="" ref="0x2b129c204560"/>
        <function-ref name="get" scoped="" ref="0x2b129c205ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c2049e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c203c30"/>
        <function-ref name="set" scoped="" ref="0x2b129c204088"/>
        <function-ref name="start" scoped="" ref="0x2b129c204e70"/>
        <function-ref name="stop" scoped="" ref="0x2b129c203320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c1f16f8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c1f16f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c1ed930"/>
        <function-ref name="test" scoped="" ref="0x2b129c1ed020"/>
        <function-ref name="get" scoped="" ref="0x2b129c1f03a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c1eddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c1ec2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c1ef1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c1f0d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c1ed4a8"/>
        <function-ref name="set" scoped="" ref="0x2b129c1f0830"/>
        <function-ref name="start" scoped="" ref="0x2b129c1ef680"/>
        <function-ref name="stop" scoped="" ref="0x2b129c1efb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c2864e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c2864e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b129ba35388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b129ba35388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c286838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129c286c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c286c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c2a2db8"/>
        <function-ref name="test" scoped="" ref="0x2b129c2a24a8"/>
        <function-ref name="get" scoped="" ref="0x2b129c27a820"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c2a1270"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c2a1748"/>
        <function-ref name="reset" scoped="" ref="0x2b129c279658"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c2791d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c2a2930"/>
        <function-ref name="set" scoped="" ref="0x2b129c27aca8"/>
        <function-ref name="start" scoped="" ref="0x2b129c279ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c2a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129c29ea98" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c29ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TThree" ref="0x2b129bb07d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c2b9828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c2b7190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c2b9cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c2b7618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129c2b7b78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c2b7b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c2b3c20"/>
        <function-ref name="test" scoped="" ref="0x2b129c2b3310"/>
        <function-ref name="get" scoped="" ref="0x2b129c2b6728"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c2b20f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c2b25d0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c2b5548"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c2b50c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c2b3798"/>
        <function-ref name="set" scoped="" ref="0x2b129c2b6bb0"/>
        <function-ref name="start" scoped="" ref="0x2b129c2b59d0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c2b5e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b129c2be450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b129c2be450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TThree" ref="0x2b129bb07d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c2bd1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c2bdae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c2bd658"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c2bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129c2ae270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c2ae270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c2bf020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c2bf930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c2bf4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c2bfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b129c2de020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b129c2de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b129c2de370"/>
        <function-ref name="offset" scoped="" ref="0x2b129c2de4f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b129c2de680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b129c2f0020" loc="43:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b129c2f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b129c2ff8c0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b129c2fd1c0"/>
        <function-ref name="element" scoped="" ref="0x2b129c2fd660"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129c2ff470"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129c2ffd10"/>
        <function-ref name="empty" scoped="" ref="0x2b129c2f0b68"/>
        <function-ref name="size" scoped="" ref="0x2b129c2ff020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b129c323b90" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b129c323b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b129c322470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b129c322d10"/>
        <function-ref name="element" scoped="" ref="0x2b129c321200"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129c322020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129c3228c0"/>
        <function-ref name="empty" scoped="" ref="0x2b129c325728"/>
        <function-ref name="size" scoped="" ref="0x2b129c325b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b129c321668" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c321668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c3219b8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c321b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c321cc8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c321e50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c320020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129c3202a8" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c3202a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c3205f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c320780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c320908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c320a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c320c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b129c31a3e8" loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b129c31a3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c31a738"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c31a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c2fcc88" loc="89:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c2fcc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c326020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129c31f020" loc="96:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c31f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c31f370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c31f4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c31f680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c31f808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c31f990"/>
        <function-ref name="get" scoped="" ref="0x2b129c31fb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c31fca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c31e330"/>
        <function-ref name="set" scoped="" ref="0x2b129c31fe28"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c31e020"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c31e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b129c323358" loc="90:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b129c323358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b129c3236a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b129c334cb0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c334cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c3310a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c331228"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c3313b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c331538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c3316c0"/>
        <function-ref name="get" scoped="" ref="0x2b129c331848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c3319d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c330020"/>
        <function-ref name="set" scoped="" ref="0x2b129c331b58"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c331ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c331e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b129c32bce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b129c32bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c32a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c32a228"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c32a3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c32a538"/>
        <function-ref name="get" scoped="" ref="0x2b129c32a6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c32a848"/>
        <function-ref name="set" scoped="" ref="0x2b129c32a9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b129c32ab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c32c020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c32c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c32c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b129c32ae70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b129c32ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c3291e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c329370"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c3294f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c329680"/>
        <function-ref name="get" scoped="" ref="0x2b129c329808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c329990"/>
        <function-ref name="set" scoped="" ref="0x2b129c329b18"/>
        <function-ref name="clr" scoped="" ref="0x2b129c329ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b129c32c5e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c32c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c32c938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c32cac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c32cc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c32cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c32b020"/>
        <function-ref name="get" scoped="" ref="0x2b129c32b1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c32b330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c32b950"/>
        <function-ref name="set" scoped="" ref="0x2b129c32b4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c32b640"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c32b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b129c356020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b129c356020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c356370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c3564f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c356680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c356808"/>
        <function-ref name="get" scoped="" ref="0x2b129c356990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c356b18"/>
        <function-ref name="set" scoped="" ref="0x2b129c356ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129c356e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b129c32de10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b129c32de10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c3691a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c369330"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c3694b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c369640"/>
        <function-ref name="get" scoped="" ref="0x2b129c3697c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c369950"/>
        <function-ref name="set" scoped="" ref="0x2b129c369ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b129c369c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b129c368020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b129c368020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c368370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c3684f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c368680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c368808"/>
        <function-ref name="get" scoped="" ref="0x2b129c368990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c368b18"/>
        <function-ref name="set" scoped="" ref="0x2b129c368ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129c368e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b129c3662d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c3662d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c366628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b129c3671b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b129c3671b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129c367500"/>
        <function-ref name="isInput" scoped="" ref="0x2b129c367688"/>
        <function-ref name="toggle" scoped="" ref="0x2b129c367810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129c367998"/>
        <function-ref name="get" scoped="" ref="0x2b129c367b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129c367ca8"/>
        <function-ref name="set" scoped="" ref="0x2b129c367e30"/>
        <function-ref name="clr" scoped="" ref="0x2b129c366020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b129c35c080" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b129c35c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b129c35c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c384a38" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c384a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c384d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b129c383080" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b129c383080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b129c3833d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b129c35fe28" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b129c35fe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b129c37b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b129c37b538" loc="40:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b129c37b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c37b888"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c37ba10"/>
        <function-ref name="start" scoped="" ref="0x2b129c37bb98"/>
        <function-ref name="stop" scoped="" ref="0x2b129c37bd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c37ca60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SinkC.BootTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c37ca60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c542d60"/>
        <function-ref name="fired" scoped="" ref="0x2b129c543470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c5421c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c543d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c540648"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c5401f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c5438c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c544620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c542790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c544ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c543020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b129c39b4e8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b129c39b4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c397768"/>
        <function-ref name="fired" scoped="" ref="0x2b129c39ae18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c398b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c398728"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c396088"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c397bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c3982d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c39a088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c397198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c39a528"/>
        <function-ref name="stop" scoped="" ref="0x2b129c39a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b129c392b68" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b129c392b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c38fd98"/>
        <function-ref name="fired" scoped="" ref="0x2b129c3904d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c38f1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c390d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c38d688"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c38d238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c390928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c3916f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c38f7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c391b90"/>
        <function-ref name="stop" scoped="" ref="0x2b129c390088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b129c38dc48" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129c38dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c38c820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c396e38" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c396e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c3921c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b129c3a8108" loc="31:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b129c3a8108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c3a8c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b129c3acc80" loc="30:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b129c3acc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c3aba28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c3aa4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c3aa020"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c3aa930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c387348" loc="28:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c387348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c387698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b129c3ae838" loc="29:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b129c3ae838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c3ac020"/>
        <function-ref name="fired" scoped="" ref="0x2b129c3b4020"/>
        <function-ref name="startAt" scoped="" ref="0x2b129c3b4930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c3b44a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129c3ac4a8"/>
        <function-ref name="start" scoped="" ref="0x2b129c3855e0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c385ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b129c49d670" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b129c49d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c49b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129c4a3478" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129c4a3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c4a0b18"/>
        <function-ref name="fired" scoped="" ref="0x2b129c4a2b80"/>
        <function-ref name="startAt" scoped="" ref="0x2b129c4a0510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c4a0088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129c49f020"/>
        <function-ref name="start" scoped="" ref="0x2b129c4a2220"/>
        <function-ref name="stop" scoped="" ref="0x2b129c4a26f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c4a4c20" loc="60:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c4a4c20"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b129ba35388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b129ba35388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c4a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129c49f608" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c49f608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c49e3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c49ecb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c49e830"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c49d190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b129d6a92a0" loc="68:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129d6a92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129d6a95f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129d6a9778"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129d6a9900"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129d6a9a88"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129d6a9c10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129d6a9d98"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129d6a8020"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129d6a81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b129d6af168" loc="64:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b129d6af168"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d6afce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129d6b5020" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129d6b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d6b3690"/>
        <function-ref name="fired" scoped="" ref="0x2b129d6b46f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b129d6b3088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d6b4b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129d6b3b18"/>
        <function-ref name="start" scoped="" ref="0x2b129d6b5d70"/>
        <function-ref name="stop" scoped="" ref="0x2b129d6b4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d6b77b8" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d6b77b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d6b7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129d6b2128" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129d6b2128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d6b2e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129d6b07b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129d6b0330"/>
        <function-ref name="overflow" scoped="" ref="0x2b129d6b0c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b129d6a4688" loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b129d6a4688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b129d6a49d8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b129d6a4b60"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b129d6a4ce8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b129d6a4e70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b129d6a3020"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b129d6a31a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b129d6a3330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b129d6a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b129d6a8538" loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b129d6a8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129d6a5db8"/>
        <function-ref name="fired" scoped="" ref="0x2b129d6a7a58"/>
        <function-ref name="get" scoped="" ref="0x2b129d6a70f8"/>
        <function-ref name="reset" scoped="" ref="0x2b129d6a5020"/>
        <function-ref name="isOn" scoped="" ref="0x2b129d6a4270"/>
        <function-ref name="set" scoped="" ref="0x2b129d6a7580"/>
        <function-ref name="start" scoped="" ref="0x2b129d6a54a8"/>
        <function-ref name="stop" scoped="" ref="0x2b129d6a5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129d6ae2f0" loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129d6ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129d6aa4a8"/>
        <function-ref name="test" scoped="" ref="0x2b129d6aba40"/>
        <function-ref name="get" scoped="" ref="0x2b129d6aee70"/>
        <function-ref name="setScale" scoped="" ref="0x2b129d6aa930"/>
        <function-ref name="getScale" scoped="" ref="0x2b129d6aae08"/>
        <function-ref name="reset" scoped="" ref="0x2b129d6adc80"/>
        <function-ref name="overflow" scoped="" ref="0x2b129d6ad7f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129d6aa020"/>
        <function-ref name="set" scoped="" ref="0x2b129d6ad320"/>
        <function-ref name="start" scoped="" ref="0x2b129d6ab130"/>
        <function-ref name="stop" scoped="" ref="0x2b129d6ab5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129c415160" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c415160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129c4154b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129c415638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129c4157c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129c415948"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129c415ad0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129c415c58"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129c415de0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129c446020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b129c4437b0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b129c4437b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b129c443b00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b129c443c88"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b129c443e10"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b129c441020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b129c4411a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b129c441330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b129c4414b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b129c441640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b129c4464e8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b129c4464e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c444db8"/>
        <function-ref name="fired" scoped="" ref="0x2b129c445a20"/>
        <function-ref name="get" scoped="" ref="0x2b129c4450c0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c444020"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c443270"/>
        <function-ref name="set" scoped="" ref="0x2b129c445548"/>
        <function-ref name="start" scoped="" ref="0x2b129c4444a8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c444930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c41a180" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c41a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c417270"/>
        <function-ref name="test" scoped="" ref="0x2b129c418930"/>
        <function-ref name="get" scoped="" ref="0x2b129c41ad00"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c4176f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c417bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b129c419b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c4196d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c418db8"/>
        <function-ref name="set" scoped="" ref="0x2b129c4191f8"/>
        <function-ref name="start" scoped="" ref="0x2b129c418020"/>
        <function-ref name="stop" scoped="" ref="0x2b129c4184a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129c439a98" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129c439a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129c439de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129c438020"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129c4381a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129c438330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129c4384b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129c438640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129c4387c8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129c438950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b129c4330c0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b129c4330c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b129c433410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b129c4337c0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b129c4337c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b129c433b10"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b129c433c98"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b129c433e20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b129c432020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b129c4321a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b129c432330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b129c4324b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b129c432640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b129c438e18" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b129c438e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129c434798"/>
        <function-ref name="fired" scoped="" ref="0x2b129c4364f8"/>
        <function-ref name="get" scoped="" ref="0x2b129c437a18"/>
        <function-ref name="reset" scoped="" ref="0x2b129c436980"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c434c20"/>
        <function-ref name="set" scoped="" ref="0x2b129c436020"/>
        <function-ref name="start" scoped="" ref="0x2b129c436e08"/>
        <function-ref name="stop" scoped="" ref="0x2b129c434310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c43ea70" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c43ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129c43bb80"/>
        <function-ref name="test" scoped="" ref="0x2b129c43b270"/>
        <function-ref name="get" scoped="" ref="0x2b129c43d658"/>
        <function-ref name="setScale" scoped="" ref="0x2b129c439088"/>
        <function-ref name="getScale" scoped="" ref="0x2b129c439560"/>
        <function-ref name="reset" scoped="" ref="0x2b129c43c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c43c020"/>
        <function-ref name="isOn" scoped="" ref="0x2b129c43b6f8"/>
        <function-ref name="set" scoped="" ref="0x2b129c43dae0"/>
        <function-ref name="start" scoped="" ref="0x2b129c43c930"/>
        <function-ref name="stop" scoped="" ref="0x2b129c43cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b129c4d4cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b129c4d4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c4d30a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c4d3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b129c4d8c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129c4d8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c4d4410"/>
        <function-ref name="fired" scoped="" ref="0x2b129c4d54a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b129c4d5db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c4d5930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129c4d4898"/>
        <function-ref name="start" scoped="" ref="0x2b129c4d69f0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c4d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c4ddab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c4ddab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c4d9d60"/>
        <function-ref name="fired" scoped="" ref="0x2b129c4da470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c4d91c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c4dad10"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c4d8648"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c4d81f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c4da8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c4dc620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c4d9790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c4dcac0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c4da020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b129c523930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b129c523930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c523c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c523e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b129c528858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b129c528858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c524bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b129c5251c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c524020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c525a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c5234d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c523088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c525610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c5273d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c5245f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c527878"/>
        <function-ref name="stop" scoped="" ref="0x2b129c527d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c52e5e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c52e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c529988"/>
        <function-ref name="fired" scoped="" ref="0x2b129c52b020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c52bd70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c52b900"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c5282d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c529df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c52b490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c52d198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c529398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c52d658"/>
        <function-ref name="stop" scoped="" ref="0x2b129c52db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b129c51e128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129c51e128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c51eca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b129c515330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129c515330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c5140c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129c5149d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129c514548"/>
        <function-ref name="overflow" scoped="" ref="0x2b129c514e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129c53e2b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SinkC.DistTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c53e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c53a5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b129c53dc08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c53c928"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c53c4d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c539020"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c53aa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c53c088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c53edf8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c53a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c53d318"/>
        <function-ref name="stop" scoped="" ref="0x2b129c53d7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b129c538878" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b129c538878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b129c538bc8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b129c538d50"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b129c534020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b129c564930" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b129c564930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129c564c80"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b129c564e08"/>
        <function-ref name="setType" scoped="" ref="0x2b129c563020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b129c5631a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129c563330"/>
        <function-ref name="getType" scoped="" ref="0x2b129c5634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b129c561650" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b129c561650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b129c5619a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x2b129c534c20" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b129c534c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c533020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c5331a8"/>
        <function-ref name="start" scoped="" ref="0x2b129c533330"/>
        <function-ref name="stop" scoped="" ref="0x2b129c5334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129c533d30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129c533d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c5320d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c532260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c5323e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c531868" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c531868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c531bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c561c48" loc="65:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c561c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c564020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c5641a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c564330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c5644b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c564640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c532bb8" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c532bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c531020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b129c5639a0" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5639a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129c55fa00"/>
        <function-ref name="init" scoped="" ref="0x2b129c55f528"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129c55e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoTrafficStatistics" ref="0x2b129c5562b8" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b129c5562b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129c556608"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129c556790"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129c556918"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129c556aa0"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129c556c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingControl" ref="0x2b129c5343c0" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b129c5343c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c534710"/>
        <function-ref name="stop" scoped="" ref="0x2b129c534898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b129c55e528" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129c55e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129c55e878"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129c55ea00"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129c55eb88"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129c55ed10"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129c55d020"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129c55d1a8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129c55d330"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129c55d4b8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129c55d640"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129c55d7c8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129c55d950"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129c55dad8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129c55dc60"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129c55c020"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129c55c1a8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129c55c330"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129c55c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b129c54d020" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b129c54d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b129c54d370"/>
        <function-ref name="setRoot" scoped="" ref="0x2b129c54d4f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b129c54d680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129c573020" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129c573020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c573370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c5734f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c573680"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c573808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c573990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b129c57e930" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b129c57e930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129c57ec80"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b129c57ee08"/>
        <function-ref name="setType" scoped="" ref="0x2b129c57d020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b129c57d1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129c57d330"/>
        <function-ref name="getType" scoped="" ref="0x2b129c57d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129c573cc8" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129c573cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c5720a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="selfReceiveTask" ref="0x2b129c584020" loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="selfReceiveTask" scoped="" ref="0x2b129c584020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c584370"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c5844f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatus" ref="0x2b129c57ab30" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b129c57ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b129c57ae80"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b129c57c030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b129c57f5c0" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b129c57f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b129c57f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c57fbb8" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c57fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c57e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c57e1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c57e330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c57e4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c57e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c54aa30" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c54aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c54ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129c54c020" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129c54c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c54c370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c54c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c54c680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b129c594510" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c594510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129c590560"/>
        <function-ref name="init" scoped="" ref="0x2b129c590088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129c590a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2b129c56aa70" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2b129c56aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bc18358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b129bc186b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b129c570470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b129c568158"/>
        <function-ref name="element" scoped="" ref="0x2b129c568788"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129c570020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129c570ad0"/>
        <function-ref name="empty" scoped="" ref="0x2b129c571620"/>
        <function-ref name="size" scoped="" ref="0x2b129c571a70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129c58dd40" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129c58dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129c58c0d8"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129c58c260"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129c58c3e8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129c58c570"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129c58c6f8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129c58c880"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129c58ca08"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129c58cb90"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129c58cd18"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129c588020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129c5881a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129c588330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129c5884b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129c588740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129c5888c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129c588a50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129c588bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129c576240" loc="72:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129c576240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c576690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c576818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c5769a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c576b28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c576cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129c54e110" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129c54e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129c54e460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CacheCompare" ref="0x2b129c577ab8" loc="64:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b129c577ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129bc08500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b129bc089b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b129c57b658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c54ce50" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c54ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c54a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129c587020" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129c587020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c587ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b129c5b5368" loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b129c5b5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c5b56b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c5b5840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x2b129c598d30" loc="78:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x2b129c598d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
            <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c565cb8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129c5651c0"/>
        <function-ref name="empty" scoped="" ref="0x2b129c5668b8"/>
        <function-ref name="put" scoped="" ref="0x2b129c565610"/>
        <function-ref name="size" scoped="" ref="0x2b129c566d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b129c54e710" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b129c54e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129c54ea60"/>
        <function-ref name="stop" scoped="" ref="0x2b129c54ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b129c58d060" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c58d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b129c58d3b0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b129c58d538"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b129c58d6c0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b129c58d848"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b129c58d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatistics" ref="0x2b129c579158" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatistics" scoped="" ref="0x2b129c579158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b129c554428"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129c554020"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c579ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHistory" ref="0x2b129c591958" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHistory" scoped="" ref="0x2b129c591958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129bc08500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b129bc089b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b129c595528"/>
        <function-ref name="flush" scoped="" ref="0x2b129c595e68"/>
        <function-ref name="lookup" scoped="" ref="0x2b129c5959c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b129c5fa960" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129c5fa960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c5f7560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129c5f9850" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129c5f9850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c5f9ba0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c5f9d28"/>
        <function-ref name="start" scoped="" ref="0x2b129c5f4020"/>
        <function-ref name="stop" scoped="" ref="0x2b129c5f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b129c628080" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b129c628080"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b129c6283d0"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b129c628558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c5f4430" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c5f4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c5f4780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c5f4908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c5f4a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c5f4c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c5f4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129c5f3080" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129c5f3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c5f33d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c5f3558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c5f36e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c5f3868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c5f39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b129c5f25a8" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129c5f25a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129c5f15f0"/>
        <function-ref name="init" scoped="" ref="0x2b129c5f1118"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129c5f1ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoPathCost" ref="0x2b129c624c30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129c624c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b129c627020"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b129c6271a8"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b129c627330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c5f3c80" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c5f3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c5f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStatistics" ref="0x2b129c6265d8" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStatistics" scoped="" ref="0x2b129c6265d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129c626928"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129c626ab0"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129c626c38"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129c626dc0"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129c622020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b129c627720" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c627720"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b129c627a70"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b129c627bf8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b129c627d80"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b129c626020"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b129c6261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129c61edf8" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129c61edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c61d170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c61d2f8"/>
        <function-ref name="start" scoped="" ref="0x2b129c61d480"/>
        <function-ref name="stop" scoped="" ref="0x2b129c61d608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b129c60f690" loc="81:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129c60f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c60f9e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c60fb68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c60fcf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c60fe78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c60e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b129c610020" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b129c610020"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b129c610370"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b129c6104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c61d890" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c61d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c61dbe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c61dd68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c61c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c61c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c61c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129c611020" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129c611020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c611ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b129c645d90" loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b129c645d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c643170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c6432f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c643480"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c643608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c643790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b129c63bae8" loc="98:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b129c63bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b129c63be38"/>
        <function-ref name="rand32" scoped="" ref="0x2b129c63d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129c61c5a8" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129c61c5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c61c8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c61ca80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c61cc08"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c61cd90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c61b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b129c63ca40" loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b129c63ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129c63cd90"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129c63a020"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129c63a1a8"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129c63a330"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129c63a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129c6413b0" loc="97:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129c6413b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129c641700"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129c641888"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129c641a10"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129c641b98"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129c641d20"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129c640020"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129c6401a8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129c640330"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129c6404b8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129c640640"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129c6407c8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129c640950"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129c640ad8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129c640d60"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129c63e020"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129c63e1a8"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129c63e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x2b129c6553e8" loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x2b129c6553e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129c655738"/>
        <function-ref name="runTask" scoped="" ref="0x2b129c6558c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BackoffConfig" ref="0x2b129c6186e0" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffConfig" scoped="" ref="0x2b129c6186e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b129c618a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b129c617168" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b129c617168"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c6174b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c617640"/>
        <function-ref name="start" scoped="" ref="0x2b129c6177c8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c617950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketStatistics" ref="0x2b129c619060" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStatistics" scoped="" ref="0x2b129c619060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b129c551ca0"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b129c551318"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c619ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b129c60e380" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2b129c60e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c60e7d0"/>
        <function-ref name="source" scoped="" ref="0x2b129c60e958"/>
        <function-ref name="address" scoped="" ref="0x2b129c60eae0"/>
        <function-ref name="destination" scoped="" ref="0x2b129c60ec68"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c60edf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c60d020"/>
        <function-ref name="type" scoped="" ref="0x2b129c60d1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b129c60d330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c60d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c60d640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c60d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b129c6450e8" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129c6450e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c645438"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c6455c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c645748"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c6458d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c645a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c61b2b0" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c61b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c61b600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSnoop" ref="0x2b129c60ca20" loc="87:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSnoop" scoped="" ref="0x2b129c60ca20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c60cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b129c63d298" loc="100:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b129c63d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b129c63d5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b129c63d770"/>
        <function-ref name="led1On" scoped="" ref="0x2b129c63d8f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b129c63da80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b129c63dc08"/>
        <function-ref name="get" scoped="" ref="0x2b129c63dd90"/>
        <function-ref name="led1Off" scoped="" ref="0x2b129c63c020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b129c63c640"/>
        <function-ref name="set" scoped="" ref="0x2b129c63c1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b129c63c330"/>
        <function-ref name="led2On" scoped="" ref="0x2b129c63c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b129c610868" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b129c610868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c610bb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c610d40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c60f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c60f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c60f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b129c60c380" loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b129c60c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c60c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b129c60db40" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129c60db40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c60c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PathCost" ref="0x2b129c643b28" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathCost" scoped="" ref="0x2b129c643b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b129c643e78"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b129c642030"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b129c6421b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b129c63a8a8" loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b129c63a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b129c63adf8"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b129c639020"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b129c6391a8"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b129c639330"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b129c6394b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b129c63fc00" loc="93:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c63fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129c641020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129c617d18" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129c617d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c612088"/>
        <function-ref name="fired" scoped="" ref="0x2b129c615688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129c614470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129c614020"/>
        <function-ref name="getdt" scoped="" ref="0x2b129c612928"/>
        <function-ref name="gett0" scoped="" ref="0x2b129c6124d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c615ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129c6168b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129c614a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129c616d58"/>
        <function-ref name="stop" scoped="" ref="0x2b129c615238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129c6bfe68" loc="46:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129c6bfe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c6f71e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c6f7370"/>
        <function-ref name="start" scoped="" ref="0x2b129c6f74f8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c6f7680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b129c6ed3a0" loc="65:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6ed3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129c6ed6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129c6f31c8" loc="51:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129c6f31c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c6f3518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129c6f7df8" loc="48:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c6f7df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c6f6170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c6f62f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c6f6480"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c6f6608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c6f6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c6f5b68" loc="50:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c6f5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c6f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c6f37a0" loc="53:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c6f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c6f3af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c6f3c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c6f3e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c6f2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c6f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b129c6e2020" loc="67:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b129c6e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c6da478"/>
        <function-ref name="clear" scoped="" ref="0x2b129c6dab58"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c6e2d70"/>
        <function-ref name="set" scoped="" ref="0x2b129c715278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b129c715e48" loc="68:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c715e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c712300"/>
        <function-ref name="clear" scoped="" ref="0x2b129c7129e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c714be8"/>
        <function-ref name="set" scoped="" ref="0x2b129c7110f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c6f5020" loc="49:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c6f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c6f5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b129c6e7dc0" loc="58:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b129c6e7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b129c6ee170"/>
        <function-ref name="setRetries" scoped="" ref="0x2b129c6ee2f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b129c6ee480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b129c6ee608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b129c6ee790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129c6f2448" loc="54:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129c6f2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c6f2798"/>
        <function-ref name="source" scoped="" ref="0x2b129c6f2920"/>
        <function-ref name="address" scoped="" ref="0x2b129c6f2aa8"/>
        <function-ref name="destination" scoped="" ref="0x2b129c6f2c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c6f2db8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c6ef020"/>
        <function-ref name="type" scoped="" ref="0x2b129c6ef1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b129c6ef330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c6ef4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c6ef640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c6ef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b129c6e3878" loc="59:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b129c6e3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b129c6e3bc8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129c6e3d50"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129c6ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129c70e2c0" loc="46:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129c70e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c70e610"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c70e798"/>
        <function-ref name="start" scoped="" ref="0x2b129c70e920"/>
        <function-ref name="stop" scoped="" ref="0x2b129c70eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b129c6fb818" loc="67:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b129c6fb818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c6fade8"/>
        <function-ref name="get" scoped="" ref="0x2b129c6fa8d8"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c6fa3c8"/>
        <function-ref name="set" scoped="" ref="0x2b129c6f8328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129c70ab28" loc="51:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129c70ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c70ae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c709190" loc="57:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c709190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c7094e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c709668"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c7097f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c709978"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c709b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129c70d270" loc="48:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c70d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c70d5c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c70d748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c70d8d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c70da58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c70dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c70a020" loc="50:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c70a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c70a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b129c6fe480" loc="66:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129c6fe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c6fdaa8"/>
        <function-ref name="get" scoped="" ref="0x2b129c6fd598"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c6fd088"/>
        <function-ref name="set" scoped="" ref="0x2b129c6fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c70b3c8" loc="49:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c70b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c70b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b129c7336b0" loc="71:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c7336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c732c58"/>
        <function-ref name="clear" scoped="" ref="0x2b129c730380"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c732578"/>
        <function-ref name="set" scoped="" ref="0x2b129c730a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b129c7342d8" loc="70:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129c7342d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c734e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b129c705110" loc="65:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129c705110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c7046e0"/>
        <function-ref name="get" scoped="" ref="0x2b129c7041d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c705c90"/>
        <function-ref name="set" scoped="" ref="0x2b129c704bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b129c707498" loc="62:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b129c707498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b129c7077e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b129c707970"/>
        <function-ref name="getRetries" scoped="" ref="0x2b129c707af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b129c707c80"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b129c707e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129c709da0" loc="58:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129c709da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c708170"/>
        <function-ref name="source" scoped="" ref="0x2b129c7082f8"/>
        <function-ref name="address" scoped="" ref="0x2b129c708480"/>
        <function-ref name="destination" scoped="" ref="0x2b129c708608"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c708790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c708918"/>
        <function-ref name="type" scoped="" ref="0x2b129c708aa0"/>
        <function-ref name="setType" scoped="" ref="0x2b129c708c28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c708db0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c707020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c7071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b129c706140" loc="63:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b129c706140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b129c706490"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129c706618"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129c7067a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b129c6f8970" loc="68:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c6f8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129c6f8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b129c72f670" loc="72:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c72f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c72ead0"/>
        <function-ref name="clear" scoped="" ref="0x2b129c72c1f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c72e3f0"/>
        <function-ref name="set" scoped="" ref="0x2b129c72c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129c72b9e0" loc="42:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129c72b9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129c72bd30"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129c728020"/>
        <function-ref name="start" scoped="" ref="0x2b129c7281a8"/>
        <function-ref name="stop" scoped="" ref="0x2b129c728330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b129c73ad28" loc="81:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b129c73ad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c737388"/>
        <function-ref name="get" scoped="" ref="0x2b129c738e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c7388f0"/>
        <function-ref name="set" scoped="" ref="0x2b129c737898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b129c71f710" loc="61:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b129c71f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c71fa60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b129c7174b8" loc="63:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b129c7174b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129c717908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129c717a90"/>
        <function-ref name="request" scoped="" ref="0x2b129c717c18"/>
        <function-ref name="granted" scoped="" ref="0x2b129c717da0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129c716020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129c724348" loc="48:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129c724348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c724698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129c728aa8" loc="45:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c728aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c728df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c727020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c7271a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c727330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c7274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c726818" loc="47:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c726818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c726b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b129c747308" loc="65:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129c747308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b129c747658"/>
        <function-ref name="address" scoped="" ref="0x2b129c7477e0"/>
        <function-ref name="destination" scoped="" ref="0x2b129c747968"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c747af0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c747c78"/>
        <function-ref name="pan" scoped="" ref="0x2b129c747e00"/>
        <function-ref name="setPan" scoped="" ref="0x2b129c750020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c7501a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b129c750330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b129c7506e0" loc="66:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b129c7506e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c750a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c750bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c750d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c74f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c74f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b129c73d870" loc="80:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129c73d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c73a020"/>
        <function-ref name="get" scoped="" ref="0x2b129c73b9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c73b490"/>
        <function-ref name="set" scoped="" ref="0x2b129c73a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b129c73f1d8" loc="70:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b129c73f1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b129c73f528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b129c73f6b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b129c73f838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b129c73f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b129c7219e8" loc="55:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b129c7219e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c721d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c720020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c7201a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c720330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c7204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c727c38" loc="46:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c727c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c726020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b129c772c38" loc="85:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129c772c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c7700f8"/>
        <function-ref name="clear" scoped="" ref="0x2b129c7707d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c7719f0"/>
        <function-ref name="set" scoped="" ref="0x2b129c76f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b129c736830" loc="84:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129c736830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129c772410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b129c745518" loc="79:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129c745518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c741ae0"/>
        <function-ref name="get" scoped="" ref="0x2b129c7415d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b129c7410c0"/>
        <function-ref name="set" scoped="" ref="0x2b129c73d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b129c718250" loc="59:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c718250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c7185a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c718728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c7188b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c718a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c718bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b129c723020" loc="51:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129c723020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c723370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b129c73fc70" loc="71:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b129c73fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b129c746020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b129c7461a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b129c746330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b129c7464b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b129c746640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b129c746968" loc="77:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b129c746968"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b129c746cb8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129c746e40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129c745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129c7222c0" loc="54:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129c7222c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c722610"/>
        <function-ref name="source" scoped="" ref="0x2b129c722798"/>
        <function-ref name="address" scoped="" ref="0x2b129c722920"/>
        <function-ref name="destination" scoped="" ref="0x2b129c722aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c722c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c722db8"/>
        <function-ref name="type" scoped="" ref="0x2b129c721020"/>
        <function-ref name="setType" scoped="" ref="0x2b129c7211a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c721330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c7214b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c721640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b129c76fbf0" loc="86:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129c76fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c76c300"/>
        <function-ref name="clear" scoped="" ref="0x2b129c76c9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c76dbe8"/>
        <function-ref name="set" scoped="" ref="0x2b129c76b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b129c71f020" loc="60:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c71f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c71f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b129c736020" loc="82:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129c736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129c736370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b129c723bb0" loc="52:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b129c723bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c722020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b129c788c00" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b129c788c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b129c783020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b129c78e7b0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b129c78e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b129c78eb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b129c77c130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b129c77c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c77c480"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b129c77c608"/>
        <function-ref name="source" scoped="" ref="0x2b129c77c790"/>
        <function-ref name="destination" scoped="" ref="0x2b129c77c918"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c77caa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c77cc28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c77cdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b129c78c020" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b129c78c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b129c78c370"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b129c78c4f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b129c78c680"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b129c78c808"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b129c78c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b129c79abd8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c79abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b129c79e020"/>
        <function-ref name="wait" scoped="" ref="0x2b129c79e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c79e330"/>
        <function-ref name="isFree" scoped="" ref="0x2b129c79e4b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b129c79e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b129c794e08" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b129c794e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c79d1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c79d330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c79d4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c79d640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c79d7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c79d950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b129c799020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129c799020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129c792578"/>
        <function-ref name="clear" scoped="" ref="0x2b129c792c58"/>
        <function-ref name="isValid" scoped="" ref="0x2b129c799e70"/>
        <function-ref name="set" scoped="" ref="0x2b129c7d1380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b129c762928" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129c762928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c762c78"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c762e00"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c766020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b129c7661a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b129c766330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b129c78f220" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b129c78f220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b129c78f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b129c759670" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b129c759670"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b129c7599c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b129c759b48"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b129c759cd0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b129c759e58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b129c765020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b129c7651a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b129c765330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b129c7654b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b129c7a1d58" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129c7a1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b129c77b0d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b129c77b260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b129c77b3e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b129c77b570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b129c77b6f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b129c77b880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b129c77ba08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b129c77bb90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b129c77bd18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b129c779020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b129c7791a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b129c779330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b129c7794b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b129c779740"/>
        <function-ref name="localPan" scoped="" ref="0x2b129c7798c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b129c779a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b129c779bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b129c779d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b129c7a0020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c7a01a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b129c7a0330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b129c7a04b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b129c7a0640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b129c7a07c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b129c7a0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b129c7546c0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b129c7546c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129c754a10"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b129c754b98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129c754d20"/>
        <function-ref name="getSender" scoped="" ref="0x2b129c758020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b129c78ab40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b129c78ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b129c791020"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b129c7911a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b129c791330"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b129c7914b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b129c7fac50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b129c7fac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b129c851020"/>
        <function-ref name="wait" scoped="" ref="0x2b129c8511a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c851330"/>
        <function-ref name="isFree" scoped="" ref="0x2b129c8514b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b129c851640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b129c851c68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129c851c68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129c843410"/>
        <function-ref name="fired" scoped="" ref="0x2b129c8454a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b129c845db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129c845930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129c843898"/>
        <function-ref name="start" scoped="" ref="0x2b129c8469f0"/>
        <function-ref name="stop" scoped="" ref="0x2b129c845020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b129d7a04d0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b129d7a04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b129d7a0840"/>
        <function-ref name="wait" scoped="" ref="0x2b129d7a09c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d7a0b50"/>
        <function-ref name="isFree" scoped="" ref="0x2b129d7a0cd8"/>
        <function-ref name="getNow" scoped="" ref="0x2b129d7a0e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b129d79f350" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129d79f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d79cab0"/>
        <function-ref name="fired" scoped="" ref="0x2b129d79ea58"/>
        <function-ref name="startAt" scoped="" ref="0x2b129d79c4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d79c020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129d79b020"/>
        <function-ref name="start" scoped="" ref="0x2b129d79e0f8"/>
        <function-ref name="stop" scoped="" ref="0x2b129d79e5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b129d79b3f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b129d79b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b129d79b748"/>
        <function-ref name="suspend" scoped="" ref="0x2b129d79b8d0"/>
        <function-ref name="resume" scoped="" ref="0x2b129d79ba58"/>
        <function-ref name="run" scoped="" ref="0x2b129d79bbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b129c8535b8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b129c8535b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b129c853908"/>
        <function-ref name="suspend" scoped="" ref="0x2b129c853a90"/>
        <function-ref name="resume" scoped="" ref="0x2b129c853c18"/>
        <function-ref name="run" scoped="" ref="0x2b129c853da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129c8e5430" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129c8e5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c8e5780"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c8e5908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c8e5a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129c8e5d18" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129c8e5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c8e40a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129c8e71a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129c8e71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c8e7510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c8eb700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c8eb700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c8eba50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c8ebbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c8ebd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c8ea020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c8ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129c8ea510" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129c8ea510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c8ea880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c8eaa08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c8eab90"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c8ead18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c8e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129c8e9aa0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129c8e9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c8e9e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129c8e6678" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129c8e6678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c8e69c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c8e6b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c8e6cd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c8e6e60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c8e5020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c8e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129c8e4328" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129c8e4328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c8e4678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b129c8e4800"/>
        <function-ref name="source" scoped="" ref="0x2b129c8e4988"/>
        <function-ref name="destination" scoped="" ref="0x2b129c8e4b10"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c8e4c98"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c8e4e20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c8e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129c8e9388" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129c8e9388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c8e96f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b129c8e78b8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129c8e78b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c8e7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129c8ec1f0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129c8ec1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129c8ec540"/>
        <function-ref name="source" scoped="" ref="0x2b129c8ec6c8"/>
        <function-ref name="address" scoped="" ref="0x2b129c8ec850"/>
        <function-ref name="destination" scoped="" ref="0x2b129c8ec9d8"/>
        <function-ref name="setSource" scoped="" ref="0x2b129c8ecb60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129c8ecce8"/>
        <function-ref name="type" scoped="" ref="0x2b129c8ece70"/>
        <function-ref name="setType" scoped="" ref="0x2b129c8eb020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c8eb1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129c8eb330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129c8eb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b129c8e6020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b129c8e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c8e6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129d77c5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129d77c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d77c908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129d77dba0" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129d77dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d77c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d77c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d77c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129d780898" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129d780898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129d780c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129d782060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d782060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d7823b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d782538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d7826c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d782848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d7829d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129d782d38" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129d782d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d7810d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d781260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d7813e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d781570"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d7816f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b129d7801c0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b129d7801c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d780530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129d787c60" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129d787c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d784020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d7841a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d784330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d7844b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d784640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d7847c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129d77cb90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129d77cb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129d77b020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b129d77b1a8"/>
        <function-ref name="source" scoped="" ref="0x2b129d77b330"/>
        <function-ref name="destination" scoped="" ref="0x2b129d77b4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b129d77b640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129d77b7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129d77b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b129d77bb98" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129d77bb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b129d77a020"/>
        <function-ref name="changed" scoped="" ref="0x2b129d77a1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b129d77a330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b129d77a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129d77fd90" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129d77fd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d77d170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d77d2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d77d480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d77d608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d77d790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d77d918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d781a60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d781a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d781dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b129d77f020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b129d77f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d77f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b129d784a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129d784a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129d784d60"/>
        <function-ref name="source" scoped="" ref="0x2b129d783020"/>
        <function-ref name="address" scoped="" ref="0x2b129d7831a8"/>
        <function-ref name="destination" scoped="" ref="0x2b129d783330"/>
        <function-ref name="setSource" scoped="" ref="0x2b129d7834b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129d783640"/>
        <function-ref name="type" scoped="" ref="0x2b129d7837c8"/>
        <function-ref name="setType" scoped="" ref="0x2b129d783950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129d783ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129d783c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129d783de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b129d77f738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b129d77f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d77faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b129c8c0c60" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129c8c0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b129c8bc020"/>
        <function-ref name="changed" scoped="" ref="0x2b129c8bc1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b129c8bc330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b129c8bc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129c8dca48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129c8dca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c8dcd98"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c911020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c9111a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b129c9113f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129c9113f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129c911740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129c9118c8"/>
        <function-ref name="request" scoped="" ref="0x2b129c911a50"/>
        <function-ref name="granted" scoped="" ref="0x2b129c911bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129c911d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b129c8dc100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b129c8dc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c8dc450"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c8dc5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c8dc760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b129c980020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b129c980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b129c980390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b129c980518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b129c97e020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129c97e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b129c97e390"/>
        <function-ref name="configure" scoped="" ref="0x2b129c97e518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129c981200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129c981200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129c981570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129c9816f8"/>
        <function-ref name="request" scoped="" ref="0x2b129c981880"/>
        <function-ref name="granted" scoped="" ref="0x2b129c981a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129c981b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b129c980760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129c980760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b129c980ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b129c980c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d7a9438" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d7a9438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d7a9788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b129d7a9a10" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b129d7a9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b129d7a9d60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b129d7a8020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b129d7a81a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129d7a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b129d7a6698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b129d7a6698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b129d7a6a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b129d7a6b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b129d7a46c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129d7a46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b129d7a4a30"/>
        <function-ref name="configure" scoped="" ref="0x2b129d7a4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b129d7a4e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b129d7a4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b129d7a31c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b129d7a3348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b129d7a34d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129d7a3658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129d7a7918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129d7a7918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129d7a7c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129d7a7e10"/>
        <function-ref name="request" scoped="" ref="0x2b129d7a6020"/>
        <function-ref name="granted" scoped="" ref="0x2b129d7a61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129d7a6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b129d7a6dd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129d7a6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b129d7a4170"/>
        <function-ref name="userId" scoped="" ref="0x2b129d7a42f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b129d7a3920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b129d7a3920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d7a3c70"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d7a3df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129c990ba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129c990ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c98e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c98e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c98e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129c98e5b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129c98e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c98e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b129c994840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b129c994840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b129c994b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129c97b980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129c97b980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c97bcd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c97be58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c995020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c9951a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c995330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b129c991d98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129c991d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c990170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c9902f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c990480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c990608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c990790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c990918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b129c994e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129c994e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b129c9931c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b129c993348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b129c9934d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b129c993658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b129c9937e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b129c993968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b129c993af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b129c993c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b129c993e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b129c992020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b129c9921a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b129c992330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b129c9924b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b129c992740"/>
        <function-ref name="localPan" scoped="" ref="0x2b129c9928c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b129c992a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b129c992bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b129c992d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b129c991020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129c9911a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b129c991330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b129c9914b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b129c991640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b129c9917c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b129c991950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b129c995578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c995578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c9958c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129c995a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c995bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c995d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c994020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b129c9942a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c9942a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c9945f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129c9e4490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129c9e4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c9e47e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c9e4968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c9e4af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129c9e4d78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129c9e4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c9e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b129c9e8880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129c9e8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c9e8bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c9e8d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c9e6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c9e61a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c9e6330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c9e64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b129c9e5060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b129c9e5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c9e53b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129c9e3378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129c9e3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c9e36c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c9e3850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c9e39d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c9e3b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c9e3ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c9e3e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b129c9e6740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b129c9e6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c9e6a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c9e6c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c9e6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b129c988838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b129c988838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129c988b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b129c988d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129c9e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b129c9e82a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b129c9e82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129c9e85f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b129c9e5638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b129c9e5638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129c9e5988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129c9e5b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129c9e5c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129c9e5e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129c9e4020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129c9e41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b129ca78900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129ca78900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b129ca78c50"/>
        <function-ref name="address" scoped="" ref="0x2b129ca78dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b129ca77020"/>
        <function-ref name="setSource" scoped="" ref="0x2b129ca771a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129ca77330"/>
        <function-ref name="pan" scoped="" ref="0x2b129ca774b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b129ca77640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129ca777c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b129ca77950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129ca77b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129ca77b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129ca76020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129ca761a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129ca76330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129ca764b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129ca76640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129ca767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b129ca7c980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129ca7c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b129ca7ccd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b129ca7ce58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b129ca7a020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b129ca7a1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b129ca7a330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b129ca7a4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b129ca7a640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b129ca7a7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b129ca7a950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b129ca7aad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b129ca7ac60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b129ca7ade8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b129ca79020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b129ca792a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b129ca79430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b129ca795b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b129ca79740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b129ca798c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b129ca79a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129ca79bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b129ca79d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b129ca78020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b129ca781a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b129ca78330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b129ca784b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129ca76ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129ca76ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129ca76e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129ca75020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129ca751a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129ca75330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129ca754b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129ca75640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b129d83ed98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b129d83ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b129d83d170"/>
        <function-ref name="address" scoped="" ref="0x2b129d83d2f8"/>
        <function-ref name="destination" scoped="" ref="0x2b129d83d480"/>
        <function-ref name="setSource" scoped="" ref="0x2b129d83d608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129d83d790"/>
        <function-ref name="pan" scoped="" ref="0x2b129d83d918"/>
        <function-ref name="setPan" scoped="" ref="0x2b129d83daa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129d83dc28"/>
        <function-ref name="localPan" scoped="" ref="0x2b129d83ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129d83c020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129d83c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d83c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d83c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d83c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d83c808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d83c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d83cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b129d845d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b129d845d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b129d8400d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b129d840260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b129d8403e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b129d840570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b129d8406f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b129d840880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b129d840a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b129d840b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b129d840d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b129d83f020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b129d83f1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b129d83f330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b129d83f4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b129d83f740"/>
        <function-ref name="localPan" scoped="" ref="0x2b129d83f8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b129d83fa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b129d83fbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b129d83fd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b129d83e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129d83e1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b129d83e330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b129d83e4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b129d83e640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b129d83e7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b129d83e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b129d83cdc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b129d83cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b129d83b170"/>
        <function-ref name="changed" scoped="" ref="0x2b129d83b2f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b129d83b480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b129d83b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129d83b890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129d83b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d83bbe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d83bd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d83a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d83a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d83a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d83a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129caf2510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129caf2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129caf2860"/>
        <function-ref name="cancel" scoped="" ref="0x2b129caf29e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129caf2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129caf2df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129caf2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129caf1170"/>
        <function-ref name="header" scoped="" ref="0x2b129caf12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129caf3470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129caf3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129caf37c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129caf3948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129caf3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129caf1580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129caf1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129caf18d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b129caf1a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129caf1be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b129caf1d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b129caf3d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129caf3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129caf20a0"/>
        <function-ref name="header" scoped="" ref="0x2b129caf2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129d870458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129d870458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d8707a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d870930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d870ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129d870d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129d870d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d86f0d8"/>
        <function-ref name="header" scoped="" ref="0x2b129d86f260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b129d86ebd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129d86ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d86d020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b129d86d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b129d86d330"/>
        <function-ref name="set" scoped="" ref="0x2b129d86d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129d875da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129d875da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d871170"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d8712f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d871480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b129d86e020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b129d86e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b129d86e370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b129d86e4f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b129d86e680"/>
        <function-ref name="evicted" scoped="" ref="0x2b129d86e808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b129d86e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b129d8716c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129d8716c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d871a18"/>
        <function-ref name="header" scoped="" ref="0x2b129d871ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d871de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d871de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d870170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b129d86f4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b129d86f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b129d86f7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b129d86f980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b129d86fb08"/>
        <function-ref name="getSender" scoped="" ref="0x2b129d86fc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b129ca8ed58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b129ca8ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b129ca8b0d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b129ca8b260"/>
        <function-ref name="getNode" scoped="" ref="0x2b129ca8b3e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b129ca8b570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b129ca8b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b129ca87b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129ca87b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129ca87e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b129ca86020"/>
        <function-ref name="get" scoped="" ref="0x2b129ca861a8"/>
        <function-ref name="set" scoped="" ref="0x2b129ca86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b129ca88850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b129ca88850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b129ca88ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b129ca88d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b129ca87020"/>
        <function-ref name="evicted" scoped="" ref="0x2b129ca871a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b129ca87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129ca88238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129ca88238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129ca88588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b129d86b140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b129d86b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d86b490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b129d86b618"/>
        <function-ref name="get" scoped="" ref="0x2b129d86b7a0"/>
        <function-ref name="set" scoped="" ref="0x2b129d86b928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129cae0c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129cae0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cadf020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cadf1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cadf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129cadf5b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129cadf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cadf908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b129cadb100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b129cadb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b129cadb450"/>
        <function-ref name="noAck" scoped="" ref="0x2b129cadb5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b129cadb760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129cae22e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129cae22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cae2638"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cae27c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cae2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cae1e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cae1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cae01a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cae0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cae04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cae0640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cae07c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cae0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129cadfb90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129cadfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cadd020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cadd1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cadd330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cadd4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cadd640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cadd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b129cadc470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b129cadc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b129cadc7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b129cadc948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b129cadcad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b129cadcc58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b129cadcde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129cae2bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129cae2bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cae1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b129cadda10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b129cadda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b129caddd60"/>
        <function-ref name="noAck" scoped="" ref="0x2b129cadc020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b129cadc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b129cae1268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b129cae1268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b129cae15b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b129cae1740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b129cae18c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b129cae1a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b129cae1bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129cb10440" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129cb10440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129cb10790"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129cb10918"/>
        <function-ref name="start" scoped="" ref="0x2b129cb10aa0"/>
        <function-ref name="stop" scoped="" ref="0x2b129cb10c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b129cb0b430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b129cb0b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cb0b780"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cb0b908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cb0ba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129cb0bd18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129cb0bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cb0a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129cb0e020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129cb0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cb0e370"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cb0e4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cb0e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cb0d020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cb0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cb0d370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cb0d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cb0d680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cb0d808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cb0d990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cb0db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b129cb0dd60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b129cb0dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b129cb0c0d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b129cb0c260"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b129cb0c3e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b129cb0c570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b129cb0c858" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b129cb0c858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129cb0cba8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129cb0cd30"/>
        <function-ref name="start" scoped="" ref="0x2b129cb0b020"/>
        <function-ref name="stop" scoped="" ref="0x2b129cb0b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129cb0e908" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129cb0e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cb0ec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129cb0a328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129cb0a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cb0a678"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cb0a800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cb0a988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cb0ab10"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cb0ac98"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cb0ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b129d8ca5e8" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b129d8ca5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b129d8ca938"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b129d8caac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b129d8cac48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b129d8cadd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129cb87270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129cb87270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129cb875c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129cb87748"/>
        <function-ref name="start" scoped="" ref="0x2b129cb878d0"/>
        <function-ref name="stop" scoped="" ref="0x2b129cb87a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b129cb855d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b129cb855d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b129cb85928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b129cb85ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129cb85c38"/>
        <function-ref name="done" scoped="" ref="0x2b129cb85dc0"/>
        <function-ref name="standby" scoped="" ref="0x2b129cb84020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129cb841a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129cb87ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129cb87ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cb860a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cb86228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cb863b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b129cb84c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129cb84c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cb82020"/>
        <function-ref name="header" scoped="" ref="0x2b129cb821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129cb86638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129cb86638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cb86988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b129cb843f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b129cb843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cb84740"/>
        <function-ref name="ready" scoped="" ref="0x2b129cb848c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cb84a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b129cb86bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b129cb86bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b129cb85020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129cb851a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129cb85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b129d8c3870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b129d8c3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b129d8c3bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b129d8c3d48"/>
        <function-ref name="start" scoped="" ref="0x2b129d8c2020"/>
        <function-ref name="stop" scoped="" ref="0x2b129d8c21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b129d8c2430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b129d8c2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d8c2780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b129d8c0450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b129d8c0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b129d8c07a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b129d8c0928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129d8c0ab0"/>
        <function-ref name="done" scoped="" ref="0x2b129d8c0c38"/>
        <function-ref name="standby" scoped="" ref="0x2b129d8c0dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129d8bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b129d8c2a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b129d8c2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d8c2d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d8c1020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d8c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b129d8bc4f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b129d8bc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d8bc840"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d8bc9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b129d8bd578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129d8bd578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d8bd8c8"/>
        <function-ref name="header" scoped="" ref="0x2b129d8bda50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b129d8bcc90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b129d8bcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d8bb020"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d8bb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d8c1430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d8c1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d8c1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b129d8bdd18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b129d8bdd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d8bc0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d8bc228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b129d8bfc98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b129d8bfc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d8bd020"/>
        <function-ref name="ready" scoped="" ref="0x2b129d8bd1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d8bd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b129d8c19c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b129d8c19c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b129d8c1d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129d8c0020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129d8c01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b129d8bf268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b129d8bf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b129d8bf5b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b129d8bf740"/>
        <function-ref name="resume" scoped="" ref="0x2b129d8bf8c8"/>
        <function-ref name="run" scoped="" ref="0x2b129d8bfa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b129cbc0020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b129cbc0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbc0370"/>
        <function-ref name="get" scoped="" ref="0x2b129cbc04f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cbc0680"/>
        <function-ref name="set" scoped="" ref="0x2b129cbc0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cbc4220" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbc4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbc4570"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cbc46f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cbc4880"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cbc4a08"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cbc4b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cbc4d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129cbc1188" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129cbc1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbc14d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cbc1660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cbc17e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cbc1970"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cbc1af8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cbc1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b129cbc77d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129cbc77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129cbc6c58"/>
        <function-ref name="clear" scoped="" ref="0x2b129cbc5380"/>
        <function-ref name="isValid" scoped="" ref="0x2b129cbc6578"/>
        <function-ref name="set" scoped="" ref="0x2b129cbc5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b129cbc2168" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cbc2168"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cbc2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b129cbcba48" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129cbcba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129cbc9020"/>
        <function-ref name="clear" scoped="" ref="0x2b129cbc9700"/>
        <function-ref name="isValid" scoped="" ref="0x2b129cbca828"/>
        <function-ref name="set" scoped="" ref="0x2b129cbc9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b129d900618" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b129d900618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d900968"/>
        <function-ref name="get" scoped="" ref="0x2b129d900af0"/>
        <function-ref name="setValue" scoped="" ref="0x2b129d900c78"/>
        <function-ref name="set" scoped="" ref="0x2b129d900e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129d9017a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129d9017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d901af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d901c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d901e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d900020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d9001a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d900330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129d8fc2a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129d8fc2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d8fc5f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d8fc778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d8fc900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d8fca88"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129d8fcc10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129d8fcd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b129d905c48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b129d905c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129d9020f8"/>
        <function-ref name="clear" scoped="" ref="0x2b129d9027d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b129d9049f0"/>
        <function-ref name="set" scoped="" ref="0x2b129d901020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b129d8ff1c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129d8ff1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d8ffd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b129d8fe290" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d8fe290"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d8fee10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b129d907020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b129d907020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129d906478"/>
        <function-ref name="clear" scoped="" ref="0x2b129d906b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b129d907d70"/>
        <function-ref name="set" scoped="" ref="0x2b129d905278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cbbba70" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbbba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbbbdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cbec020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cbec1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cbec330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cbec4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cbec640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129cbec928" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129cbec928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbecc78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cbece00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cbeb020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cbeb1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cbeb330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cbeb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b129cbbb020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b129cbbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbbb390"/>
        <function-ref name="get" scoped="" ref="0x2b129cbbb518"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cbbb6a0"/>
        <function-ref name="set" scoped="" ref="0x2b129cbbb828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b129cc347c8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b129cc347c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b129cc34b18"/>
        <function-ref name="request" scoped="" ref="0x2b129cc34ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b129cc31388" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b129cc31388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc30a40"/>
        <function-ref name="get" scoped="" ref="0x2b129cc30530"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc30020"/>
        <function-ref name="set" scoped="" ref="0x2b129cc2e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b129cc1c368" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b129cc1c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc1c6b8"/>
        <function-ref name="get" scoped="" ref="0x2b129cc1c840"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc1c9c8"/>
        <function-ref name="set" scoped="" ref="0x2b129cc1cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b129cc21bc8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129cc21bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129cc1f088"/>
        <function-ref name="clear" scoped="" ref="0x2b129cc1f768"/>
        <function-ref name="isValid" scoped="" ref="0x2b129cc20948"/>
        <function-ref name="set" scoped="" ref="0x2b129cc1fe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b129cbe7148" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b129cbe7148"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b129cbe7498"/>
        <function-ref name="turnOn" scoped="" ref="0x2b129cbe7620"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129cbe77a8"/>
        <function-ref name="done" scoped="" ref="0x2b129cbe7930"/>
        <function-ref name="standby" scoped="" ref="0x2b129cbe7ab8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129cbe7c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b129cc1bab8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b129cc1bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b129cc1be08"/>
        <function-ref name="wait" scoped="" ref="0x2b129cc1a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cc1a1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b129cc1a330"/>
        <function-ref name="getNow" scoped="" ref="0x2b129cc1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b129cc35060" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129cc35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc33640"/>
        <function-ref name="get" scoped="" ref="0x2b129cc33130"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc35be0"/>
        <function-ref name="set" scoped="" ref="0x2b129cc33b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cbe3020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cbe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cbe3370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cbe34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cbe3680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cbe3808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cbe3990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cbe3b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129cc22b80" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129cc22b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cc21020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cc211a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cc21330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b129cc214b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b129cc21640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b129cbe5948" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129cbe5948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cbe5c98"/>
        <function-ref name="header" scoped="" ref="0x2b129cbe5e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129cc26ae0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129cc26ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129cc22150"/>
        <function-ref name="fired" scoped="" ref="0x2b129cc241f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b129cc24b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129cc24680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129cc225d8"/>
        <function-ref name="start" scoped="" ref="0x2b129cc25860"/>
        <function-ref name="stop" scoped="" ref="0x2b129cc25d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b129cc2e880" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b129cc2e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc2c020"/>
        <function-ref name="get" scoped="" ref="0x2b129cc2d9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc2d490"/>
        <function-ref name="set" scoped="" ref="0x2b129cc2c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b129cc27830" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cc27830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cc26410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b129cbe5020" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b129cbe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cbe5370"/>
        <function-ref name="ready" scoped="" ref="0x2b129cbe54f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cbe5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b129cc2cd70" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129cc2cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc29388"/>
        <function-ref name="get" scoped="" ref="0x2b129cc2ae38"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc2a928"/>
        <function-ref name="set" scoped="" ref="0x2b129cc29898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b129cc1b020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b129cc1b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc1b370"/>
        <function-ref name="get" scoped="" ref="0x2b129cc1b4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc1b680"/>
        <function-ref name="set" scoped="" ref="0x2b129cc1b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b129cc1d750" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b129cc1d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc1daa0"/>
        <function-ref name="get" scoped="" ref="0x2b129cc1dc28"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc1ddb0"/>
        <function-ref name="set" scoped="" ref="0x2b129cc1c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b129cc27020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129cc27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129cc27370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b129cc10518" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b129cc10518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b129cc10868"/>
        <function-ref name="request" scoped="" ref="0x2b129cc109f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b129cc44c60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b129cc44c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b129cc489f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b129cc5d0c8" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b129cc5d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc5c6a0"/>
        <function-ref name="get" scoped="" ref="0x2b129cc5c190"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc5dc48"/>
        <function-ref name="set" scoped="" ref="0x2b129cc5cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b129cc41988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b129cc41988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc41cd8"/>
        <function-ref name="get" scoped="" ref="0x2b129cc41e60"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc40020"/>
        <function-ref name="set" scoped="" ref="0x2b129cc401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b129cc12020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b129cc12020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cc12370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b129cc3f2b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b129cc3f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b129cc3e910"/>
        <function-ref name="clear" scoped="" ref="0x2b129cc3c020"/>
        <function-ref name="isValid" scoped="" ref="0x2b129cc3e230"/>
        <function-ref name="set" scoped="" ref="0x2b129cc3c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b129cc50e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b129cc50e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cc4f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cc4f370"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cc4f4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cc4f680"/>
        <function-ref name="get" scoped="" ref="0x2b129cc4f808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cc4f990"/>
        <function-ref name="set" scoped="" ref="0x2b129cc4fb18"/>
        <function-ref name="clr" scoped="" ref="0x2b129cc4fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b129cc3bab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b129cc3bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b129cc3be08"/>
        <function-ref name="wait" scoped="" ref="0x2b129cc3a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cc3a1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b129cc3a330"/>
        <function-ref name="getNow" scoped="" ref="0x2b129cc3a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b129cc12620" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b129cc12620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b129cc12970"/>
        <function-ref name="turnOn" scoped="" ref="0x2b129cc12af8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b129cc12c80"/>
        <function-ref name="done" scoped="" ref="0x2b129cc12e08"/>
        <function-ref name="standby" scoped="" ref="0x2b129cc11020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b129cc111a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129cc45020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129cc45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cc45ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b129cc0fcd0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b129cc0fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc5e388"/>
        <function-ref name="get" scoped="" ref="0x2b129cc0ee00"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc0e8f0"/>
        <function-ref name="set" scoped="" ref="0x2b129cc5e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b129cc10ca8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b129cc10ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc0f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cc0f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cc0f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cc0f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cc0f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cc0f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b129cc4bd00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b129cc4bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cc500a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cc50228"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cc503b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cc50538"/>
        <function-ref name="get" scoped="" ref="0x2b129cc506c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cc50848"/>
        <function-ref name="set" scoped="" ref="0x2b129cc509d0"/>
        <function-ref name="clr" scoped="" ref="0x2b129cc50b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129cc42100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129cc42100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cc42450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cc425d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cc42760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b129cc428e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b129cc42a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b129cc11d78" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b129cc11d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cc100f0"/>
        <function-ref name="header" scoped="" ref="0x2b129cc10278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b129ccfcd98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b129ccfcd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129ccfb170"/>
        <function-ref name="runTask" scoped="" ref="0x2b129ccfb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b129cc5a458" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b129cc5a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc59a40"/>
        <function-ref name="get" scoped="" ref="0x2b129cc59530"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc59020"/>
        <function-ref name="set" scoped="" ref="0x2b129cc57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b129cc13450" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b129cc13450"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b129ba356f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cc137a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b129cc524f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b129cc524f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129cc52848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129cc529d0"/>
        <function-ref name="request" scoped="" ref="0x2b129cc52b58"/>
        <function-ref name="granted" scoped="" ref="0x2b129cc52ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129cc52e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b129cc53130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b129cc53130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cc53580"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cc53708"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cc53890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cc53a18"/>
        <function-ref name="get" scoped="" ref="0x2b129cc53ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cc53d28"/>
        <function-ref name="set" scoped="" ref="0x2b129cc52020"/>
        <function-ref name="clr" scoped="" ref="0x2b129cc521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b129cc57860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b129cc57860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc56e30"/>
        <function-ref name="get" scoped="" ref="0x2b129cc56920"/>
        <function-ref name="isSet" scoped="" ref="0x2b129cc56410"/>
        <function-ref name="set" scoped="" ref="0x2b129cc55388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b129cc11450" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b129cc11450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cc117a0"/>
        <function-ref name="ready" scoped="" ref="0x2b129cc11928"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cc11ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b129cc465e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b129cc465e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b129cc46938"/>
        <function-ref name="disable" scoped="" ref="0x2b129cc46ac0"/>
        <function-ref name="captured" scoped="" ref="0x2b129cc46c48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b129cc46dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b129cc4b1f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cc4b1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b129cc4b540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b129cc4b6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b129cc4b850"/>
        <function-ref name="write" scoped="" ref="0x2b129cc4b9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b129cc40518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b129cc40518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc40868"/>
        <function-ref name="get" scoped="" ref="0x2b129cc409f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc40b78"/>
        <function-ref name="set" scoped="" ref="0x2b129cc40d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b129cc42e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b129cc42e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cc411a8"/>
        <function-ref name="get" scoped="" ref="0x2b129cc41330"/>
        <function-ref name="setValue" scoped="" ref="0x2b129cc414b8"/>
        <function-ref name="set" scoped="" ref="0x2b129cc41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b129cc559d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129cc559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129cc55d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b129cc3b020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b129cc3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b129cc3b370"/>
        <function-ref name="suspend" scoped="" ref="0x2b129cc3b4f8"/>
        <function-ref name="resume" scoped="" ref="0x2b129cc3b680"/>
        <function-ref name="run" scoped="" ref="0x2b129cc3b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b129cd0d338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b129cd0d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cd0d688"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cd0d810"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cd0d998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cd0db20"/>
        <function-ref name="get" scoped="" ref="0x2b129cd0dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cd0de30"/>
        <function-ref name="set" scoped="" ref="0x2b129cd0c020"/>
        <function-ref name="clr" scoped="" ref="0x2b129cd0c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b129cd0e140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b129cd0e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cd0e490"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cd0e618"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cd0e7a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cd0e928"/>
        <function-ref name="get" scoped="" ref="0x2b129cd0eab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cd0ec38"/>
        <function-ref name="set" scoped="" ref="0x2b129cd0edc0"/>
        <function-ref name="clr" scoped="" ref="0x2b129cd0d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129cd0b2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129cd0b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129cd08928"/>
        <function-ref name="fired" scoped="" ref="0x2b129cd0a9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b129cd08320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129cd0ae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129cd08db0"/>
        <function-ref name="start" scoped="" ref="0x2b129cd0a088"/>
        <function-ref name="stop" scoped="" ref="0x2b129cd0a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b129cd10990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b129cd10990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129cd10ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129cd10e68"/>
        <function-ref name="request" scoped="" ref="0x2b129cd0f020"/>
        <function-ref name="granted" scoped="" ref="0x2b129cd0f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129cd0f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b129cd13710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b129cd13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cd13a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cd13be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cd13d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cd10020"/>
        <function-ref name="get" scoped="" ref="0x2b129cd101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cd10330"/>
        <function-ref name="set" scoped="" ref="0x2b129cd104b8"/>
        <function-ref name="clr" scoped="" ref="0x2b129cd10640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b129cd0c4c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b129cd0c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b129cd0c810"/>
        <function-ref name="disable" scoped="" ref="0x2b129cd0c998"/>
        <function-ref name="captured" scoped="" ref="0x2b129cd0cb20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b129cd0cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b129cd0f5e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd0f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b129cd0f938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b129cd0fac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b129cd0fc48"/>
        <function-ref name="write" scoped="" ref="0x2b129cd0fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b129cd07438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b129cd07438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b129bbcd140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cd06020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b129cd54830" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b129cd54830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cd54b80"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cd54d08"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cd53020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cd531a8"/>
        <function-ref name="get" scoped="" ref="0x2b129cd53330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cd534b8"/>
        <function-ref name="set" scoped="" ref="0x2b129cd53640"/>
        <function-ref name="clr" scoped="" ref="0x2b129cd537c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b129cd58190" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b129cd58190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b129cd54310"/>
        <function-ref name="test" scoped="" ref="0x2b129cd55998"/>
        <function-ref name="get" scoped="" ref="0x2b129cd58d10"/>
        <function-ref name="captured" scoped="" ref="0x2b129cd566d0"/>
        <function-ref name="reset" scoped="" ref="0x2b129cd56ba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129cd55e20"/>
        <function-ref name="set" scoped="" ref="0x2b129cd561f8"/>
        <function-ref name="start" scoped="" ref="0x2b129cd55088"/>
        <function-ref name="stop" scoped="" ref="0x2b129cd55510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b129cd53af8" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b129cd53af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cd53e48"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cd52020"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cd521a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cd52330"/>
        <function-ref name="get" scoped="" ref="0x2b129cd524b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cd52640"/>
        <function-ref name="set" scoped="" ref="0x2b129cd527c8"/>
        <function-ref name="clr" scoped="" ref="0x2b129cd52950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b129cd59870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b129cd59870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cd59bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b129cd06cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b129cd06cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b129cd590a0"/>
        <function-ref name="disable" scoped="" ref="0x2b129cd59228"/>
        <function-ref name="captured" scoped="" ref="0x2b129cd593b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b129cd59538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b129cd39c20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b129cd39c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cd40020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cd401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b129cd42020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b129cd42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b129cd42370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129cd5a9d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129cd5a9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cd5ad28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b129cd42668" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd42668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b129cd429b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b129cd42b40"/>
        <function-ref name="splitRead" scoped="" ref="0x2b129cd42cc8"/>
        <function-ref name="write" scoped="" ref="0x2b129cd42e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129cd40978" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129cd40978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129cd40cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129cd40e50"/>
        <function-ref name="request" scoped="" ref="0x2b129cd3f020"/>
        <function-ref name="granted" scoped="" ref="0x2b129cd3f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129cd3f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b129cda2b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b129cda2b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129cda1020"/>
        <function-ref name="runTask" scoped="" ref="0x2b129cda11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b129cd34020" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b129cd34020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cd34370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cd344f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b129cd6c208" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b129cd6c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129cd6c558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129cd6c6e0"/>
        <function-ref name="request" scoped="" ref="0x2b129cd6c868"/>
        <function-ref name="granted" scoped="" ref="0x2b129cd6c9f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129cd6cb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b129cd36d80" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b129cd36d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b129cd35170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129cd367a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129cd367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cd36af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b129cd31020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b129cd31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b129cd31370"/>
        <function-ref name="sleep" scoped="" ref="0x2b129cd6d7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b129cd31680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b129cd6d950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b129cd31990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b129cd31b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b129cd31ca0"/>
        <function-ref name="read" scoped="" ref="0x2b129cd31e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b129cd86020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b129cd861a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b129cd86330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b129cd864b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b129cd86640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b129cd868c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b129cd86a50"/>
        <function-ref name="write" scoped="" ref="0x2b129cd86bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b129cd86d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b129cd6d020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b129cd6d1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b129cd6d330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b129cd6d4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b129cd314f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b129cd31808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b129cd6d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b129cd35428" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b129cd35428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b129cd35778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b129cd35900"/>
        <function-ref name="splitRead" scoped="" ref="0x2b129cd35a88"/>
        <function-ref name="write" scoped="" ref="0x2b129cd35c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129cd34c88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129cd34c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129cd33020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129cd331a8"/>
        <function-ref name="request" scoped="" ref="0x2b129cd33330"/>
        <function-ref name="granted" scoped="" ref="0x2b129cd334b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129cd33640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b129cd6ce30" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129cd6ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b129cd6b1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b129cd6b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b129cd6b600" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b129cd6b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b129cd6b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b129cdcf020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b129cdcf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b129cdcf370"/>
        <function-ref name="sleep" scoped="" ref="0x2b129cdcd7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b129cdcf680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b129cdcd950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b129cdcf990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b129cdcfb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b129cdcfca0"/>
        <function-ref name="read" scoped="" ref="0x2b129cdcfe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b129cdce020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b129cdce1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b129cdce330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b129cdce4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b129cdce640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b129cdce8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b129cdcea50"/>
        <function-ref name="write" scoped="" ref="0x2b129cdcebd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b129cdced60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b129cdcd020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b129cdcd1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b129cdcd330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b129cdcd4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b129cdcf4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b129cdcf808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b129cdcd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b129cdc1190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b129cdc1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cdc14e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cdc1668"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cdc17f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cdc1978"/>
        <function-ref name="get" scoped="" ref="0x2b129cdc1b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cdc1c88"/>
        <function-ref name="set" scoped="" ref="0x2b129cdc1e10"/>
        <function-ref name="clr" scoped="" ref="0x2b129cdc0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b129cdc6de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b129cdc6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cdc5170"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cdc52f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cdc5480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cdc5608"/>
        <function-ref name="get" scoped="" ref="0x2b129cdc5790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cdc5918"/>
        <function-ref name="set" scoped="" ref="0x2b129cdc5aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b129cdc5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b129cdc3c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b129cdc3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cdc6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cdc61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cdc6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cdc64b8"/>
        <function-ref name="get" scoped="" ref="0x2b129cdc6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cdc67c8"/>
        <function-ref name="set" scoped="" ref="0x2b129cdc6950"/>
        <function-ref name="clr" scoped="" ref="0x2b129cdc6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b129cdc3438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b129cdc3438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b129cdc3788"/>
        <function-ref name="stop" scoped="" ref="0x2b129cdc3910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b129cdc0350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b129cdc0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b129cdc06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b129cdccdc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b129cdccdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b129cdc9170"/>
        <function-ref name="sleep" scoped="" ref="0x2b129cdc7640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b129cdc9480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b129cdc77c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b129cdc9790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b129cdc9918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b129cdc9aa0"/>
        <function-ref name="read" scoped="" ref="0x2b129cdc9c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b129cdc9db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b129cdc8020"/>
        <function-ref name="setClock" scoped="" ref="0x2b129cdc81a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b129cdc8330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b129cdc84b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b129cdc8740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b129cdc88c8"/>
        <function-ref name="write" scoped="" ref="0x2b129cdc8a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b129cdc8bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b129cdc8d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b129cdc7020"/>
        <function-ref name="getClock" scoped="" ref="0x2b129cdc71a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b129cdc7330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b129cdc92f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b129cdc9608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b129cdc74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b129cdc2020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b129cdc2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b129cdc2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b129cdc24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b129cdc2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b129cdc2808"/>
        <function-ref name="get" scoped="" ref="0x2b129cdc2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b129cdc2b18"/>
        <function-ref name="set" scoped="" ref="0x2b129cdc2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b129cdc2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b129ce29510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b129ce29510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b129ce29880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b129ce29a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b129ce27550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129ce27550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b129ce278c0"/>
        <function-ref name="configure" scoped="" ref="0x2b129ce27a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129ce2a748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129ce2a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129ce2aab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129ce2ac40"/>
        <function-ref name="request" scoped="" ref="0x2b129ce2adc8"/>
        <function-ref name="granted" scoped="" ref="0x2b129ce29020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129ce291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b129ce29c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129ce29c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b129ce27020"/>
        <function-ref name="userId" scoped="" ref="0x2b129ce271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d9447b0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d9447b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d944b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b129d944d88" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b129d944d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b129d943170"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b129d9432f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b129d943480"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129d943608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b129d9419a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b129d9419a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b129d941d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b129d93f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b129d93fb08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b129d93fb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b129d93fe78"/>
        <function-ref name="configure" scoped="" ref="0x2b129d93e030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b129d93e2b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b129d93e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b129d93e608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b129d93e790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b129d93e918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129d93eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b129d942b80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b129d942b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b129d941020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b129d9411a8"/>
        <function-ref name="request" scoped="" ref="0x2b129d941330"/>
        <function-ref name="granted" scoped="" ref="0x2b129d9414b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b129d941640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b129d93f268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b129d93f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b129d93f5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b129d93f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b129d93ed68" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b129d93ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d93d0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d93d278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129ce18838" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129ce18838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b129ce18b88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129ce18d10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129ce17020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129ce171a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129ce17330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129ce174b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129ce17640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129ce177c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b129ce17950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129ce17ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b129ce16020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b129ce16020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b129ce12270"/>
        <function-ref name="test" scoped="" ref="0x2b129ce14930"/>
        <function-ref name="get" scoped="" ref="0x2b129ce16ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b129ce15560"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce15a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce14db8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce15088"/>
        <function-ref name="start" scoped="" ref="0x2b129ce14020"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce144a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b129ce12e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b129ce12e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129ce0e798"/>
        <function-ref name="fired" scoped="" ref="0x2b129ce104f8"/>
        <function-ref name="get" scoped="" ref="0x2b129ce11a18"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce10980"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce0ec20"/>
        <function-ref name="set" scoped="" ref="0x2b129ce10020"/>
        <function-ref name="start" scoped="" ref="0x2b129ce10e08"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce0e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129ce1f6e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129ce1f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129ce1a930"/>
        <function-ref name="test" scoped="" ref="0x2b129ce1a020"/>
        <function-ref name="get" scoped="" ref="0x2b129ce1c3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b129ce1adb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129ce182f0"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce1b1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129ce1cd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce1a4a8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce1c830"/>
        <function-ref name="start" scoped="" ref="0x2b129ce1b680"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce1bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b129ce5f160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b129ce5f160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b129ce5f4b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b129ce5f638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b129ce5f7c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b129ce5f948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b129ce5fad0"/>
        <function-ref name="setControlB" scoped="" ref="0x2b129ce5fc58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b129ce5fde0"/>
        <function-ref name="getControlB" scoped="" ref="0x2b129ce5e020"/>
        <function-ref name="setControlC" scoped="" ref="0x2b129ce5e1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b129ce5e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b129ce58020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b129ce58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129ce567a8"/>
        <function-ref name="fired" scoped="" ref="0x2b129ce57560"/>
        <function-ref name="get" scoped="" ref="0x2b129ce58ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce579e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce56c30"/>
        <function-ref name="set" scoped="" ref="0x2b129ce57088"/>
        <function-ref name="start" scoped="" ref="0x2b129ce57e70"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce56320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b129ce5e808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b129ce5e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b129ce5a930"/>
        <function-ref name="test" scoped="" ref="0x2b129ce5a020"/>
        <function-ref name="get" scoped="" ref="0x2b129ce5c3c8"/>
        <function-ref name="captured" scoped="" ref="0x2b129ce5cd28"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce5b238"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce5a4a8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce5c850"/>
        <function-ref name="start" scoped="" ref="0x2b129ce5b6c0"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce5bb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b129ce55360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b129ce55360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129ce52c20"/>
        <function-ref name="fired" scoped="" ref="0x2b129ce53980"/>
        <function-ref name="get" scoped="" ref="0x2b129ce53020"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce53e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce510f8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce534a8"/>
        <function-ref name="start" scoped="" ref="0x2b129ce52310"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce52798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b129ce51770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b129ce51770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129ce4d020"/>
        <function-ref name="fired" scoped="" ref="0x2b129ce50d08"/>
        <function-ref name="get" scoped="" ref="0x2b129ce503a8"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce4e1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce4d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce50830"/>
        <function-ref name="start" scoped="" ref="0x2b129ce4e680"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce4eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129ce64180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129ce64180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129ce60270"/>
        <function-ref name="test" scoped="" ref="0x2b129ce61930"/>
        <function-ref name="get" scoped="" ref="0x2b129ce64d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b129ce606f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b129ce60bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b129ce62b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b129ce626d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ce61db8"/>
        <function-ref name="set" scoped="" ref="0x2b129ce621f8"/>
        <function-ref name="start" scoped="" ref="0x2b129ce61020"/>
        <function-ref name="stop" scoped="" ref="0x2b129ce614a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129cf016f0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129cf016f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129cefe020"/>
        <function-ref name="fired" scoped="" ref="0x2b129ceff020"/>
        <function-ref name="startAt" scoped="" ref="0x2b129ceff930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129ceff4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129cefe4a8"/>
        <function-ref name="start" scoped="" ref="0x2b129cf00578"/>
        <function-ref name="stop" scoped="" ref="0x2b129cf00a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129cee1770" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129cee1770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b129ba35388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b129ba35388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129cee1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129cee0020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129cee0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129cedc0f8"/>
        <function-ref name="test" scoped="" ref="0x2b129cedd7a8"/>
        <function-ref name="get" scoped="" ref="0x2b129cee0ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b129cedc580"/>
        <function-ref name="getScale" scoped="" ref="0x2b129cedca58"/>
        <function-ref name="reset" scoped="" ref="0x2b129cede9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cede560"/>
        <function-ref name="isOn" scoped="" ref="0x2b129ceddc30"/>
        <function-ref name="set" scoped="" ref="0x2b129cede088"/>
        <function-ref name="start" scoped="" ref="0x2b129cedee70"/>
        <function-ref name="stop" scoped="" ref="0x2b129cedd320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b129d9a0bc8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b129d9a0bc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b129ba35020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b129ba35020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d99c270"/>
        <function-ref name="fired" scoped="" ref="0x2b129d99e310"/>
        <function-ref name="startAt" scoped="" ref="0x2b129d99ec20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d99e798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b129d99c6f8"/>
        <function-ref name="start" scoped="" ref="0x2b129d99f948"/>
        <function-ref name="stop" scoped="" ref="0x2b129d99fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b129d997c68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b129d997c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b129d9944a8"/>
        <function-ref name="fired" scoped="" ref="0x2b129d9951d0"/>
        <function-ref name="get" scoped="" ref="0x2b129d996820"/>
        <function-ref name="reset" scoped="" ref="0x2b129d995658"/>
        <function-ref name="isOn" scoped="" ref="0x2b129d994930"/>
        <function-ref name="set" scoped="" ref="0x2b129d996ca8"/>
        <function-ref name="start" scoped="" ref="0x2b129d995ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b129d994020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b129d99cc18" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b129d99cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129d999db8"/>
        <function-ref name="test" scoped="" ref="0x2b129d9994a8"/>
        <function-ref name="get" scoped="" ref="0x2b129d99b820"/>
        <function-ref name="setScale" scoped="" ref="0x2b129d997270"/>
        <function-ref name="getScale" scoped="" ref="0x2b129d997748"/>
        <function-ref name="reset" scoped="" ref="0x2b129d99a658"/>
        <function-ref name="overflow" scoped="" ref="0x2b129d99a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129d999930"/>
        <function-ref name="set" scoped="" ref="0x2b129d99bca8"/>
        <function-ref name="start" scoped="" ref="0x2b129d99aae0"/>
        <function-ref name="stop" scoped="" ref="0x2b129d999020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b129cefa208" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129cefa208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cefad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129cef5020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129cef5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cef5d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129cef46b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129cef4230"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cef4b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129cef2b90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129cef2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TOne" ref="0x2b129bb079f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cef0930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129ceef270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129cef0db8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129ceef6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129ceefc58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129ceefc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b129cf48db8"/>
        <function-ref name="test" scoped="" ref="0x2b129cf484a8"/>
        <function-ref name="get" scoped="" ref="0x2b129ceee820"/>
        <function-ref name="setScale" scoped="" ref="0x2b129cf47270"/>
        <function-ref name="getScale" scoped="" ref="0x2b129cf47748"/>
        <function-ref name="reset" scoped="" ref="0x2b129cf49658"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cf491d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b129cf48930"/>
        <function-ref name="set" scoped="" ref="0x2b129ceeeca8"/>
        <function-ref name="start" scoped="" ref="0x2b129cf49ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b129cf48020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b129cf407f8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b129cf407f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cf3f578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129cf3e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129cf3fa00"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cf3e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b129cf435a8" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129cf435a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cf423a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129cf42cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129cf42830"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cf40190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b129cf3b020" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129cf3b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cf3bba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b129cf3a230" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b129cf3a230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cf39020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b129cf39930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b129cf394a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b129cf39db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b129cf327d0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b129cf327d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac2430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b129bac2788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b129cf2e578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b129cf1de78" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129cf1de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf7a1f8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cf7a380"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cf7a508"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b129cf7a690"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b129cf7a818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b129cf79428" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b129cf79428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf79778"/>
        <function-ref name="headerLength" scoped="" ref="0x2b129cf79900"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b129cf79a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b129cf79c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b129cf79d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b129cf990b8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b129cf990b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cf99408"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf99590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf99718"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cf998a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cf99a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b129cf8e400" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129cf8e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cf8e750"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cf8e8d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf8ea60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf8ebe8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cf8ed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b129cf96ba0" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b129cf96ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b129cf91728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b129cf9bcd8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b129cf9bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cf9a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cf9a228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf9a3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf9a538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cf9a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoDissemination" ref="0x2b129cf92300" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b129cf92300"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b129cf92650"/>
        <function-ref name="version" scoped="" ref="0x2b129cf927d8"/>
        <function-ref name="update" scoped="" ref="0x2b129cf92960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b129cf8d130" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b129cf8d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cf8d580"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf8d708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf8d890"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cf8da18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cf8dba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129cf8abb8" loc="76:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129cf8abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cf89760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b129cf99d58" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b129cf99d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cf980d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cf98260"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf983e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf98570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cf986f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b129cf9b020" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b129cf9b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cf9b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf9b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf9b680"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cf9b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cf9b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b129cf8f020" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129cf8f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cf8f370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf8f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf8f680"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cf8f808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cf8f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b129cf8c6c0" loc="68:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b129cf8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cf8ca10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cf8cb98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cf8cd20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cf8b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cf8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b129cf9aa20" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b129cf9aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cf9ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b129cf9e890" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b129cf9e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cf9ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b129cf8fd08" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cf8fd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cf8e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b129cf92e70" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b129cf92e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b129cf964f0"/>
        <function-ref name="get" scoped="" ref="0x2b129cf97a18"/>
        <function-ref name="set" scoped="" ref="0x2b129cf96020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b129cf8c020" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b129cf8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cf8c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b129cf8b488" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129cf8b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129cf8b7d8"/>
        <function-ref name="source" scoped="" ref="0x2b129cf8b960"/>
        <function-ref name="address" scoped="" ref="0x2b129cf8bae8"/>
        <function-ref name="destination" scoped="" ref="0x2b129cf8bc70"/>
        <function-ref name="setSource" scoped="" ref="0x2b129cf8bdf8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129cf8a020"/>
        <function-ref name="type" scoped="" ref="0x2b129cf8a1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b129cf8a330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129cf8a4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129cf8a640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129cf8a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodingTask" ref="0x2b129cfcd020" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodingTask" scoped="" ref="0x2b129cfcd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129cfcd370"/>
        <function-ref name="runTask" scoped="" ref="0x2b129cfcd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b129cfde0b8" loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b129cfde0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cfde408"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfde590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfde718"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cfde8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cfdea28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationStatistics" ref="0x2b129cfd8a48" loc="24:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b129cfd8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b129c54fcc0"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b129c54f808"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cfd7620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b129cfd50f8" loc="31:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b129cfd50f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cfd5548"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cfd56d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfd5858"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfd59e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cfd5b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b129cfda420" loc="21:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b129cfda420"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b129cfd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b129cfe0d18" loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b129cfe0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cfdf0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cfdf228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfdf3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfdf538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cfdf6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129cfd18a8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129cfd18a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129cfcf490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b129cfd4020" loc="34:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b129cfd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cfd4370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfd44f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfd4680"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cfd4808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cfd4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b129cfded58" loc="16:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b129cfded58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cfdd0d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cfdd260"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfdd3e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfdd570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cfdd6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b129cfe0060" loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b129cfe0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cfe03b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfe0538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfe06c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cfe0848"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cfe09d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b129cfd7ba0" loc="29:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b129cfd7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129cfd6020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfd61a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfd6330"/>
        <function-ref name="cancel" scoped="" ref="0x2b129cfd64b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129cfd6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dissemination" ref="0x2b129cfddaf8" loc="19:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b129cfddaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b129cfdde48"/>
        <function-ref name="version" scoped="" ref="0x2b129cfdc020"/>
        <function-ref name="update" scoped="" ref="0x2b129cfdc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b129cfd33f0" loc="36:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b129cfd33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129cfd3740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129cfd38c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129cfd3a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129cfd3bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129cfd3d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b129cfdfa20" loc="14:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b129cfdfa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cfdfd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b129cf82990" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b129cf82990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cf82ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b129cfd69b8" loc="30:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b129cfd69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cfd6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b129cfdc6b8" loc="20:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b129cfdc6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b129cfdbd00"/>
        <function-ref name="get" scoped="" ref="0x2b129cfdb3a8"/>
        <function-ref name="set" scoped="" ref="0x2b129cfdb830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b129cfd4cf0" loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b129cfd4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129cfd30a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b129cfd2080" loc="39:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b129cfd2080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b129cfd23d0"/>
        <function-ref name="source" scoped="" ref="0x2b129cfd2558"/>
        <function-ref name="address" scoped="" ref="0x2b129cfd26e0"/>
        <function-ref name="destination" scoped="" ref="0x2b129cfd2868"/>
        <function-ref name="setSource" scoped="" ref="0x2b129cfd29f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b129cfd2b78"/>
        <function-ref name="type" scoped="" ref="0x2b129cfd2d00"/>
        <function-ref name="setType" scoped="" ref="0x2b129cfd1020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b129cfd11a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b129cfd1330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b129cfd14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b129d034c98" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b129d034c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b129d062820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b129d060970" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b129d060970"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129d060cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b129d061020" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b129d061020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b129d060558"/>
        <function-ref name="get" scoped="" ref="0x2b129d061ba0"/>
        <function-ref name="set" scoped="" ref="0x2b129d060088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b129d9edcc0" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b129d9edcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b129d9ec838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dissemination" ref="0x2b129d9e8020" loc="8:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b129d9e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b129d9e8370"/>
        <function-ref name="version" scoped="" ref="0x2b129d9e84f8"/>
        <function-ref name="update" scoped="" ref="0x2b129d9e8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b129d9e8a10" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d9e8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d9e75d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b129d9e9970" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b129d9e9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129d9e9cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b129d9eb020" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b129d9eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b129bb44c80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b129bb42b78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b129d9e9558"/>
        <function-ref name="get" scoped="" ref="0x2b129d9ebba0"/>
        <function-ref name="set" scoped="" ref="0x2b129d9e9088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="valueChangedTask" ref="0x2b129d9e7a30" loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="valueChangedTask" scoped="" ref="0x2b129d9e7a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d9e7d80"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d9e6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b129d053bb0" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b129d053bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b129d052020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendData" ref="0x2b129d054e80" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendData" scoped="" ref="0x2b129d054e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0531f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d053380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d053508"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d053690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d053818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendData" ref="0x2b129d054158" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x2b129d054158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0544a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d054630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0547b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d054940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d054ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b129d04f9e8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b129d04f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d04fd38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d04e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d04e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d04e330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d04e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129d052bb8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129d052bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d04f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d04f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d04f330"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d04f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d04f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b129d04eda8" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b129d04eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b129d04d170"/>
        <function-ref name="rand32" scoped="" ref="0x2b129d04d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneTask" ref="0x2b129d043a80" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneTask" scoped="" ref="0x2b129d043a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d043dd0"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d042020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoBackoffConfig" ref="0x2b129d04e7d0" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b129d04e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b129d04eb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b129d04d738" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129d04d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d049a18"/>
        <function-ref name="fired" scoped="" ref="0x2b129d04a158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129d04ae48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129d04a9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b129d0482e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129d049e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d04a5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129d04c370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129d049448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129d04c810"/>
        <function-ref name="stop" scoped="" ref="0x2b129d04ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b129d08b4c8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b129d08b4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b129d08b818"/>
        <function-ref name="rand32" scoped="" ref="0x2b129d08b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b129d088348" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b129d088348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d08b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d08e658" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d08e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d08e9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b129d084208" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b129d084208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b129d084558"/>
        <function-ref name="rand32" scoped="" ref="0x2b129d0846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b129d0851e8" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b129d0851e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d085d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d08a938" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d08a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d08ac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129d08cab8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoForwardLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129d08cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d075d60"/>
        <function-ref name="fired" scoped="" ref="0x2b129d076470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129d0751c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129d076d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b129d073648"/>
        <function-ref name="gett0" scoped="" ref="0x2b129d0731f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d0768c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129d086658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129d075790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129d086af8"/>
        <function-ref name="stop" scoped="" ref="0x2b129d076020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129d0cc4e0" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129d0cc4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d0cc830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129d0d4968" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129d0d4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0d4cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0d4e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0d1020"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d0d11a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d0d1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129d0d1b98" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d0d1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d0d0020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d0d01a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0d0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0d04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d0d0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b129d0d0b28" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129d0d0b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129d0cfbc8"/>
        <function-ref name="init" scoped="" ref="0x2b129d0cf6f0"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129d0ce0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSubSend" ref="0x2b129d0ce6b8" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSubSend" scoped="" ref="0x2b129d0ce6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0cea08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0ceb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0ced18"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d0cc020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d0cc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129d0ccb58" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129d0ccb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d0cb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d0cb1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0cb330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0cb4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d0cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d0d15c0" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d0d15c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d0d1910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b129d0c3020" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b129d0c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0c3370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0c34f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0c3680"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d0c3808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d0c3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b129d0c3cc8" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b129d0c3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d0c20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b129d0c82b8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b129d0c82b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b129d0c8608"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0c8790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0c8918"/>
        <function-ref name="cancel" scoped="" ref="0x2b129d0c8aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b129d0c8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b129d0c75f8" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d0c75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d0c7948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d0c7ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0c7c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0c7de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d0c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b129d0c6508" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b129d0c6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b129d0c5560"/>
        <function-ref name="init" scoped="" ref="0x2b129d0c5088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b129d0c5a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b129d0c23c8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b129d0c23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d0c2718"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d0c28a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d0c2a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d0c2bb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d0c2d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d0c7020" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d0c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d0c7370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b129d0c1220" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b129d0c1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d0c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129d0f46e0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoRadioC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129d0f46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d0f1a18"/>
        <function-ref name="fired" scoped="" ref="0x2b129d0f2158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129d0f2e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129d0f29f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b129d0ef2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129d0f1e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d0f25a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129d0f3370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129d0f1448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129d0f3810"/>
        <function-ref name="stop" scoped="" ref="0x2b129d0f3cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b129d0eea10" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <component-ref qname="OrinocoConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0eea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129d0eed60"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129d0eb020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129d0eb1a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129d0eb330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129d0eb4b8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129d0eb640"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129d0eb7c8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129d0eb950"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129d0ebad8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129d0ebc60"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129d0ebde8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129d0ea020"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129d0ea1a8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129d0ea430"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129d0ea5b8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129d0ea740"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129d0ea8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d0e94a8" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d0e94a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d0e97f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b129d0e9ac8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b129d0e9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b129d0e9e18"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b129d0e6020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b129d0e61a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b129d0e6330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b129d0e64b8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b129d0e6640"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b129d0e67c8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b129d0e6950"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b129d0e6ad8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b129d0e6c60"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b129d0e6de8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b129d0e5020"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b129d0e51a8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b129d0e5430"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b129d0e55b8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b129d0e5740"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b129d0e58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b129d112df8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b129d112df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b129d10e170"/>
        <function-ref name="setRoot" scoped="" ref="0x2b129d10e2f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b129d10e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b129d112460" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129d112460"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b129d1127b0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b129d112938"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b129d112ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b129d10baf0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b129d10baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b129d10be40"/>
        <function-ref name="setRoot" scoped="" ref="0x2b129d10a020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b129d10a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b129d10b158" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b129d10b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b129d10b4a8"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b129d10b630"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b129d10b7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b129d10a4a8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b129d10a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b129d10a7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b129d1656e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="OrinocoP.SendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b129d1656e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bc18358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b129bc186b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b129d14a088"/>
        <function-ref name="enqueue" scoped="" ref="0x2b129d14ad48"/>
        <function-ref name="element" scoped="" ref="0x2b129d1493a8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129d14cc10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b129d14a6e8"/>
        <function-ref name="empty" scoped="" ref="0x2b129d14c370"/>
        <function-ref name="size" scoped="" ref="0x2b129d14c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b129d146478" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="OrinocoP.MsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b129d146478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
            <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d1863e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129d1888c0"/>
        <function-ref name="empty" scoped="" ref="0x2b129d188020"/>
        <function-ref name="put" scoped="" ref="0x2b129d188d10"/>
        <function-ref name="size" scoped="" ref="0x2b129d188470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b129d9bd370" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b129d9bd370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
            <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d9ba3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b129d9bc8c0"/>
        <function-ref name="empty" scoped="" ref="0x2b129d9bc020"/>
        <function-ref name="put" scoped="" ref="0x2b129d9bcd10"/>
        <function-ref name="size" scoped="" ref="0x2b129d9bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b129d9bec68" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b129d9bec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b129d9bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2b129d184d78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2b129d184d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129bc08500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b129bc089b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b129d1738f0"/>
        <function-ref name="flush" scoped="" ref="0x2b129d172278"/>
        <function-ref name="lookup" scoped="" ref="0x2b129d173d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CacheCompare" ref="0x2b129d1727b8" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b129d1727b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129bc08500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b129bc089b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b129d171370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b129d1d3d78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b129d1d3d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b129d1d20f0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b129d1d2278"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b129d1d2400"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b129d1d2588"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b129d1d2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b129d1d3060" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b129d1d3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129d1d33b0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129d1d3538"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129d1d36c0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129d1d3848"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129d1d39d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b129d1cd240" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b129d1cd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b129d1cd590"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b129d1cd718"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b129d1cd8a0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b129d1cda28"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b129d1cdbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b129d1cb490" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b129d1cb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d1ca088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PktRateJobConfig" ref="0x2b129d1ccc58" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b129d1ccc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d1cb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PktRateJob" ref="0x2b129d1c7700" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJob" scoped="" ref="0x2b129d1c7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d1c7a50"/>
        <function-ref name="done" scoped="" ref="0x2b129d1c7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b129d1cf500" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b129d1cf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129d1cf850"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129d1cf9d8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129d1cfb60"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129d1cfce8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129d1cfe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b129d207c80" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d207c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d233020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b129d2074c0" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b129d2074c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d207810"/>
        <function-ref name="done" scoped="" ref="0x2b129d207998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b129d1fb3a0" loc="42:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b129d1fb3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b129d1fb6f0"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b129d1fb878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b129d1fe030" loc="43:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b129d1fe030"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="jobid_t" ref="0x2b129d1d02f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d1fe380"/>
        <function-ref name="done" scoped="" ref="0x2b129d1fe508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchTimer" ref="0x2b129d1f8bb0" loc="50:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DispatchTimer" scoped="" ref="0x2b129d1f8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d1f4dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b129d1f5510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129d1f4238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129d1f5db0"/>
        <function-ref name="getdt" scoped="" ref="0x2b129d1f36c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129d1f3278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d1f5960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129d1f7728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129d1f4808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129d1f7bc8"/>
        <function-ref name="stop" scoped="" ref="0x2b129d1f50c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b129d1f9420" loc="46:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b129d1f9420"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b129d1f9770"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b129d1f98f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dispatch" ref="0x2b129d1ebbe0" loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dispatch" scoped="" ref="0x2b129d1ebbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b129d1ea020"/>
        <function-ref name="runTask" scoped="" ref="0x2b129d1ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b129d1f81c8" loc="47:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b129d1f81c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d1f8518"/>
        <function-ref name="done" scoped="" ref="0x2b129d1f86a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b129d23b8d8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="EASchedulerC.DispatchTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b129d23b8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b129bac4020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b129bac4378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b129d238bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b129d239238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b129d238020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b129d239ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b129d2374d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b129d237088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b129d239688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b129d23a458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b129d2385f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b129d23a8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b129d23ad98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b129d232530" loc="42:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <component-ref qname="EAEnergyManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d232530"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d232880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b129d231788" loc="44:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b129d231788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b129d231ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b129d22e2e8" loc="45:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b129d22e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d22e638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAScheduler" ref="0x2b129d22e8f0" loc="46:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b129d22e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b129d22ec40"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b129d22edc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b129d2229c0" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d2229c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d222d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b129d221020" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d221020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d221370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129d20cc58" loc="45:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d20cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d275020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d2751a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d275330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d2754b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d275640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d20c600" loc="42:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d20c600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d20c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129d26f6d8" loc="47:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d26f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d26fa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d26fbb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d26fd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d26e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d26e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b129d26ed00" loc="49:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b129d26ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b129d26d0a0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b129d26d228"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b129d26d3b0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b129d26d538"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b129d26d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d26f080" loc="44:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d26f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d26f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b129d26e428" loc="48:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b129d26e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d26e778"/>
        <function-ref name="done" scoped="" ref="0x2b129d26e900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b129d273d00" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d273d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d2640a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b129d273540" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b129d273540"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d273890"/>
        <function-ref name="done" scoped="" ref="0x2b129d273a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b129d263838" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d263838"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d263b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b129d263e70" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d263e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d2621e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b129d261758" loc="42:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d261758"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d261aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129d25cdf0" loc="45:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d25cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d259170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d2592f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d259480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d259608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d259790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d25c798" loc="42:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d25c798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d25cae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b129d258af8" loc="47:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b129d258af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b129d258e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b129d255020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b129d2551a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b129d255330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b129d2554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStats" ref="0x2b129d2541f8" loc="49:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStats" scoped="" ref="0x2b129d2541f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b129c554428"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b129c554020"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d254d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b129d2584a0" loc="44:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b129d2584a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b129d2587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketStats" ref="0x2b129d2534a0" loc="50:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStats" scoped="" ref="0x2b129d2534a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b129c551ca0"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b129c551318"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d251020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DissStats" ref="0x2b129d251788" loc="51:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissStats" scoped="" ref="0x2b129d251788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b129c54fcc0"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b129c54f808"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b129d250370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b129d255738" loc="48:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b129d255738"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d255a88"/>
        <function-ref name="done" scoped="" ref="0x2b129d255c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b129d2568e0" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d2568e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d256c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b129d256120" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b129d256120"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b129d256470"/>
        <function-ref name="done" scoped="" ref="0x2b129d2565f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b129d2a9598" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d2a9598"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b129d2a98e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b129d2a9bd0" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b129d2a9bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d2a8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b129d2a7560" loc="44:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b129d2a7560"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b129d2a78b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2b129bc2db80" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2b129bc23e08" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2b129bc2d4f8" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoConfig" loc="42:../../../Orinoco/interfaces/OrinocoConfig.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <short>&#10; Orinoco Configuration&#10;&#10; </short>
        <long>&#10; Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getQueueLocalReserve" ref="0x2b129bc459e0" loc="90:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpInterval" ref="0x2b129bc3c378" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Ts" ref="0x2b129bc3c108" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueueLocalReserve" ref="0x2b129bc45290" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x2b129bc45020" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMaxDwellTime" ref="0x2b129bc38d80" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b129bc38b10" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinQueueSize" ref="0x2b129bc46020" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b129bc36cd0" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBackoffTime" ref="0x2b129bc44ad0" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bo" ref="0x2b129bc44860" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpDeviation" ref="0x2b129bc3bbe8" loc="56:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinDwellTime" ref="0x2b129bc3aca8" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b129bc3aa38" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxDwellTime" ref="0x2b129bc374f8" loc="72:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpDeviation" ref="0x2b129bc3b4b0" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="alpha" ref="0x2b129bc3b240" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbsWakeUpDeviation" ref="0x2b129bc3a3a0" loc="60:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinQueueSize" ref="0x2b129bc46738" loc="84:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumWaitingIntervals" ref="0x2b129bc365f8" loc="78:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinDwellTime" ref="0x2b129bc38478" loc="66:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpInterval" ref="0x2b129bc3cab8" loc="47:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNumWaitingIntervals" ref="0x2b129bc37e40" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b129bc37bd0" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBackoffTime" ref="0x2b129bc44178" loc="93:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b129bc5b020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc5da20" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2b129bc5dd48" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2b129bc5f2a0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc61bb8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129bc5f020" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b129bc5e920" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc5e348" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2b129bc5e6a0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2b129bc61520" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc612b0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b129bc5d338" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc5d0c8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2b129bc5fc28" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2b129bc0d470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc5f9b8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b129bc132a8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129bc725d8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129bc725d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b129bc72e68" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b129bc53a00" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
              <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc53100" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b129bc53428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129bc53738" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b129bc32030" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b129bc34d90" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b129bc31430" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b129bc311c0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b129bc34418" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129bc32818" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b129bc4a838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc4a5c8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b129bc48830" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc485c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b129bc47948" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc47380" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129bc47690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129bc57ab8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b129bc58bd0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc58640" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129bc58950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketDelay" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/PacketDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129bc65020" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
          <interfacedef-ref qname="PacketDelay"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129bc65020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="delay" ref="0x2b129bc634e8" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="46:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; @return packet delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc63278" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b129bc65aa0" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/PacketDelay.nc">
          <short>&#10; Initialize packet delay tracking by stamping packet with current time&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc65830" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="creationTime" ref="0x2b129bc62020" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="54:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; </short>
          <long> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; @return locale time, at which the packet was created at its origin&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc63d00" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b129bc2f020" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129bc2f7c0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b129bc7c070" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b129bc7c7a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b129bc7a020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b129bc7ae70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b129bc78480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129bc78c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b129bc7a738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129bc77768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b129bc774f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b129bc6b900" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b129bc79608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b129bc79d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueSend" loc="48:../../../Orinoco/interfaces/QueueSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129bc59c40" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="50:../../../Orinoco/interfaces/QueueSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; messages was successfully stored in the sending queue and will&#10; be eventually sent/forwarded.&#10; There is no event signaled after packet sending.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted, EBUSY if&#10;                  the component cannot accept the request now but&#10;                  will be able to later, FAIL if the stack is in&#10;                  a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc596b0" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129bc599c0" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b129bc69c18" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="81:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bc69650" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129bc69960" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129bc6adb0" loc="78:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="68:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129bc123b0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129bc123b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b129bc1c020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b129bc21778" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b129bc1f5b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b129bc1f020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b129bc1f338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b129bc207b8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b129bc1b020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b129bc1c740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b129bc20020" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b129bc12e80" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b129bc12c10" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b129bc1d5b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b129bc1d020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b129bc1d338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b129bc228e8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b129bc22678" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129bc210d8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129bc43588" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc43588"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x2b129bc40338" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc43588"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b129bc400c8" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc43588"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129bc4f250" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc4f250"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x2b129bc4ecd8" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129bc4fab0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc4f250"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129bc4e540" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc4f250"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b129bc4e2d0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129bc4f250"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b129bc9a020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b129bca9810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b129bca95a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b129bcab020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b129bcaba18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b129bcab7a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b129bcaa4d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b129bcaa260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b129bcaad18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b129bcc0dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b129bcbf4c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b129bcc0070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b129bcbe290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129bcc0710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b129bcbfb80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129bcc1328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b129bcc1998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b129ba4c378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b129ba57258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b129ba4ca90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b129ba59070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b129ba59860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b129bb0ee28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b129bb264f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b129ba93940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b129bb27020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129be61920" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b129be61020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b129be61380" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129be61690" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b129be76c68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be766a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129be769b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129be77e28" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b129be5fbe8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be5f978" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129be77030" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be5ea60" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b129be5ed88" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b129be7f930" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be7f6c0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b129be6fa88" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be6f818" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b129be71020" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b129be71a78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be71808" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b129be6c2a0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be6ec98" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129be6c020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b129be6ddc0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be6d808" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129be6db40" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b129be835c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be83358" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b129be82840" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be822c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b129be825c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b129bbdf848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b129be6b478" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be6b208" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b129be7ed20" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b129be7e770" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b129be7eaa0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b129be7dac8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b129be7a290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be7a020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b129be793b0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be79140" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b129be78468" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be781f8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129be8b808" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be8b278" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129be8b588" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b129be85a68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be854a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129be857b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129be8ac70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b129be89a50" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be897e0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129be87e28" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129be87880" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b129be87ba8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b129bf65640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bf65060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b129bf653c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b129bf6a948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b129bf66760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129bf66198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b129bf664e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b129bf8cb60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b129bf8c450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b129bf941d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b129bf93528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b129bf91020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129bf92d60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b129bf93d40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b129bf94cc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129bf94a58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b129bf91818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b129bf925b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b129bf7c110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b129bf7c9c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b129bf7e7b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b129bf7e548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b129bf7b4e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b129bf7b278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b129bf98020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b129bf98bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129bf98958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b129bf97640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b129bf973d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129c0a69b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b129c0a6418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c0a6738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b129c0c54a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b129c0c5238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b129c0c32a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b129c0c5c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c0c3020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b129c0c61d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b129c0c2a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b129c0c2160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c0c2480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b129c0c27a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b129c0c6a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129c0a52b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b129c0c8880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c0c8ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b129c0a5020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129c0c9bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b129c0c9940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b129c0ea9b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b129c0ea3f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b129c0ea730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c0e6af8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c0e6af8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b129c0e6d28" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c0e6d28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b129c0e35e8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c0e6d28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b129c0e1628" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b129c0e3e00" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b129c0e1d18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b129c0f83a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b129c0f9570" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b129c0f59f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c0f5780" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b129c0f6a08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b129c0fa710" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b129c0fae30" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b129c0f9c90" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b129c0f8a80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b129c0f6378" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c0f6108" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b129c0f5110" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b129c1e61d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b129c1e4578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b129c1c0328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b129c1e2780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b129c1e2020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b129c1e4c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b129c1e54c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b129c1e5250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b129c1e1290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b129c1e1020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b129c1c0a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b129c1e5de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b129c1e5b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b129c1e6b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b129c1e6890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b129c1df020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b129c1da9b8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b129c1da748" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b129c1db8e8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129c1df8d8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b129c1dec38" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b129c1de9c8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b129c1dc3a0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b129c1da070" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129c1de290" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b129c1de020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1df020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b129c1dca98" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129c1db1d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b129c1d7c78" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1d7c78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b129c1f83e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b129c1fa760" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129c1d4568" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1d7c78"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b129c1fae68" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b129c1f8b30" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129c1fa020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1d7c78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b129c1d4c40" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c1d7c78"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b129c1f9590" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129c1f9c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b129c1cfb88" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c1cfb88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b129c1c70d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b129c1c81d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129c1cc4a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c1cfb88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b129c1c7a28" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b129c1c77b8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b129c1c61d8" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b129c1cbc40" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b129c1cb520" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b129c1c8930" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129c1ccdd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c1cfb88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b129c1ccb68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b129c1cfb88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b129c1ca360" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129c1caa48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129c2ef698" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b129c2ea728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b129c2e9838" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b129c2e95c8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b129c2e8290" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129c2e8020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b129c2ea020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b129c2eae80" loc="81:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c2ef698"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b129c2eb020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b129c2eb750" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b129c323020" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b129c326cb0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2b129c3a6368" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b129c3a6368"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b129c3a6c20" loc="51:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b129c3a6368"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c386dd8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c386dd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b129c3b3068" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b129c3af958" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b129c3b2a78" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b129c3af020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b129c3b1a08" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b129c3b1d28" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b129c3b1258" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b129c3ae110" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b129c3b3b28" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b129c3b38b8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c3b3068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129c3b2328" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b129c3e1290" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b129c3e2178" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b129c3e4020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b129c3e2ae8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b129c3e2878" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b129c3e39d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b129c3e3760" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b129c3e1c08" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b129c3e1998" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b129c3e4750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b129c3e30a8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b129c3e4e08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b129c3d5178" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b129c3d8258" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b129c3d8970" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b129c3d7178" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b129c3d5928" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b129c3d7948" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b129c3d9070" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b129bad9978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b129bad9d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b129c3d9a28" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b129bad9978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b129bad9d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b129c3d97b8" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b129bad9978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b129bad9d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2b129c5620c8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c52f7b0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b129c52fad8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c52fde8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficStatistics" loc="43:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date February 9th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRxBurst" ref="0x2b129c5587a0" loc="52:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxBurst" ref="0x2b129c5580d8" loc="50:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktCreationIntvl" ref="0x2b129c559258" loc="46:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktReceptionIntvl" ref="0x2b129c559998" loc="48:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardDelay" ref="0x2b129c556020" loc="54:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueStatus" loc="41:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date September 2 2013&#10;</long>
      </documentation>
      <function event="" provided="0" name="dropped" ref="0x2b129c57a818" loc="60:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="56:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; signaled, if a new (remote) packet cannot be stored in the queue&#10; this event must only be signaled from Receive.receive() !&#10;</short>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="acceptsRemote" ref="0x2b129c57a110" loc="54:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="49:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; check if the queue accepts remote packets&#10;&#10; </short>
          <long>&#10; check if the queue accepts remote packets&#10;&#10; @return true, if accepting; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129c572800" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b129c56e728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b129c56b020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b129c56dd78" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b129b15a488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b129b15a488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b129c56a020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129c56bc50" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b129c56e020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b129c56d290" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c572800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b129c56f070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b129c56f790" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CacheCompare" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b129c57c788" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <interfacedef-ref qname="CacheCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129c57c788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="equal" ref="0x2b129c5775b0" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <documentation loc="42:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <short>&#10; compare a cached element ce with another element cmp&#10;&#10; </short>
          <long>&#10; compare a cached element ce with another element cmp&#10;&#10; @param ce  element in cache&#10; @param cmp element for comparison&#10;&#10; @return true, if a == b; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="CacheCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129c57c788"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129c57c788"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ce" ref="0x2b129c577020" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129c57c788"/></type-var>
          </variable>
          <variable name="cmp" ref="0x2b129c577330" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b129c57c788"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129c5674a0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5674a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b129c5983b0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5674a0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b129c59bcf8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b129c567cc8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b129c59a718" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5674a0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b129c59a4a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5674a0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b129c59b4e8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficUpdates" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="updateRxBurst" ref="0x2b129c58a378" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b129c58a108" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateForwardDelay" ref="0x2b129c58aca0" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="done" ref="0x2b129c58aa30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTxBurst" ref="0x2b129c58ba18" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b129c58b7a8" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktReceptionIntvl" ref="0x2b129c58b110" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktCreationIntvl" ref="0x2b129c58e9b0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b129c5752a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b129c5752a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b129c575ab8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b129c5752a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b129c5968b8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5968b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2b129c593338" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5968b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b129c5930c8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5968b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b129c591418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2b129c593cc8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5968b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b129c593a58" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b129c5968b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoPathCost" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCost" ref="0x2b129c625258" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b129bc0dd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reviseCost" ref="0x2b129c6258f8" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="inspectBeacon" ref="0x2b129c624998" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b129bc0dd20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c624060" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cost" ref="0x2b129c6243f0" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b129bc0dd20"/></typename>
            </type-int>
          </variable>
          <variable name="update" ref="0x2b129c624708" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b129c63b7b8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b129c63b020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoBackoffConfig" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <short>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; </short>
        <long>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; @author Christian Renner&#10; @date January 11 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMaximumBackoff" ref="0x2b129c618360" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b129c63f290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c63f020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b129c6f13c0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b129c6f4d80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b129c6f1140" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b129c6ede18" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129c6ede18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b129c6e0068" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c6e0068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b129c6decf0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c6e0068"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6dea80" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b129c6dc020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6dfca8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b129c6e0b88" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6e0918" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129c6db2a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c6e0068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6dcc48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b129c6db020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129c6e0068"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b129c6e8670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6e8400" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b129c6ec968" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6ec380" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b129c6ec6e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b129c6eb710" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6eb4a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b129c6eac80" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6ea698" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b129c6eaa00" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b129c6e75b8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c6e7348" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b129c6e4d48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b129c6e4590" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b129c6e4320" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b129c6e3580" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b129c706e58" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b129c706e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b129c702dc8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c702b58" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129c7023d0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b129c706e58"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c702160" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b129c7039a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c703738" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129c700ab0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b129c706e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7004e8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b129c700830" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b129c706e58"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b129c7510d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b129c752178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b129c753848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b129c752900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b129c751ac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b129c74c020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c74dcc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b129c716bc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b129c74d5b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c74d348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b129c74b988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c74b398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c74b708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b129c74ccd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c74c6e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c74ca58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b129c749c30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b129bbca4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7499c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b129c748928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b129bbca4c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c748348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b129c7486a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b129bbca4c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b129c7492d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c749060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b129c747070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b129bbca4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b129c742860" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c742278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b129c7425e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b129c740948" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7406d8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b129c743a60" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b129c743108" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b129c74fe60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129c71da70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b129c71d170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b129c71d4d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c71d7e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b129c719df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c719828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129c719b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129c719020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b129c71c7e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c71c578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129c71a6e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c71a140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b129c71a468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b129c788920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b129c78e4e8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c78e278" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b129c77e670" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c77e400" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b129c77dce0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c77da70" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b129c780020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c781d38" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b129c782910" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7826a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b129c780cb0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7806f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c780a30" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b129c781618" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c781060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c781398" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b129c77d348" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c77ed40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b129c77d0c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b129c7871d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b129c787ad0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b129c785c28" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7859b8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b129c7865b8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c786348" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b129c7850a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c786dd0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b129c79a110" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b129c79b290" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b129c79b020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b129c79b9c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b129c79f748" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b129c79a8c0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b129bbcd540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b129c794a10" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7947a0" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b129c796020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c798d48" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129c795578" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b129c796d88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7967d8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b129c796b08" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b129c7984e8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c798278" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b129c794020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c795d20" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b129c764640" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b129c767e50" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c767be0" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b129c763290" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c763020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b129c763ac8" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b129c762608" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c762398" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b129c758e60" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c758bf0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b129c759328" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b129c75ab50" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c75a570" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c75a8d0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b129c75e800" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c75e590" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b129c75d2d0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c75d060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b129c75b2a0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c75db50" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c75b020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b129c75f020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b129c75fda0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c75f828" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c75fb20" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b129c75bd90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c75bb20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b129c7aaa28" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7aa7b8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b129c7ab290" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7ab020" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b129c777020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c778a08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b129c778d28" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b129c774020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c776d20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b129c7a5748" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a5198" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c7a54c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b129c776520" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7762b0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b129c7aa040" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7aba88" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b129c7abd98" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b129c7738b8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c7732d8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c773638" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b129c7a6a20" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a67b0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b129c777a60" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7777f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b129c7af290" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7af020" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b129c7b1720" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129c7b1140" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c7b14a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b129c7a2d88" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b129bbca8b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b129c7a4290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a4020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b129c7a25f8" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b129bbca4c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b129c7a6020" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a79d0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b129c7a7d00" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b129c774aa8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c774838" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b129c7ad818" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7ad278" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b129c7ad598" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b129c7a9798" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a91f8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b129c7a9518" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b129c7a1790" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a1520" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b129c7ae020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7afa30" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b129c7afd28" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b129c778290" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c778020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b129c7a4d78" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a4b08" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b129c7a7290" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7a7020" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b129c7aeaa8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c7ae838" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b129c755b48" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c755598" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b129c7558c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b129c754328" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b129c7563b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c756140" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b129c756dd0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c756b60" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b129c78b5b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c78b348" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b129c757ab0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c757840" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b129c78bda0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b129c78a828" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c78a5b8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b129c829b28" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b129c828428" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b129c828d40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b129c829438" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b129c836d90" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c836b20" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b129c8747a8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c874538" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129c833cd0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c833728" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b129c833a50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b129c8712c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
              <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129c871020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b129c85e070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b129c85d020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b129c85e7d0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b129c860868" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b129c8602b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b129bbdfbf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b129c8605e8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b129c909c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b129c906580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b129c901bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b129c901440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b129c904360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b129c904b50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b129c93dac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b129c902c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b129c93d858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b129c902c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b129c8fdae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b129c93e5e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b129c902c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b129c93e378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b129c902c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b129c93d020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b129c902c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b129ca6de70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
              <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129ca6dbc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b129ca6d290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129ca6d020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b129caa6020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129caa7ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b129caa6790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129ca64cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129ca64a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129caa7640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129caa73d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b129ca61020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129ca62d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b129caab4e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b129caab270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b129ca61ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129ca61840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b129caa9020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b129caabce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b129ca625b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b129ca62340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b129bbdd020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b129caff428" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b129cafd4a0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b129cafc020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b129cafdc38" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b129cafc780" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b129caffc58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b129cafb020" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b129cb01c50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129cb019e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b129cb44020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129caf87b8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b129caf8548" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b129cb6ee50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129cb6ebe0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b129cb72dd0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129cb72b60" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b129cb6fb10" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129cb6f580" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b129cb6f890" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b129cb6e4e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b129cb6e278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b129bbf8510"/>
                <typename><typedef-ref name="message_t" ref="0x2b129bbf7aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b129cc343e8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b129cc34178" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b129cbe49c8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b129cc49908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b129cc49908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b129cc49b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129cc49b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b129cc44630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129cc49b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b129cc443c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b129cc49b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b129cc471d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b129cc46290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b129cc47b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b129cc47890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b129cc4a9a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b129cc4e020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129cc51ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b129cc4d338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129cc4d0c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b129cc4e820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b129cc4dd40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129cc4dad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b129cd3e6b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b129cd41d58" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b129cd3e100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129cd3e420" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b129cd3ca48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b129cd3bda0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b129cd3c140" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b129cd3c460" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b129cd3c7a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b129cd43b98" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b129cd43928" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b129cd7d020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b129cd74a60" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b129cd78538" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b129cd73458" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b129cd731e8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b129cd7e880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b129cd75108" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b129cd76e18" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b129cd7ad50" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b129cd7aae0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b129cd7b020" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b129cd6fb98" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b129cd6f928" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b129cd794d0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b129cd714b0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b129cd71240" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b129cd70360" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b129cd74338" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b129cd740c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b129cd6f258" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b129cd76020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b129cd78c18" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b129cd7b978" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129cd7b708" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b129cd79de0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b129cd79b70" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b129cd75918" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b129cd73b60" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b129cd71ba0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b129cd70aa8" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b129cd76738" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b129ba2e9b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b129cd7d738" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b129cd7a338" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b129cd7a0c8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b129cdc4748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b129cdc3020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoDissemination" loc="9:../../../Orinoco/interfaces/OrinocoDissemination.nc">
      <documentation loc="1:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <short>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.</short>
        <long>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.&#10; The dissemination layer only attaches version numbers to &#10; outgoing data packets and receives updates piggy-backed on&#10; incoming beacons and informs the data storage layer.&#10;</long>
      </documentation>
      <function event="" provided="0" name="data" ref="0x2b129cf95e78" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="15:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get data (reference) from owner to send in &#10; outgoing beacon&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x2b129cf95bd0" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="version" ref="0x2b129cf954a8" loc="13:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="10:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get current version from data owner&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="update" ref="0x2b129cf92020" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="21:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; signal there is a new update&#10; the user must copy the data out&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rversion" ref="0x2b129cf94568" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
          <variable name="rdata" ref="0x2b129cf94900" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b129cf94c20" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b129b15f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationDelay" loc="40:../../../Orinoco/interfaces/DisseminationDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="delay" ref="0x2b129d02d360" loc="47:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/DisseminationDelay.nc">
          <short> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; @return data delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b129b15fb98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b129d089218" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b129d089218"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b129d089cc0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b129ba53ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b129d089218"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b129d089a50" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b129d089218"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAPeriodicJobConfig" loc="40:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPeriod" ref="0x2b129d1cc8b8" loc="41:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJob" loc="40:../../../EAJobs/interfaces/EAJob.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJob.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b129d1cacd0" loc="43:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b129d1c73a0" loc="47:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJobConfig" loc="40:../../../EAJobs/interfaces/EAJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b129d204b00" loc="43:../../../EAJobs/interfaces/EAJobConfig.nc">
        <interfacedef-ref qname="EAJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="ea_generic_jobconfig_t" ref="0x2b129d206078"/>
              <typename><typedef-ref name="ea_generic_jobconfig_t" ref="0x2b129d206690"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAScheduler" loc="42:../../../EAJobs/interfaces/EAScheduler.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAScheduler.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="jobStarted" ref="0x2b129d1fb108" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b129d1d02f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b129d1fce40" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b129d1d02f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleJob" ref="0x2b129d1fc7d8" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b129d1d02f8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b129d1fc240" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b129d1d02f8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b129d1fc558" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b129b160608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
