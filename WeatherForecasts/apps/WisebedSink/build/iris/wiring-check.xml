<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="51:SinkC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b052629c668"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b05263280c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b05263280c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0526338c38"/></to>
    </wire>
    <wire loc="59:SinkC.nc">
      <from><interface-ref name="BootTimer" scoped="" ref="0x2b05262a4598"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526a05a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0526a05a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:SinkC.nc">
      <from><interface-ref name="DistTimer" scoped="" ref="0x2b05262b37b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526bc72b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0526bc72b0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:SinkC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b05262b6e18"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0526bc1878"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b0526bc1878"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0526bd6020"/></to>
    </wire>
    <wire loc="66:SinkC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x2b05262b8cc8"/></from>
      <to><interface-ref name="ForwardingControl" scoped="" ref="0x2b0526bbd3c0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b0526bbd3c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0526bd7710"/></to>
    </wire>
    <wire loc="67:SinkC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b05262ba890"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x2b0526bbdc20"/></to>
    </wire>
    <wire loc="85:SinkC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b05262ba890"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b052658b850"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b052658b850"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b05265d8728"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b0526bbdc20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0526c82850"/></to>
    </wire>
    <wire loc="69:SinkC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b05262cdd68"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0526be7528"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0526be7528"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b052777e750"/></to>
    </wire>
    <wire loc="72:SinkC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b05262de1c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0526bbcd30"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0526bbcd30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0526bd5020"/></to>
    </wire>
    <wire loc="73:SinkC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b05262d4628"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526bbbbb8"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526bbbbb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526bd5e50"/></to>
    </wire>
    <wire loc="74:SinkC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b05262ddac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526beac48"/></to>
    </wire>
    <wire loc="87:SinkC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b05262ddac8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05265860c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05265860c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05265dfd20"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526beac48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526c08bb8"/></to>
    </wire>
    <wire loc="75:SinkC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b05262e42b8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b0526bed930"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b0526bed930"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b0526c07930"/></to>
    </wire>
    <wire loc="76:SinkC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b05262eb608"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526bec9a0"/></to>
    </wire>
    <wire loc="94:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526bec9a0"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c7b5a8"/></to>
    </wire>
    <wire loc="80:SinkC.nc">
      <from><interface-ref name="ForecastUpdate" scoped="" ref="0x2b05262c9a38"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b052761fba0"/></to>
    </wire>
    <wire loc="93:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b052761fba0"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b05276c6248"/></to>
    </wire>
    <wire loc="81:SinkC.nc">
      <from><interface-ref name="ForecastValue" scoped="" ref="0x2b05262ca2e0"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b052761be70"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b052761be70"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b05276f4530"/></to>
    </wire>
    <wire loc="86:SinkC.nc">
      <from><interface-ref name="SerialReceive" scoped="" ref="0x2b05262da1b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526587ab0"/>
      <arguments>
        <value cst="I:200">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:SinkC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0526300c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05269bdcb0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b05269bdcb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05269b55e8"/></to>
    </wire>
    <wire loc="94:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b052789bc58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526beac48"/></to>
    </wire>
    <wire loc="95:SinkC.nc">
      <from><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b05262fc138"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b052789b600"/></to>
    </wire>
    <wire loc="67:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b052789b600"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05278ff080"/></to>
    </wire>
    <wire loc="99:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05278ecdf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526beac48"/></to>
    </wire>
    <wire loc="100:SinkC.nc">
      <from><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b05262fc830"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05278ec798"/></to>
    </wire>
    <wire loc="69:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b05278ec798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05278e74a0"/></to>
    </wire>
    <wire loc="105:SinkC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b05262f8350"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526a16c48"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b052804a020"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527777130"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05277155f0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527fd27b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b052729b020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0527f50430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527111238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527effde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527e37438"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526bd7110"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526a1fe38"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526a0da38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b05267dfb00"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b05267da998"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05267669f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05265d8110"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526985c88"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b05264e5308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b05260e05c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b05260e05c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b052618bd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b05264e5ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b05273e2870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b05264e5ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b052729c450"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b05264e5ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526327be8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0526327be8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05263424f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b05264e4418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b05263369a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b052756a770"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b05263369a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b052690f4e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0526332b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b05264b5ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b0526341398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05264b54b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0526342b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05269ef2d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0526342b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0526330a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0526330a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b052633a428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b052633d108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b05263369a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b05263475f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b05263501a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b05263501a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b05263df430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b052634c7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b052633d108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b0526382c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0526462520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b05263747e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b05263f7020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b05263f7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a5d710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b052637d7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0526414d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0526414d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ad3710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b05263874d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b052641d8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b052641d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b51710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b0526391af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0526479c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b052634e4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b05263dd740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b05263dd740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052795a710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b05263751a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b052641f5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b052641f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b57710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b05263607e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b05263eb930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b05263eb930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279df6a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b0526369968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b05263f0740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b05263f0740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a4f710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b0526371c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b052640a430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b052640a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a54710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b052637ac78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0526410120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0526410120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ac9710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b0526354c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b05263cc020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b05263cc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052796a6a8"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b052635dc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b05263e8d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b05263e8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279d6710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b0526365e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b05263ecbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b05263ecbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a45710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b052636d1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b05264078c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b05264078c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527abb710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b0526384968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0526419d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0526419d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b48710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b05263937e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0526483c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b052636b4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0526416a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0526416a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ad9710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b05263df430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527960710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b0526359348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b05263e3120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b05263e3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279cc710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b05263804d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0526475cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b0526357658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b05263f2500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b05263f2500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279e66a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b0526373968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b052640c120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b052640c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a5a710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b052637c968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0526413e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0526413e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ad0710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b0526386658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b052641ca50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b052641ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b4e710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b052634d658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b05263dc8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b05263dc8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527957710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b052635f968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b05263eaa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b05263eaa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279dc710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b0526367af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b05263ee8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b05263ee8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a4c710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b0526370e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b05264095b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b05264095b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ac2710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b0526379e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b052640f2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b052640f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ac6710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b0526353e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b05263cb120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b05263cb120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527967710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b052635ce00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b05263e7e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b05263e7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279d3710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b0526363020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0526401d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0526401d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a42710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b0526383af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0526430e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0526430e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b44710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b0526361348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b05263f9e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b05263f9e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a606a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b052637e658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0526415bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0526415bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527ad6710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b0526388348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b052641e740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b052641e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b54710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b0526392968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052647d3e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b052634f348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b05263de5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b05263de5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052795d710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b05263584d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b05263e22a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b05263e22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279c9710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b0526377020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0526420500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0526420500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b5a6a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b052636a7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b05263f15b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b05263f15b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279e3710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b0526372af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b052640b2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b052640b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a57710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b052637baf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0526411020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0526411020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527acd710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b05263857e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b052641abd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b052641abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527b4b710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b052633ca70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b05263cedc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b05263cedc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052796d520"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b052635eaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b05263e9bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b05263e9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279d9710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b0526366c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b05263eda50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b05263eda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a49710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b052636e020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0526408740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0526408740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527abe710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b052637f658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b052646f3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b052636c348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0526417930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0526417930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527adc6a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b05263621a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0526400e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0526400e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527a3f710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b0526351020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b05263e02a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b05263e02a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0527964710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b052635a100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b05263e5020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b05263e5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b05279cf710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b052618ac58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b0526194168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b05260dfe30"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b05261af988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0526abc0c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b05269acb90"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b0526979020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b05269aa668"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526980800"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526980800"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0527c5c7c8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05269a92a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b052697f3f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b052697f3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05265860c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b05269e5080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b05269ac358"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b052697e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526586cd0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0526586cd0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b05265e1738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b052697d5b8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0526584348"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0526584348"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b05265de908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0527c5b450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b05265325d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0527c5a060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526586cd0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b05265325d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0526577920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b05265766f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526588920"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526588920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526580460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b05265753f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526586cd0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526574a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05265860c0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b0526573780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b0526571020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b05265d8728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b052660bda8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526587ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05265e1180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b05265d8110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b052660b790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b05265f28f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0526584c80"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b05265dd308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b05265f4208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b05265dc020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05265d7760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b05265f2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b0526967020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b05265f4208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b052673c020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b05265d7760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b052673d868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b052673cdb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b05265f2020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b052661fbc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05265f28f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0526739a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05265f28f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0526731420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05265f28f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b052673a6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0526620b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b0526739020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b0526604950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b052661ab38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0526735b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b0526618398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b05267348b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b05267348b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0526775338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0526749448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b05267540c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b05267540c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0526770310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b0526667830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b052663dd70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b0526669020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b0526663918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b0526737100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b05267378a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b0526771290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b0526775af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b0526775af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b05267bb780"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0526770310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b05267ba020"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b0526775338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b05267bb020"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0526769398"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b052683ea88"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b052683ea88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0526937270"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b05267b7640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0526769398"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b05267b9020"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b05267e4328"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b05267e4328"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b05267dc258"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b05267b97c0"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b05267e4b80"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b05267e4b80"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b05267dcaf0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b05267b8020"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b05267e3510"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b05267e3510"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b05267db3c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b05267e1be0"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b05267d8240"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b05267e29d0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b05267d90f0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b05267e13a0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b05267d9988"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b05267d77d8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0526332b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b05267d64b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b05261b03c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b0526947450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b05268387f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b05268387f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0526927a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0526940b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b052684f6e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b052684f6e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b052687a6f8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b052686a5e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526875838"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b052684a020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b0526873020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052685f598"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b0526897938"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052685f598"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b0526893bf8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052685f598"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b052688e020"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b052690fc08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b052684f6e0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b05269a33e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b05269ef2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05269b5020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b05269b4ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b05269b6e10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b05269b6e10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b0526353e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b05269b3e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b05269f1020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b05269f1020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b0526354c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b05269df020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b05269f01b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b05269f01b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b052633ca70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b0526a0c080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b05269e5080"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b05269e8e28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b05263280c0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b0526a04538"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b052658b850"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a1bb68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a1bb68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526bb75e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0526a1fe38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526a10348"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0526a16c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526ba7128"/></to>
    </wire>
    <wire loc="37:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0526a10348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0526b2dc20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b0526bb1858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526b66ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0526b61c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0526a37838"/></to>
    </wire>
    <wire loc="38:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0526a37838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0526b2c478"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0526b9e330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b0526a35c80"/></to>
    </wire>
    <wire loc="39:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b0526a35c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0526b28608"/></to>
    </wire>
    <wire loc="40:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b0526a31108"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b0526b26670"/></to>
    </wire>
    <wire loc="72:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b0526b26670"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b0527d3d168"/></to>
    </wire>
    <wire loc="71:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0526b28608"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0527d3f128"/></to>
    </wire>
    <wire loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0526b2dc20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0527d447b8"/></to>
    </wire>
    <wire loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0526b2c478"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0527d43020"/></to>
    </wire>
    <wire loc="75:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0527d3b2f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526aa3180"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0526aa3180"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0526ac7a70"/></to>
    </wire>
    <wire loc="76:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0527d362a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526a9e160"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526a9e160"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526ac2a98"/></to>
    </wire>
    <wire loc="77:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0527d35538"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0526acf4e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0526acf4e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0526ac1e18"/></to>
    </wire>
    <wire loc="78:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0527d32688"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0526acc7b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0526acc7b0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0526abc7c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b0526b5dcf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b0526bac930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2b0526bea650"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2b0526c085c0"/></to>
    </wire>
    <wire loc="67:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0526c82850"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0526ca7df8"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0526bba868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526bd3a30"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c7b5a8"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b05276fd818"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b0526bdf2b8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b05277fc060"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Stats" scoped="" ref="0x2b05277fc060"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b052785f500"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b052777e750"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0527777750"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0526c10020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0526bff240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526c7d430"/></to>
    </wire>
    <wire loc="68:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526c7d430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526ca6890"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0526bfccc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526c7cc80"/></to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526c7cc80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526ca42b0"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0526bfc020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0526c7c080"/></to>
    </wire>
    <wire loc="69:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0526c7c080"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0526ca55a8"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c1d510"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c7b5a8"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b0526cb1080"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b0526c03b30"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0526c16d40"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b052777e750"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b05277a1df8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0526bd6020"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0526cadc30"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b05277a1460"/></to>
    </wire>
    <wire loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b05277a1460"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b052779b158"/></to>
    </wire>
    <wire loc="112:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2b0526bf3a70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b05277f46e0"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x2b0526c21d30"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b05277d5478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2b05277d5478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b052804a6c0"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketHistory" scoped="" ref="0x2b0526c1a958"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2b0527813d78"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CacheCompare" scoped="" ref="0x2b05278027b8"/></from>
      <to><interface-ref name="CacheCompare" scoped="" ref="0x2b0526c00ab8"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526c16060"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b05277fcd78"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Updates" scoped="" ref="0x2b05277fcd78"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b052785e240"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526cb0720"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b05277fcd78"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0526caf5d8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b05277fc060"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="selfReceiveTask" scoped="" ref="0x2b0526c0d020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b0526c3e368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b05276fd818"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0527757e78"/></to>
    </wire>
    <wire loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b0526c99020"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b0526cb1080"/></to>
    </wire>
    <wire loc="72:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PathCost" scoped="" ref="0x2b0526cccb28"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0526cadc30"/></to>
    </wire>
    <wire loc="73:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526cc38a8"/></from>
      <to><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526cb0720"/></to>
    </wire>
    <wire loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b0526cc5a40"/></from>
      <to><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0526caf5d8"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b0526ca0168"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0526d48e68"/></to>
    </wire>
    <wire loc="76:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0526d48e68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0526d972c0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b0526c97380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526d7b448"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0526d7b448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526d92da0"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0526c98690"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b0527624cd8"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconPacket" scoped="" ref="0x2b0527624cd8"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b052760e988"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0526c96b40"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b0527627890"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x2b0527627890"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b0527611590"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b0526c99868"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b0527622d58"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataPacket" scoped="" ref="0x2b0527622d58"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b052760c9f0"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b0526c95380"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b0527623a20"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x2b0527623a20"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b052760d690"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSnoop" scoped="" ref="0x2b0526c95a20"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526d7eb68"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0526cce0e8"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b0527624020"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x2b0527624020"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b0527611c10"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b0526cced90"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b05276220b8"/></to>
    </wire>
    <wire loc="87:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x2b05276220b8"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b052760dd00"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526cc8c00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d763a0"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d763a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d81970"/></to>
    </wire>
    <wire loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0527617400"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526d7c7a0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526d7c7a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526d92190"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0527618020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526d80df8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0527618d08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526d7e020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0527618d08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526d7eb68"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b05276156c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05276fe888"/></to>
    </wire>
    <wire loc="57:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05276fe888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0527757020"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b0527616130"/></from>
      <to><interface-ref name="SendData" scoped="" ref="0x2b05276e7d80"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x2b05276e7d80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b05276e28e8"/></to>
    </wire>
    <wire loc="110:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b0527615020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b05276fe2b0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b05276fe2b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0527758a20"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0527614488"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526d7b448"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubSendData" scoped="" ref="0x2b05276e4b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0527701658"/></to>
    </wire>
    <wire loc="55:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0527701658"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b052775bd90"/></to>
    </wire>
    <wire loc="116:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b05276e39d8"/></from>
      <to><interface-ref name="BackoffConfig" scoped="" ref="0x2b0526ca16e0"/></to>
    </wire>
    <wire loc="121:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMSubSend" scoped="" ref="0x2b052775d358"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526d80df8"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b052775c060"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526d7e020"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b052775c6d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526d7c7a0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0526c9a020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="131:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0527613bb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="135:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0526ca0d18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0527784228"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0527784228"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0526cca3b0"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b052777e750"/></to>
    </wire>
    <wire loc="141:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b0526cc4ae8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0527718080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b0527718080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0527713020"/></to>
    </wire>
    <wire loc="145:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0526cc6298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b05269bdcb0"/></to>
    </wire>
    <wire loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x2b0526cde3e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0526d972c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0526db49e0"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d81970"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526dbf020"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0526d7c1c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0526d93b28"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0526d93b28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0526dad348"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526d80df8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526d96270"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526d96270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526db1aa8"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0526d7eb68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526d93020"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0526d93020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526daf818"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526d92190"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0526daa9e8"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b0526d6b020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dbc6b0"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dbc6b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dfbc38"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526d9ee48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526db8670"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526db8670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526df8bf0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526d7e020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526d943c8"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526d943c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526db0c38"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b0526d70dc0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b0526d90498"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b0526d90498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b0526dc8c70"/></to>
    </wire>
    <wire loc="91:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0526d92da0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526dab2c0"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0526d6c878"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0526d8f140"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0526d8f140"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0526dcf968"/></to>
    </wire>
    <wire loc="217:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0526db49e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0527199440"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0526d84818"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0526dc3d28"/></to>
    </wire>
    <wire loc="311:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0526dc3d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b05272ba388"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0526dad348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0526f701a0"/></to>
    </wire>
    <wire loc="127:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0526daa9e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0526f74700"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526db1aa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0526f73510"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0526daf818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0526f72aa0"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0526d87480"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0526dc6870"/></to>
    </wire>
    <wire loc="309:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0526dc6870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b05272be060"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526db0c38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0526f72388"/></to>
    </wire>
    <wire loc="271:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dfbc38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b05272507d8"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0526dbd2d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0526dbf830"/></to>
    </wire>
    <wire loc="313:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0526dbf830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b05272b0830"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0526d8e110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0526dce518"/></to>
    </wire>
    <wire loc="310:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0526dce518"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b05272b5d70"/></to>
    </wire>
    <wire loc="188:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b0526dc8c70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b052716a268"/></to>
    </wire>
    <wire loc="126:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0526dab2c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0526f751f0"/></to>
    </wire>
    <wire loc="226:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0526dcf968"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b052720fbd0"/></to>
    </wire>
    <wire loc="312:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526dbf020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b05272b0020"/></to>
    </wire>
    <wire loc="272:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526df8bf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0527254a48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0527199440"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b0527195858"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b05272ba388"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b05272e60c8"/></to>
    </wire>
    <wire loc="161:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b0526da8710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b052701d840"/></to>
    </wire>
    <wire loc="149:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b0526da04b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b052700a200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b052700a200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0527e34918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0526f701a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0527e0d898"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0526f73510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0527e10d38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0526f72aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0527e0d1c0"/></to>
    </wire>
    <wire loc="162:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0526dd0308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527101900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527101900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527eccd98"/></to>
    </wire>
    <wire loc="163:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b0526dd96e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0527004980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b05272be060"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0527298cd0"/></to>
    </wire>
    <wire loc="218:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b0526dc81d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b0527196d60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b0527196d60"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b0527f585e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0526f74700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0527e10060"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0526f72388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0527e0ea60"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b05272507d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0527f92c48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b05272b0830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527390438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b05272b5d70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b05272e0860"/></to>
    </wire>
    <wire loc="159:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b0526da1250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b052701e578"/></to>
    </wire>
    <wire loc="129:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0526dac020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0526f708b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0526f708b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0527e0c020"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b052716a268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b0527165470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b052720fbd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0527f4e9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0526f751f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0527e12a10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0527254a48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0527f95020"/></to>
    </wire>
    <wire loc="160:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0526da8020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b052701d2a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b05272b0020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b05272de9d0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b0526dacbb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b0526f6f020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b0526f6f020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b0527e0c738"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0526e2ad58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527105980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527105980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527ed2d50"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e23bd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e83c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0526e22020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b05272507d8"/></to>
    </wire>
    <wire loc="106:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b0526e1de08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b052726c020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b052726c020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527299ca8"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0526edac68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b05272afae0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b05272afae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b05273942e0"/></to>
    </wire>
    <wire loc="117:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0526f6d328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b0526e05130"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0526f6e430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b0526f65100"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0526f6ed18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b052706e060"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0526f6f678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b052706e638"/></to>
    </wire>
    <wire loc="138:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0526f9a3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b052700a200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0526f65a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b052706f740"/></to>
    </wire>
    <wire loc="154:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b052701de38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527105980"/></to>
    </wire>
    <wire loc="155:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0527019ba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b0527011838"/></to>
    </wire>
    <wire loc="156:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b05270175b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b05270712a8"/></to>
    </wire>
    <wire loc="157:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b052701ad98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527071880"/></to>
    </wire>
    <wire loc="170:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b052706d490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b052717c470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b052717c470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0527f03da0"/></to>
    </wire>
    <wire loc="171:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b052706dd78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b052716bbd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b052716bbd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b05271685b8"/></to>
    </wire>
    <wire loc="172:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b052706c378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527100b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0527100b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527eca020"/></to>
    </wire>
    <wire loc="177:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b05270ffab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b052716ae20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b052716ae20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0527168b90"/></to>
    </wire>
    <wire loc="182:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b052717a580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b0526ddd6c0"/></to>
    </wire>
    <wire loc="183:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b052717b510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b052716b2e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b052716b2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0527169c38"/></to>
    </wire>
    <wire loc="195:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0527169c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0527197020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0527197020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0527194430"/></to>
    </wire>
    <wire loc="196:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b05271685b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0527197908"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0527197908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0527194d18"/></to>
    </wire>
    <wire loc="197:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527168b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527196020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0527196020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0527193328"/></to>
    </wire>
    <wire loc="213:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b0527195858"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0527210270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0527210270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0527f51870"/></to>
    </wire>
    <wire loc="214:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0527194430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0527210ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0527210ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0527f50a08"/></to>
    </wire>
    <wire loc="215:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0527194d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b052720f638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b052720f638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0527f4e430"/></to>
    </wire>
    <wire loc="216:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527193328"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b052724d220"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b052724d220"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527f8f7a0"/></to>
    </wire>
    <wire loc="223:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b052720d3f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b052726e020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b052726e020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b052729a450"/></to>
    </wire>
    <wire loc="224:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b052720dc98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b052717cd18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b052717cd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0527eff6c8"/></to>
    </wire>
    <wire loc="225:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b052720e5d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b0527270148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b0527270148"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b052729b620"/></to>
    </wire>
    <wire loc="230:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b052717bdf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b052726e948"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b052726e948"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b052729ad78"/></to>
    </wire>
    <wire loc="269:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b052724b168"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b05272b0830"/></to>
    </wire>
    <wire loc="270:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b052724a188"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0527244a70"/></to>
    </wire>
    <wire loc="273:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0527249020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0527244020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527275928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b052726c020"/></to>
    </wire>
    <wire loc="306:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b05272abb80"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b05275a6e78"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b05275a6e78"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0527602428"/></to>
    </wire>
    <wire loc="308:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b05272aabc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b05272507d8"/></to>
    </wire>
    <wire loc="315:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b05272a6750"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0527244020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b05272a5368"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0527244020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="317:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b05272a4020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0527244020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="318:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b05272a4ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e83c50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e83c50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0527d9e4d0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0527d9d350"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0526edac68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b0527d9a3f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0526edc5b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0527e09b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0526f49c60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527e0cd90"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0526f6f678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0527e0bba0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0526f6e430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0527e0a5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0526f6ed18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0527e0ab90"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b0526f6d328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527009020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527e33698"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527009760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527e33dd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527e326c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527007020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b0527e32e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b0527e37a10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0527e31920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0527ecadc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0526f49c60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527ec9890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b05270ffab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b0527efb020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b0527117d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b0527117d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b0527111850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527efbbd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527ef8140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527ef8140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527110b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0527efe458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b052717b510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0527efed40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b052717bdf8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b0527efd4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b052717a580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b0527164100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0527166a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b0527f4d450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b052720e5d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b0527f4c268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0526edc5b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b0527f4cc98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b052720d3f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0527f4b578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b052720dc98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b0527f4a4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b0527f4ac90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b0527f4bd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527f8a2a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b052724a188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527f8c1c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b052724b168"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0527f8b290"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0527f8d618"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0527249020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b05272bd7c8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b0527299518"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b05273942e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b052758a6f0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b05272b7880"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b05272e3458"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527390438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0527583208"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b05272cb100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b05272abb80"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b05272cbe10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b05272a6750"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b05272ca988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b05272a5368"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b05272c9518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b05272a4020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b05272c82b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b05272aabc8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b05272ce020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527390438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b05272c4ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b05272a4ab8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b05272dc130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b052739c710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b052739c710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b05263607e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b05272db4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b0527399990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b0527399990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b05273c9978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b05272d41f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273985e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273985e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273cb668"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b05272d4d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b0527397140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b0527397140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b05263584d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b05272d9e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b0527396338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b0527396338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b052634e4d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b05272cf5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b05273954c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b05273954c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b052738fcd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b05272c4020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0526edc5b8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b05272cdc60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b05275bb7d0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b0527385d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b052758a6f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b052802dbc8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273cb668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273be428"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0527583208"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b05275c4020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b05273dd830"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b052636e020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b05273dcaf8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b0526371c78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b05273e1190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b052749f020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b052749f020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b05274e7808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b05273c2c20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b05273bd020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b05273cb020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b05273bfd80"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b05273e39d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05273bf7a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b05273c9978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b05273bdc88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b05273f5208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b05274b3748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b05274b3748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0527fcfb80"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b05273f5e30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b05274b2c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b05274b2c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527fcd268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b05273ba020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b0527458020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b0527458020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b0527455dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b05273f4600"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b05261b03c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b052742bb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b0527449350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b05261b03c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b052744cc70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b05263607e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b052744fde0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b052635f968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b052744b020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b052635eaf0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b052744a190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b052635dc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b05274b2510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527fce9a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527fcdb08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b05274b0550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b0527fcc2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b0527fd2d88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0527fccd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b05274a1838"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b05274e8160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b05274a86e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b05274ed180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052749be18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b05274e1020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052749be18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b05274de360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b052749be18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b05274da770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b052802ac18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b05274a86e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b0528025c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b052749be18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0527569020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b05274a86e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b05275c3230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b05275cc5a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b05275c97f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b052757e020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b052757e020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b052757bb90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0527578c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b05274a86e0"/></to>
    </wire>
    <wire loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b05276c6248"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b052807b9e8"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b052761b300"/></from>
      <to><interface-ref name="Dissemination" scoped="" ref="0x2b052760b8b8"/></to>
    </wire>
    <wire loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b05276f4530"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b052807acb8"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b05276636a8"/></from>
      <to><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0527618d08"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b05276658f0"/></from>
      <to><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0527618020"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0527663d58"/></from>
      <to><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0527617400"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b05276619a0"/></from>
      <to><interface-ref name="DataSubReceive" scoped="" ref="0x2b0527615020"/></to>
    </wire>
    <wire loc="102:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b0527662b60"/></from>
      <to><interface-ref name="DataSubSend" scoped="" ref="0x2b0527616130"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b0527660060"/></from>
      <to><interface-ref name="DataSubPacket" scoped="" ref="0x2b05276156c0"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0527660c90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0527614488"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b052765e410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0527613bb8"/></to>
    </wire>
    <wire loc="12:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Delay" scoped="" ref="0x2b05276f2e68"/></from>
      <to><interface-ref name="Delay" scoped="" ref="0x2b0528077610"/></to>
    </wire>
    <wire loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Dissemination" scoped="" ref="0x2b0528077c48"/></from>
      <to><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b052761b300"/></to>
    </wire>
    <wire loc="18:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b05280766c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <from><interface-ref name="valueChangedTask" scoped="" ref="0x2b0528074800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b05276df6d8"/></from>
      <to><interface-ref name="SubSendData" scoped="" ref="0x2b05276e4b48"/></to>
    </wire>
    <wire loc="53:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b05276de4c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b05276e39d8"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b05276dea98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0527718080"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b05276dc460"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b052771d6e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b052771d6e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <from><interface-ref name="doneTask" scoped="" ref="0x2b05276d3778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b052771b020"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b0527715e48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b052771c2b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b05277155f0"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b0527754ab8"/></from>
      <to><interface-ref name="AMSubSend" scoped="" ref="0x2b052775d358"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b05277537f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b052775c060"/></to>
    </wire>
    <wire loc="61:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0527753e68"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b052775c6d8"/></to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0527752cc8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b052779baf0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b05277a1df8"/></to>
    </wire>
    <wire loc="54:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b052779a4a8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d763a0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b052785c490"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="PktRateJob" scoped="" ref="0x2b0527856700"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b052782f4c0"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b052782f4c0"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b052788e030"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b052782fc80"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278b29c0"/></to>
    </wire>
    <wire loc="65:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278b1020"/></from>
      <to><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b052785dc58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278c2530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b052782fc80"/></to>
    </wire>
    <wire loc="52:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b052788b3a0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b0527888420"/></to>
    </wire>
    <wire loc="53:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b052788e030"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b05278871c8"/></to>
    </wire>
    <wire loc="50:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="DispatchTimer" scoped="" ref="0x2b0527887bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b05278628d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b05278628d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <from><interface-ref name="dispatch" scoped="" ref="0x2b052787bbe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b05278c1788"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b05263280c0"/></to>
    </wire>
    <wire loc="51:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278be2e8"/></from>
      <to><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278c2530"/></to>
    </wire>
    <wire loc="54:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b05278be8f0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b052788b3a0"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b05278fe428"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b0527896540"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b0527896540"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b052788e030"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b0527896d00"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278f2838"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278f2e70"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278f0758"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b05278fed00"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b05277fc060"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05278ff6d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b052789bc58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278c2530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0527896d00"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b05278e4738"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b05278e5120"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b05278e5120"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b052788e030"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b05278e58e0"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278cd598"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278cdbd0"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278cb560"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="QueueStats" scoped="" ref="0x2b05278e31f8"/></from>
      <to><interface-ref name="QueueStatistics" scoped="" ref="0x2b0526c02158"/></to>
    </wire>
    <wire loc="65:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="PacketStats" scoped="" ref="0x2b05278e24a0"/></from>
      <to><interface-ref name="PacketStatistics" scoped="" ref="0x2b0526ca2060"/></to>
    </wire>
    <wire loc="66:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="DissStats" scoped="" ref="0x2b05278e1788"/></from>
      <to><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b0527666720"/></to>
    </wire>
    <wire loc="70:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b05278e7af8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b05278ecdf0"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278c2530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b05278e58e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SinkP" loc="65:SinkP.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0526190d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0526190d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b052618e630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <value cst="I:400">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SinkC.BootTimer" loc="44(SinkC.BootTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="26:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <documentation loc="11:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="59(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0526a2c020"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SinkC.DistTimer" loc="44(SinkC.DistTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoQueueP" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioP" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <documentation loc="34:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
        <short>&#10; Modifications by Christian Renner from Hamburg University of Technology:&#10; Removed PacketAcknowledgement, and LowPowerListening to comply&#10; with Orinoco&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="42:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="38:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230SlimRadioC" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230SlimRadioP" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC" loc="41:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date February 18th 2015&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerP" loc="6:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator" loc="1(OrinocoDisseminationLayerC.Disseminator):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP" loc="1(OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b05276c84e0"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoForwardLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC.TimerMilliC" loc="44(OrinocoForwardLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoRadioC.Timer" loc="44(OrinocoRadioC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoConfigC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
        <short>&#10; configuration of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; configuration of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoConfigP" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
        <short>&#10; implementation of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; implementation of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoPathCostHopCountC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoP.SendQueue" loc="42(OrinocoP.SendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b05262a1358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b05262a16b0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.MsgPool" loc="41(OrinocoP.MsgPool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
            <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP.MsgPool.PoolP" loc="53(OrinocoP.MsgPool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b05277d7e68"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.PacketHistory" loc="44(OrinocoP.PacketHistory):../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="OrinocoCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526291500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b05262919b8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
        <short>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoTrafficStatisticsP" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.Job" loc="42(OrinocoTrafficStatisticsC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="0">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EASchedulerC" loc="40:../../../EAJobs/lib/EASchedulerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EASchedulerP" loc="44:../../../EAJobs/lib/EASchedulerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EASchedulerC.DispatchTimer" loc="44(EASchedulerC.DispatchTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerC" loc="40:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerP" loc="42:../../../EAJobs/lib/EAEnergyManagerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC" loc="42(OrinocoTrafficStatisticsC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC" loc="40:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobP" loc="42:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC.Job" loc="42(OrinocoStatsReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="1">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoStatsReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobConfigC" loc="40:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC" loc="40:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobP" loc="42:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingMsg.h">
        <short>&#10; Orinoco Statistics Message&#10;&#10; </short>
        <long>&#10; Orinoco Statistics Message&#10;&#10; @author Christian Renner&#10; @date February 7th 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC.Job" loc="42(OrinocoDebugReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="2">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoDebugReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobConfigC" loc="42:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b052638dd00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b052638a0c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b052638a410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0526396608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0526396970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0526396cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b05263a9060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0526428508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0526428870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0526428bd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0526426020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b05264ed1b8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b0526519380" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b0526530890" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b052690e528" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b052690e528"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b052690e878" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b0526913d48" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b0526913d48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b05269254e8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b05269254e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b0526939740" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b0526939740"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b0526936020" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b0526936020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b05269363e8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b05269363e8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b0526936b60" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b0526936b60"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b0526934020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b05269347b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b05269347b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b052697b990" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b052697b990"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b052697bcf8" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0526a2c020" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0526a2c020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0526a2c310" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0526a528e8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0526a528e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0526a52bd8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0526a11de8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0526a11de8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0526b5bcc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0526b5bcc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b0526b58020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0526ba99f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0526ba99f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b0526f97ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b0526f87170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b0527560210" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b0527560210"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b0527560960" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0527560960"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b0527560c60" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoDisseminatorC" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b05276c84e0" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
          <component-ref qname="OrinocoDisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b05276c84e0"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminatorP" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b05276c1740" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
          <component-ref qname="OrinocoDisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b05276c1740"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b05277f3198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b05277f3198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b05277f34f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b05277d7e68" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b05277d7e68"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b05277d41e8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b05277d0e50" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b05277d0e50"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b05277cd1b8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoCacheC" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc" abstract="">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b0527811020" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0527811020"/></type-var>
        </typedef>
        <constant name="SIZE" ref="0x2b0527811340" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EAJobC" loc="42:../../../EAJobs/lib/EAJobC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="EAPeriodicJobConfigC" loc="42:../../../EAJobs/lib/EAPeriodicJobConfigC.nc" abstract="">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x2b05262b6e18" loc="74:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b05262b6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b05262b91a8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b05262b9330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b05262b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoConfig" ref="0x2b05262cdd68" loc="77:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b05262cdd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b05262b70f0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b05262b7278"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b05262b7400"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b05262b7588"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b05262b7710"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b05262b7898"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b05262b7a20"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b05262b7ba8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b05262b7d30"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b05262c6020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b05262c61a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b05262c6330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b05262c64b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b05262c6740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b05262c68c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b05262c6a50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b05262c6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x2b05262e42b8" loc="88:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b05262e42b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b05262e4608"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b05262e4790"/>
        <function-ref name="setType" scoped="" ref="0x2b05262e4918"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b05262e4aa0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b05262e4c28"/>
        <function-ref name="getType" scoped="" ref="0x2b05262e4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b052629c668" loc="67:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b052629c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b052629c9b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b05262f8350" loc="94:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b05262f8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05262fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoDebugReporting" ref="0x2b05262fc830" loc="93:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b05262fc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05262fcb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b05262ba890" loc="71:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b05262ba890"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b05262babe0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b05262bad68"/>
        <function-ref name="start" scoped="" ref="0x2b05262ad020"/>
        <function-ref name="stop" scoped="" ref="0x2b05262ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b05262ddac8" loc="86:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b05262ddac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05262dde18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05262d5020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05262d51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05262d5330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05262d54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b05262eb608" loc="91:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b05262eb608"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b05262e3670"/>
        <function-ref name="init" scoped="" ref="0x2b05262e3198"/>
        <function-ref name="creationTime" scoped="" ref="0x2b05262e3b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b05262d4628" loc="89:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b05262d4628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05262d4a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoStatsReporting" ref="0x2b05262fc138" loc="92:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b05262fc138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05262fc488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x2b05262b8cc8" loc="72:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x2b05262b8cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05262ac0a0"/>
        <function-ref name="stop" scoped="" ref="0x2b05262ac228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialReceive" ref="0x2b05262da1b8" loc="87:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialReceive" scoped="" ref="0x2b05262da1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05262da508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0526300c38" loc="95:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0526300c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b05262f9020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05262f91a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b05262f9330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05262f94b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05262f9640"/>
        <function-ref name="get" scoped="" ref="0x2b05262f97c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05262f9950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05262f7020"/>
        <function-ref name="set" scoped="" ref="0x2b05262f9ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b05262f9c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b05262f9de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b05262de1c8" loc="90:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b05262de1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05262de518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05262de6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05262de828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BootTimer" ref="0x2b05262a4598" loc="68:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BootTimer" scoped="" ref="0x2b05262a4598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05262b48f0"/>
        <function-ref name="fired" scoped="" ref="0x2b05262a3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b05262a3d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b05262a38c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b05262b31c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b05262b4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05262a3470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b052629e118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b05262b4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b052629e5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b052629ea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForecastUpdate" ref="0x2b05262c9a38" loc="82:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForecastUpdate" scoped="" ref="0x2b05262c9a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b05262cb620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForecastValue" ref="0x2b05262ca2e0" loc="83:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForecastValue" scoped="" ref="0x2b05262ca2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b05262c77e0"/>
        <function-ref name="get" scoped="" ref="0x2b05262cae60"/>
        <function-ref name="set" scoped="" ref="0x2b05262c7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DistTimer" ref="0x2b05262b37b8" loc="69:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DistTimer" scoped="" ref="0x2b05262b37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05262afa18"/>
        <function-ref name="fired" scoped="" ref="0x2b05262b0158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b05262b0e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b05262b09f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b05262ae2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b05262afe68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05262b05a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b05262b2370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b05262af448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b05262b2810"/>
        <function-ref name="stop" scoped="" ref="0x2b05262b2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b05263234c8" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b05263234c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526323818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b05263280c0" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b05263280c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0526328410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b05263369a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b05263369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526336cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526327be8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526327be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526337020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0526332b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0526332b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0526336020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b05263361a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0526336330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b05263364b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0526336640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b0526342b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b0526342b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526341020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05263424f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05263424f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526342840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b0526341398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b0526341398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05263416e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b052633d108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b052633d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052633d458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0526330a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0526330a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526330d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b052634c7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b052634c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052634cb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b05263475f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b05263475f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526347948"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526347ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526347c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526347de0"/>
        <function-ref name="get" scoped="" ref="0x2b052634c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052634c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052634c330"/>
        <function-ref name="clr" scoped="" ref="0x2b052634c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b052633a428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b052633a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052633a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b0526382c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b0526382c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263815e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526381770"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263818f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526381a80"/>
        <function-ref name="get" scoped="" ref="0x2b0526381c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526381d90"/>
        <function-ref name="set" scoped="" ref="0x2b0526380020"/>
        <function-ref name="clr" scoped="" ref="0x2b05263801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b05263747e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b05263747e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526374b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526374cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526374e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526373020"/>
        <function-ref name="get" scoped="" ref="0x2b05263731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526373330"/>
        <function-ref name="set" scoped="" ref="0x2b05263734b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526373640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b052637d7e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b052637d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052637db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b052637dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052637de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052637c020"/>
        <function-ref name="get" scoped="" ref="0x2b052637c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637c330"/>
        <function-ref name="set" scoped="" ref="0x2b052637c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b052637c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b05263874d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b05263874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526387820"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263879a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526387b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526387cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0526387e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526386020"/>
        <function-ref name="set" scoped="" ref="0x2b05263861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526386330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b0526391af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b0526391af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526391e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526390020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263901a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526390330"/>
        <function-ref name="get" scoped="" ref="0x2b05263904b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526390640"/>
        <function-ref name="set" scoped="" ref="0x2b05263907c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526390950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b052634e4d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b052634e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052634e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b052634e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052634eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052634ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b052634ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052634d020"/>
        <function-ref name="set" scoped="" ref="0x2b052634d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052634d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b05263751a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b05263751a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263754f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526375678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526375800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526375988"/>
        <function-ref name="get" scoped="" ref="0x2b0526375b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526375c98"/>
        <function-ref name="set" scoped="" ref="0x2b0526375e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0526388020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b05263607e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b05263607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526360b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526360cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526360e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635f020"/>
        <function-ref name="get" scoped="" ref="0x2b052635f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635f330"/>
        <function-ref name="set" scoped="" ref="0x2b052635f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b052635f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b0526369968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b0526369968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526369cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526369e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526367020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263671a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526367330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263674b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526367640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263677c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b0526371c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b0526371c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526370020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263701a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526370330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263704b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526370640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263707c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526370950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526370ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b052637ac78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b052637ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526379020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263791a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526379330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263794b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526379640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263797c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526379950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526379ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b0526354c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b0526354c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526353020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263531a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526353330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263534b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526353640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263537c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526353950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526353ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b052635dc78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b052635dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052635c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b052635c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052635c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b052635c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b052635c950"/>
        <function-ref name="clr" scoped="" ref="0x2b052635cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b0526365e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b0526365e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263641a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526364330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263644b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526364640"/>
        <function-ref name="get" scoped="" ref="0x2b05263647c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526364950"/>
        <function-ref name="set" scoped="" ref="0x2b0526364ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526364c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b052636d1a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b052636d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052636d988"/>
        <function-ref name="get" scoped="" ref="0x2b052636db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052636dc98"/>
        <function-ref name="set" scoped="" ref="0x2b052636de20"/>
        <function-ref name="clr" scoped="" ref="0x2b052636c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b0526384968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b0526384968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526384cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526384e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526383020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263831a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526383330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263834b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526383640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b05263937e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b05263937e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526393b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526393cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526393e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526392020"/>
        <function-ref name="get" scoped="" ref="0x2b05263921a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526392330"/>
        <function-ref name="set" scoped="" ref="0x2b05263924b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526392640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b052636b4d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b052636b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052636bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b052636be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637e020"/>
        <function-ref name="set" scoped="" ref="0x2b052637e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052637e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b05263501a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b05263501a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263504f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526350678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526350800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526350988"/>
        <function-ref name="get" scoped="" ref="0x2b0526350b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526350c98"/>
        <function-ref name="set" scoped="" ref="0x2b0526350e20"/>
        <function-ref name="clr" scoped="" ref="0x2b052634f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b0526359348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b0526359348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526359698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526359820"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263599a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526359b30"/>
        <function-ref name="get" scoped="" ref="0x2b0526359cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526359e40"/>
        <function-ref name="set" scoped="" ref="0x2b0526358020"/>
        <function-ref name="clr" scoped="" ref="0x2b05263581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b05263804d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b05263804d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526380820"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263809a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526380b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526380cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0526380e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637f020"/>
        <function-ref name="set" scoped="" ref="0x2b052637f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052637f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b0526357658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b0526357658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263579a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526357b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526357cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526357e40"/>
        <function-ref name="get" scoped="" ref="0x2b052636a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052636a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052636a330"/>
        <function-ref name="clr" scoped="" ref="0x2b052636a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b0526373968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b0526373968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526373cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526373e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526372020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263721a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526372330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263724b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526372640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b052637c968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b052637c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052637ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052637ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b052637b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052637b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b052637b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b052637b640"/>
        <function-ref name="clr" scoped="" ref="0x2b052637b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b0526386658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b0526386658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263869a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526386b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526386cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526386e40"/>
        <function-ref name="get" scoped="" ref="0x2b0526385020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263851a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526385330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263854b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b052634d658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b052634d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052634d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052634db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b052634dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052634de40"/>
        <function-ref name="get" scoped="" ref="0x2b0526360020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263601a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526360330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263604b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b052635f968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b052635f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052635fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052635fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b052635e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b052635e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b052635e640"/>
        <function-ref name="clr" scoped="" ref="0x2b052635e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b0526367af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b0526367af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526367e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526366020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263661a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526366330"/>
        <function-ref name="get" scoped="" ref="0x2b05263664b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526366640"/>
        <function-ref name="set" scoped="" ref="0x2b05263667c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526366950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b0526370e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b0526370e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052636f640"/>
        <function-ref name="get" scoped="" ref="0x2b052636f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052636f950"/>
        <function-ref name="set" scoped="" ref="0x2b052636fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b052636fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b0526379e00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b0526379e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263781a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526378330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263784b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526378640"/>
        <function-ref name="get" scoped="" ref="0x2b05263787c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526378950"/>
        <function-ref name="set" scoped="" ref="0x2b0526378ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526378c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b0526353e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b0526353e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263521a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526352330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263524b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526352640"/>
        <function-ref name="get" scoped="" ref="0x2b05263527c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526352950"/>
        <function-ref name="set" scoped="" ref="0x2b0526352ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526352c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b052635ce00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b052635ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052635b2e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052635b470"/>
        <function-ref name="toggle" scoped="" ref="0x2b052635b5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635b780"/>
        <function-ref name="get" scoped="" ref="0x2b052635b908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635ba90"/>
        <function-ref name="set" scoped="" ref="0x2b052635bc18"/>
        <function-ref name="clr" scoped="" ref="0x2b052635bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b0526363020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b0526363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526363370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263634f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526363680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526363808"/>
        <function-ref name="get" scoped="" ref="0x2b0526363990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526363b18"/>
        <function-ref name="set" scoped="" ref="0x2b0526363ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0526363e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b0526383af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b0526383af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526383e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526382020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526382330"/>
        <function-ref name="get" scoped="" ref="0x2b05263824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526382640"/>
        <function-ref name="set" scoped="" ref="0x2b05263827c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526382950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b0526361348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b0526361348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526361898"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526361a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526361ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526361d30"/>
        <function-ref name="get" scoped="" ref="0x2b0526374020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263741a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526374330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b052637e658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b052637e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052637e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052637eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b052637ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052637ee40"/>
        <function-ref name="get" scoped="" ref="0x2b052637d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052637d330"/>
        <function-ref name="clr" scoped="" ref="0x2b052637d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b0526388348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b0526388348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526388698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526388820"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263889a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526388b30"/>
        <function-ref name="get" scoped="" ref="0x2b0526388cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526388e40"/>
        <function-ref name="set" scoped="" ref="0x2b0526387020"/>
        <function-ref name="clr" scoped="" ref="0x2b05263871a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b0526392968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b0526392968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526392cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526392e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526391020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263911a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526391330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263914b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526391640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263917c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b052634f348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b052634f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052634f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b052634f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b052634f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052634fb30"/>
        <function-ref name="get" scoped="" ref="0x2b052634fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052634fe40"/>
        <function-ref name="set" scoped="" ref="0x2b052634e020"/>
        <function-ref name="clr" scoped="" ref="0x2b052634e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b05263584d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b05263584d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526358820"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263589a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526358b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526358cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0526358e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526357020"/>
        <function-ref name="set" scoped="" ref="0x2b05263571a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526357330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b0526377020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b0526377020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526377370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263774f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526377680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526377808"/>
        <function-ref name="get" scoped="" ref="0x2b0526377990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526377b18"/>
        <function-ref name="set" scoped="" ref="0x2b0526377ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0526377e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b052636a7e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b052636a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526369020"/>
        <function-ref name="get" scoped="" ref="0x2b05263691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526369330"/>
        <function-ref name="set" scoped="" ref="0x2b05263694b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526369640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b0526372af0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b0526372af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526372e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526371020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263711a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526371330"/>
        <function-ref name="get" scoped="" ref="0x2b05263714b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526371640"/>
        <function-ref name="set" scoped="" ref="0x2b05263717c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526371950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b052637baf0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b052637baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052637be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b052637a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b052637a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052637a330"/>
        <function-ref name="get" scoped="" ref="0x2b052637a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052637a640"/>
        <function-ref name="set" scoped="" ref="0x2b052637a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b052637a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b05263857e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b05263857e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526385b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526385cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526385e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526384020"/>
        <function-ref name="get" scoped="" ref="0x2b05263841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526384330"/>
        <function-ref name="set" scoped="" ref="0x2b05263844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526384640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b052633ca70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b052633ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052633cdc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526354020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263541a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526354330"/>
        <function-ref name="get" scoped="" ref="0x2b05263544b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526354640"/>
        <function-ref name="set" scoped="" ref="0x2b05263547c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526354950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b052635eaf0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b052635eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052635ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b052635d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b052635d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635d330"/>
        <function-ref name="get" scoped="" ref="0x2b052635d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635d640"/>
        <function-ref name="set" scoped="" ref="0x2b052635d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b052635d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b0526366c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b0526366c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526365020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263651a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526365330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263654b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526365640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263657c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526365950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526365ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b052636e020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b052636e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052636e808"/>
        <function-ref name="get" scoped="" ref="0x2b052636e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052636eb18"/>
        <function-ref name="set" scoped="" ref="0x2b052636eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b052636ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b052637f658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b052637f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052637f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052637fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b052637fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052637fe40"/>
        <function-ref name="get" scoped="" ref="0x2b0526393020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263931a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526393330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b052636c348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b052636c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052636c698"/>
        <function-ref name="isInput" scoped="" ref="0x2b052636c820"/>
        <function-ref name="toggle" scoped="" ref="0x2b052636c9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052636cb30"/>
        <function-ref name="get" scoped="" ref="0x2b052636ccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052636ce40"/>
        <function-ref name="set" scoped="" ref="0x2b052636b020"/>
        <function-ref name="clr" scoped="" ref="0x2b052636b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b05263621a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b05263621a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263624f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526362678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526362800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526362988"/>
        <function-ref name="get" scoped="" ref="0x2b0526362b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526362c98"/>
        <function-ref name="set" scoped="" ref="0x2b0526362e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0526361020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b0526351020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b0526351020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526351370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263514f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526351680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526351808"/>
        <function-ref name="get" scoped="" ref="0x2b0526351990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526351b18"/>
        <function-ref name="set" scoped="" ref="0x2b0526351ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0526351e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b052635a100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b052635a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052635a450"/>
        <function-ref name="isInput" scoped="" ref="0x2b052635a5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052635a760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052635a8e8"/>
        <function-ref name="get" scoped="" ref="0x2b052635aa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052635abf8"/>
        <function-ref name="set" scoped="" ref="0x2b052635ad80"/>
        <function-ref name="clr" scoped="" ref="0x2b0526359020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b05263cb120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b05263cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263cb470"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263cb5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263cb780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263cb908"/>
        <function-ref name="get" scoped="" ref="0x2b05263cba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263cbc18"/>
        <function-ref name="set" scoped="" ref="0x2b05263cbda0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b05263de5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b05263de5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263de908"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263dea90"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263dec18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263deda0"/>
        <function-ref name="get" scoped="" ref="0x2b05263dd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263dd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b05263dd330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263dd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b05263cedc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b05263cedc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263cd170"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263cd2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263cd480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263cd608"/>
        <function-ref name="get" scoped="" ref="0x2b05263cd790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263cd918"/>
        <function-ref name="set" scoped="" ref="0x2b05263cdaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263cdc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b05263e02a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b05263e02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e05f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e0780"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e0908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e0a90"/>
        <function-ref name="get" scoped="" ref="0x2b05263e0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e0da0"/>
        <function-ref name="set" scoped="" ref="0x2b05263df020"/>
        <function-ref name="clr" scoped="" ref="0x2b05263df1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b05263dd740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b05263dd740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263dda90"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263ddc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263ddda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263dc020"/>
        <function-ref name="get" scoped="" ref="0x2b05263dc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263dc330"/>
        <function-ref name="set" scoped="" ref="0x2b05263dc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263dc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b05263cc020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b05263cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263cc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263cc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263cc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263cc808"/>
        <function-ref name="get" scoped="" ref="0x2b05263cc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ccb18"/>
        <function-ref name="set" scoped="" ref="0x2b05263ccca0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263cce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b05263df430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b05263df430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263df780"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263df908"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263dfa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263dfc18"/>
        <function-ref name="get" scoped="" ref="0x2b05263dfda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263de020"/>
        <function-ref name="set" scoped="" ref="0x2b05263de1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b05263dc8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b05263dc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263dcc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263dcda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263db020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263db1a8"/>
        <function-ref name="get" scoped="" ref="0x2b05263db330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263db4b8"/>
        <function-ref name="set" scoped="" ref="0x2b05263db640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052796d520" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052796d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052796d870"/>
        <function-ref name="isInput" scoped="" ref="0x2b052796d9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052796db80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052796dd08"/>
        <function-ref name="get" scoped="" ref="0x2b052796c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052796c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052796c330"/>
        <function-ref name="clr" scoped="" ref="0x2b052796c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052796a6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052796a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052796a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052796ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b052796ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527969020"/>
        <function-ref name="get" scoped="" ref="0x2b05279691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527969330"/>
        <function-ref name="set" scoped="" ref="0x2b05279694b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527969640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527967710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527967710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527967a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527967be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527967d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527966020"/>
        <function-ref name="get" scoped="" ref="0x2b05279661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527966330"/>
        <function-ref name="set" scoped="" ref="0x2b05279664b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527966640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527964710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527964710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527964a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527964be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527964d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527962020"/>
        <function-ref name="get" scoped="" ref="0x2b05279621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527962330"/>
        <function-ref name="set" scoped="" ref="0x2b05279624b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527962640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527960710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527960710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527960a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527960be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527960d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052795f020"/>
        <function-ref name="get" scoped="" ref="0x2b052795f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052795f330"/>
        <function-ref name="set" scoped="" ref="0x2b052795f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b052795f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052795d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052795d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052795da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b052795dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052795dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052795c020"/>
        <function-ref name="get" scoped="" ref="0x2b052795c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052795c330"/>
        <function-ref name="set" scoped="" ref="0x2b052795c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b052795c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052795a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052795a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052795aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b052795abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052795ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527959020"/>
        <function-ref name="get" scoped="" ref="0x2b05279591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527959330"/>
        <function-ref name="set" scoped="" ref="0x2b05279594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527959640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527957710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527957710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527957a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527957be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527957d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527956020"/>
        <function-ref name="get" scoped="" ref="0x2b05279561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527956330"/>
        <function-ref name="set" scoped="" ref="0x2b05279564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527956640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b05263e9bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b05263e9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e84b8"/>
        <function-ref name="get" scoped="" ref="0x2b05263e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e87c8"/>
        <function-ref name="set" scoped="" ref="0x2b05263e8950"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b05263e5020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b05263e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e5808"/>
        <function-ref name="get" scoped="" ref="0x2b05263e5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e5b18"/>
        <function-ref name="set" scoped="" ref="0x2b05263e5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b05263eb930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b05263eb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263ebc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263ebe08"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263ea020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263ea1a8"/>
        <function-ref name="get" scoped="" ref="0x2b05263ea330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ea4b8"/>
        <function-ref name="set" scoped="" ref="0x2b05263ea640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b05263e8d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b05263e8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e7260"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e7570"/>
        <function-ref name="get" scoped="" ref="0x2b05263e76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e7880"/>
        <function-ref name="set" scoped="" ref="0x2b05263e7a08"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b05263e3120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b05263e3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e3908"/>
        <function-ref name="get" scoped="" ref="0x2b05263e3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e3c18"/>
        <function-ref name="set" scoped="" ref="0x2b05263e3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b05263eaa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b05263eaa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263eada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e9330"/>
        <function-ref name="get" scoped="" ref="0x2b05263e94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e9640"/>
        <function-ref name="set" scoped="" ref="0x2b05263e97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b05263e7e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b05263e7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e6640"/>
        <function-ref name="get" scoped="" ref="0x2b05263e67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e6950"/>
        <function-ref name="set" scoped="" ref="0x2b05263e6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b05263e22a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b05263e22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263e25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263e2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263e2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263e2a90"/>
        <function-ref name="get" scoped="" ref="0x2b05263e2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263e2da0"/>
        <function-ref name="set" scoped="" ref="0x2b05263e1020"/>
        <function-ref name="clr" scoped="" ref="0x2b05263e11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279df6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279df6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279df9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279dfb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279dfd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279de020"/>
        <function-ref name="get" scoped="" ref="0x2b05279de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279de330"/>
        <function-ref name="set" scoped="" ref="0x2b05279de4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279dc710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279dc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279dca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279dcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279dcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279db020"/>
        <function-ref name="get" scoped="" ref="0x2b05279db1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279db330"/>
        <function-ref name="set" scoped="" ref="0x2b05279db4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279db640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279d9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279d9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279d9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279d9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279d9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279d8020"/>
        <function-ref name="get" scoped="" ref="0x2b05279d81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279d8330"/>
        <function-ref name="set" scoped="" ref="0x2b05279d84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279d8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279d6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279d6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279d6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279d6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279d6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279d5020"/>
        <function-ref name="get" scoped="" ref="0x2b05279d51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279d5330"/>
        <function-ref name="set" scoped="" ref="0x2b05279d54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279d5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279d3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279d3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279d3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279d3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279d3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279d1020"/>
        <function-ref name="get" scoped="" ref="0x2b05279d11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279d1330"/>
        <function-ref name="set" scoped="" ref="0x2b05279d14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279d1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279cf710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279cf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279cfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279cfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279cfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279ce020"/>
        <function-ref name="get" scoped="" ref="0x2b05279ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279ce330"/>
        <function-ref name="set" scoped="" ref="0x2b05279ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279cc710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279cc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279cca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279ccbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279ccd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279cb020"/>
        <function-ref name="get" scoped="" ref="0x2b05279cb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279cb330"/>
        <function-ref name="set" scoped="" ref="0x2b05279cb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279cb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279c9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279c9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279c9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279c9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279c9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279c8020"/>
        <function-ref name="get" scoped="" ref="0x2b05279c81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279c8330"/>
        <function-ref name="set" scoped="" ref="0x2b05279c84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279c8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b05263f0740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b05263f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263f0a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263f0c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263f0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263ee020"/>
        <function-ref name="get" scoped="" ref="0x2b05263ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ee330"/>
        <function-ref name="set" scoped="" ref="0x2b05263ee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263ee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b05263ecbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b05263ecbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526401020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264011a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526401330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264014b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526401640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264017c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526401950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526401ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b05263f2500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b05263f2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263f2850"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263f29d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263f2b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263f2ce8"/>
        <function-ref name="get" scoped="" ref="0x2b05263f2e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263f1020"/>
        <function-ref name="set" scoped="" ref="0x2b05263f11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263f1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b05263ee8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b05263ee8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263eec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263eeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263ed1a8"/>
        <function-ref name="get" scoped="" ref="0x2b05263ed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ed4b8"/>
        <function-ref name="set" scoped="" ref="0x2b05263ed640"/>
        <function-ref name="clr" scoped="" ref="0x2b05263ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0526401d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0526401d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05264000d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526400260"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264003e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526400570"/>
        <function-ref name="get" scoped="" ref="0x2b05264006f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526400880"/>
        <function-ref name="set" scoped="" ref="0x2b0526400a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0526400b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b05263f15b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b05263f15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263f1908"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263f1a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263f1c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263f1da0"/>
        <function-ref name="get" scoped="" ref="0x2b05263f0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263f01a8"/>
        <function-ref name="set" scoped="" ref="0x2b05263f0330"/>
        <function-ref name="clr" scoped="" ref="0x2b05263f04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b05263eda50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b05263eda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263edda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263ec020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263ec330"/>
        <function-ref name="get" scoped="" ref="0x2b05263ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ec640"/>
        <function-ref name="set" scoped="" ref="0x2b05263ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0526400e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0526400e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263ff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263ff330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263ff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263ff640"/>
        <function-ref name="get" scoped="" ref="0x2b05263ff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263ff950"/>
        <function-ref name="set" scoped="" ref="0x2b05263ffad8"/>
        <function-ref name="clr" scoped="" ref="0x2b05263ffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279e66a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279e66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279e69f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279e6b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279e6d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279e5020"/>
        <function-ref name="get" scoped="" ref="0x2b05279e51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279e5330"/>
        <function-ref name="set" scoped="" ref="0x2b05279e54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279e5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05279e3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05279e3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05279e3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b05279e3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05279e3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05279e2020"/>
        <function-ref name="get" scoped="" ref="0x2b05279e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05279e2330"/>
        <function-ref name="set" scoped="" ref="0x2b05279e24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b05279e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a4f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a4f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a4fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a4fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a4fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a4e020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a4e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a4e330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a4e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a4e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a4c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a4c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a4ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a4cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a4cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a4b020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a4b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a4b330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a4b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a4b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a49710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a49710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a49a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a49be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a49d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a47020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a47330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a47640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a45710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a45710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a45a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a45be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a45d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a44020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a441a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a44330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a444b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a44640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a42710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a42710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a42a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a42be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a42d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a41020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a411a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a41330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a414b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a41640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a3f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a3f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a3fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a3fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a3fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a3e020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a3e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a3e330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a3e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a3e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b052640c120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b052640c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052640c470"/>
        <function-ref name="isInput" scoped="" ref="0x2b052640c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052640c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052640c908"/>
        <function-ref name="get" scoped="" ref="0x2b052640ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052640cc18"/>
        <function-ref name="set" scoped="" ref="0x2b052640cda0"/>
        <function-ref name="clr" scoped="" ref="0x2b052640b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b05264095b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b05264095b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526409908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526409a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526409c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526409da0"/>
        <function-ref name="get" scoped="" ref="0x2b0526408020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264081a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526408330"/>
        <function-ref name="clr" scoped="" ref="0x2b05264084b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b05263f9e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b05263f9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263f81c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263f8348"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263f84d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263f8658"/>
        <function-ref name="get" scoped="" ref="0x2b05263f87e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263f8968"/>
        <function-ref name="set" scoped="" ref="0x2b05263f8af0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263f8c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b052640b2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b052640b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052640b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052640b780"/>
        <function-ref name="toggle" scoped="" ref="0x2b052640b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052640ba90"/>
        <function-ref name="get" scoped="" ref="0x2b052640bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052640bda0"/>
        <function-ref name="set" scoped="" ref="0x2b052640a020"/>
        <function-ref name="clr" scoped="" ref="0x2b052640a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0526408740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0526408740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526408a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526408c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526408da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526407020"/>
        <function-ref name="get" scoped="" ref="0x2b05264071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526407330"/>
        <function-ref name="set" scoped="" ref="0x2b05264074b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526407640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b05263f7020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b05263f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05263f7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05263f74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05263f7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05263f7808"/>
        <function-ref name="get" scoped="" ref="0x2b05263f7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05263f7b18"/>
        <function-ref name="set" scoped="" ref="0x2b05263f7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b05263f7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b052640a430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b052640a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052640a780"/>
        <function-ref name="isInput" scoped="" ref="0x2b052640a908"/>
        <function-ref name="toggle" scoped="" ref="0x2b052640aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052640ac18"/>
        <function-ref name="get" scoped="" ref="0x2b052640ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526409020"/>
        <function-ref name="set" scoped="" ref="0x2b05264091a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526409330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b05264078c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b05264078c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526407c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526407da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526406020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264061a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526406330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264064b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526406640"/>
        <function-ref name="clr" scoped="" ref="0x2b05264067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a606a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a606a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a609f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a60b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a60d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a5f020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a5f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a5f330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a5f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a5f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a5d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a5d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a5da60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a5dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a5dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a5c020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a5c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a5c330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a5c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a5a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a5a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a5aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a5abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a5ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a59020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a59330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a59640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a57710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a57710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a57a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a57be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a57d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a56020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a56330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a56640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527a54710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527a54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527a54a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527a54be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527a54d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527a53020"/>
        <function-ref name="get" scoped="" ref="0x2b0527a531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527a53330"/>
        <function-ref name="set" scoped="" ref="0x2b0527a534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527a53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ac2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ac2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ac2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ac2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ac2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ac0020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ac01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ac0330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ac04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ac0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527abe710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527abe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527abea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527abebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527abed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527abd020"/>
        <function-ref name="get" scoped="" ref="0x2b0527abd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527abd330"/>
        <function-ref name="set" scoped="" ref="0x2b0527abd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527abd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527abb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527abb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527abba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527abbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527abbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527aba020"/>
        <function-ref name="get" scoped="" ref="0x2b0527aba1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527aba330"/>
        <function-ref name="set" scoped="" ref="0x2b0527aba4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527aba640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0526415bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0526415bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526414020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264141a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526414330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264144b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526414640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264147c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526414950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526414ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0526411020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0526411020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526411370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264114f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526411680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526411808"/>
        <function-ref name="get" scoped="" ref="0x2b0526411990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526411b18"/>
        <function-ref name="set" scoped="" ref="0x2b0526411ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0526411e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0526417930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0526417930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526417c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526417e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526416020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264161a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526416330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264164b8"/>
        <function-ref name="set" scoped="" ref="0x2b0526416640"/>
        <function-ref name="clr" scoped="" ref="0x2b05264167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0526414d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0526414d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05264130d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526413260"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264133e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526413570"/>
        <function-ref name="get" scoped="" ref="0x2b05264136f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526413880"/>
        <function-ref name="set" scoped="" ref="0x2b0526413a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0526413b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0526410120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0526410120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526410470"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264105f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526410780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526410908"/>
        <function-ref name="get" scoped="" ref="0x2b0526410a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526410c18"/>
        <function-ref name="set" scoped="" ref="0x2b0526410da0"/>
        <function-ref name="clr" scoped="" ref="0x2b052640f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0526416a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0526416a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526416da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526415020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264151a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526415330"/>
        <function-ref name="get" scoped="" ref="0x2b05264154b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526415640"/>
        <function-ref name="set" scoped="" ref="0x2b05264157c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526415950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0526413e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0526413e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05264121a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526412330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264124b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526412640"/>
        <function-ref name="get" scoped="" ref="0x2b05264127c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526412950"/>
        <function-ref name="set" scoped="" ref="0x2b0526412ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526412c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b052640f2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b052640f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052640f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052640f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b052640f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052640fa90"/>
        <function-ref name="get" scoped="" ref="0x2b052640fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052640fda0"/>
        <function-ref name="set" scoped="" ref="0x2b052640d020"/>
        <function-ref name="clr" scoped="" ref="0x2b052640d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527adc6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527adc6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527adc9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527adcb80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527adcd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527adb020"/>
        <function-ref name="get" scoped="" ref="0x2b0527adb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527adb330"/>
        <function-ref name="set" scoped="" ref="0x2b0527adb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527adb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ad9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ad9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ad9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ad9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ad9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ad8020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ad81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ad8330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ad84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ad8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ad6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ad6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ad6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ad6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ad6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ad5020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ad51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ad5330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ad54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ad5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ad3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ad3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ad3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ad3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ad3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ad2020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ad21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ad2330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ad24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ad2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ad0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ad0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ad0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ad0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ad0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527acf020"/>
        <function-ref name="get" scoped="" ref="0x2b0527acf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527acf330"/>
        <function-ref name="set" scoped="" ref="0x2b0527acf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527acf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527acd710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527acd710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527acda60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527acdbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527acdd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527acb020"/>
        <function-ref name="get" scoped="" ref="0x2b0527acb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527acb330"/>
        <function-ref name="set" scoped="" ref="0x2b0527acb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527acb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ac9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ac9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ac9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ac9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ac9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ac8020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ac81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ac8330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ac84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ac8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527ac6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527ac6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527ac6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527ac6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527ac6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527ac5020"/>
        <function-ref name="get" scoped="" ref="0x2b0527ac51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527ac5330"/>
        <function-ref name="set" scoped="" ref="0x2b0527ac54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527ac5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b052641e740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b052641e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052641ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b052641ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b052641eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052641d020"/>
        <function-ref name="get" scoped="" ref="0x2b052641d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052641d330"/>
        <function-ref name="set" scoped="" ref="0x2b052641d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b052641d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b052641abd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b052641abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526419020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264191a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526419330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264194b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526419640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264197c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526419950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526419ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0526420500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0526420500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526420850"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264209d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526420b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526420ce8"/>
        <function-ref name="get" scoped="" ref="0x2b0526420e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052641f020"/>
        <function-ref name="set" scoped="" ref="0x2b052641f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052641f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b052641d8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b052641d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052641dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b052641dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b052641c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052641c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b052641c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052641c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b052641c640"/>
        <function-ref name="clr" scoped="" ref="0x2b052641c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0526419d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0526419d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05264300d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526430260"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264303e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526430570"/>
        <function-ref name="get" scoped="" ref="0x2b05264306f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526430880"/>
        <function-ref name="set" scoped="" ref="0x2b0526430a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0526430b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b052641f5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b052641f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052641f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b052641fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b052641fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052641fda0"/>
        <function-ref name="get" scoped="" ref="0x2b052641e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052641e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052641e330"/>
        <function-ref name="clr" scoped="" ref="0x2b052641e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b052641ca50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b052641ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052641cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b052641a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b052641a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052641a330"/>
        <function-ref name="get" scoped="" ref="0x2b052641a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052641a640"/>
        <function-ref name="set" scoped="" ref="0x2b052641a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b052641a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0526430e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0526430e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052642f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b052642f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b052642f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052642f640"/>
        <function-ref name="get" scoped="" ref="0x2b052642f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052642f950"/>
        <function-ref name="set" scoped="" ref="0x2b052642fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b052642fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b5a6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b5a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b5a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b5ab80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b5ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b59020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b59330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b59640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b57710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b57710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b57a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b57be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b57d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b56020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b56330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b56640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b54710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b54710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b54a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b54be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b54d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b53020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b53330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b53640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b51710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b51710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b51a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b51be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b51d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b50020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b50330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b50640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b4e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b4e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b4ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b4ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b4ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b4d020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b4d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b4d330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b4d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b4d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b4b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b4b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b4ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b4bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b4bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b4a020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b4a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b4a330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b4a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b4a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b48710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b48710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b48a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b48be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b48d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b46020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b461a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b46330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b464b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b46640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0527b44710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0527b44710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527b44a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527b44be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527b44d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527b43020"/>
        <function-ref name="get" scoped="" ref="0x2b0527b431a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527b43330"/>
        <function-ref name="set" scoped="" ref="0x2b0527b434b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527b43640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05264293e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05264293e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526429730"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264298b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526429a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526429bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0526429d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526442020"/>
        <function-ref name="set" scoped="" ref="0x2b05264421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526442330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052643ec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052643ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052643d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b052643d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052643d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052643d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b052643d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052643d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b052643d950"/>
        <function-ref name="clr" scoped="" ref="0x2b052643dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b05264513e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b05264513e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526451730"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264518b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526451a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526451bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0526451d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526450020"/>
        <function-ref name="set" scoped="" ref="0x2b05264501a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0526450330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052644cc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052644cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052644b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b052644b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052644b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052644b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b052644b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052644b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b052644b950"/>
        <function-ref name="clr" scoped="" ref="0x2b052644bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052645e3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052645e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052645e730"/>
        <function-ref name="isInput" scoped="" ref="0x2b052645e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052645ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052645ebc8"/>
        <function-ref name="get" scoped="" ref="0x2b052645ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052645d020"/>
        <function-ref name="set" scoped="" ref="0x2b052645d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052645d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052645ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052645ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526459020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264591a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526459330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264594b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526459640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264597c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526459950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526459ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052646c480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052646c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052646c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b052646c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b052646cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052646cc68"/>
        <function-ref name="get" scoped="" ref="0x2b052646cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052646b020"/>
        <function-ref name="set" scoped="" ref="0x2b052646b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052646b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0526467c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0526467c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526466020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264661a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526466330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264664b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526466640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264667c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526466950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526466ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0526462520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0526462520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526462870"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264629f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526462b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526462d08"/>
        <function-ref name="get" scoped="" ref="0x2b0526461020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264611a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526461330"/>
        <function-ref name="clr" scoped="" ref="0x2b05264614b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0526475cd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0526475cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05264740a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0526474228"/>
        <function-ref name="toggle" scoped="" ref="0x2b05264743b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0526474538"/>
        <function-ref name="get" scoped="" ref="0x2b05264746c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0526474848"/>
        <function-ref name="set" scoped="" ref="0x2b05264749d0"/>
        <function-ref name="clr" scoped="" ref="0x2b0526474b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052646f3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052646f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052646f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b052646f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052646fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052646fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b052646fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052646e020"/>
        <function-ref name="set" scoped="" ref="0x2b052646e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052646e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0526483c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0526483c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0526482020"/>
        <function-ref name="isInput" scoped="" ref="0x2b05264821a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0526482330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05264824b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526482640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05264827c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526482950"/>
        <function-ref name="clr" scoped="" ref="0x2b0526482ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b052647d3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b052647d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052647d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b052647d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052647da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052647dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b052647dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052647c020"/>
        <function-ref name="set" scoped="" ref="0x2b052647c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b052647c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0526479c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0526479c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052648f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b052648f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052648f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052648f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b052648f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052648f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b052648f950"/>
        <function-ref name="clr" scoped="" ref="0x2b052648fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05264b54b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05264b54b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05264b5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b05264b5ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b05264b5ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b05264b5e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b05264b4020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b05264b41a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b05264b4330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b05264b44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b05264e4418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b05264e4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05264e4768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0526338c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0526338c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b05264e5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b05264e5ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b05264e5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05264e40a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b05264e5308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b05264e5308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05264e5658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b05264e57e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b05264e5968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b05260b91c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b05260b91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b05260b9518"/>
        <function-ref name="runTask" scoped="" ref="0x2b05260b96a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b05260e05c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b05260e05c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05260e0918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b05260e0aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b05260e0c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b052618ac58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b052618ac58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526197020"/>
        <function-ref name="runTask" scoped="" ref="0x2b05261971a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b0526194168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0526194168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b05261944b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b052618bd88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b052618bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052618a170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b052618a2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b052618a480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b05261af988" loc="88:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b05261af988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b05261afcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b05260dfe30" loc="84:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b05260dfe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b05261b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b05261b03c8" loc="85:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b05261b03c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b05261b0718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526980800" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526980800"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526980b50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526980cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526980e60"/>
        <function-ref name="cancel" scoped="" ref="0x2b052697f020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052697f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b052697f3f0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b052697f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052697f740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052697f8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052697fa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052697fbd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052697fd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b052697e020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b052697e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b052697e370"/>
        <function-ref name="source" scoped="" ref="0x2b052697e4f8"/>
        <function-ref name="address" scoped="" ref="0x2b052697e680"/>
        <function-ref name="destination" scoped="" ref="0x2b052697e808"/>
        <function-ref name="setSource" scoped="" ref="0x2b052697e990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b052697eb18"/>
        <function-ref name="type" scoped="" ref="0x2b052697eca0"/>
        <function-ref name="setType" scoped="" ref="0x2b052697ee28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b052697d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b052697d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b052697d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b052697d5b8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b052697d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b052697d908"/>
        <function-ref name="noAck" scoped="" ref="0x2b052697da90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b052697dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0527c5c7c8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0527c5c7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527c5cb18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527c5cca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527c5ce28"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527c5b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527c5b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b0527c5b450" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0527c5b450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527c5b7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527c5b928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527c5bab0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527c5bc38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527c5bdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b0527c5a060" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0527c5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0527c5a3b0"/>
        <function-ref name="source" scoped="" ref="0x2b0527c5a538"/>
        <function-ref name="address" scoped="" ref="0x2b0527c5a6c0"/>
        <function-ref name="destination" scoped="" ref="0x2b0527c5a848"/>
        <function-ref name="setSource" scoped="" ref="0x2b0527c5a9d0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527c5ab58"/>
        <function-ref name="type" scoped="" ref="0x2b0527c5ace0"/>
        <function-ref name="setType" scoped="" ref="0x2b0527c5ae68"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0527c59020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0527c591a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0527c59330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b05265325d8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b05265325d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526532928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526532ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526532c38"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526532dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526531020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b05265766f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b05265766f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526576a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526576bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526576d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526575020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05265751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0526577920" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0526577920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526577c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526577e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526576020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05265761a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526576330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b0526574a10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526574a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526574d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526573020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05265731a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526573330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05265734b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b0526573780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b0526573780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526573ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526573c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b0526571020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b0526571020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526571370"/>
        <function-ref name="runTask" scoped="" ref="0x2b05265714f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b05265753f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b05265753f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526575740"/>
        <function-ref name="source" scoped="" ref="0x2b05265758c8"/>
        <function-ref name="address" scoped="" ref="0x2b0526575a50"/>
        <function-ref name="destination" scoped="" ref="0x2b0526575bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526575d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526574020"/>
        <function-ref name="type" scoped="" ref="0x2b05265741a8"/>
        <function-ref name="setType" scoped="" ref="0x2b0526574330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b05265744b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526574640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b05265747c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b052658b850" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b052658b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b052658bba0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b052658bd28"/>
        <function-ref name="start" scoped="" ref="0x2b0526588020"/>
        <function-ref name="stop" scoped="" ref="0x2b05265881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526588920" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526588920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526588c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526588df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526587020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05265871a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526587330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b05265860c0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05265860c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526586410"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526586598"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526586720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05265868a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526586a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526587ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526587ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526587e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0526584c80" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0526584c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0526583020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05265831a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0526583330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05265834b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0526583640"/>
        <function-ref name="get" scoped="" ref="0x2b05265837c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0526583950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0526582020"/>
        <function-ref name="set" scoped="" ref="0x2b0526583ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0526583c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b0526583de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b0526584348" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0526584348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0526584698"/>
        <function-ref name="noAck" scoped="" ref="0x2b0526584820"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b05265849a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0526586cd0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0526586cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b05265850a0"/>
        <function-ref name="source" scoped="" ref="0x2b0526585228"/>
        <function-ref name="address" scoped="" ref="0x2b05265853b0"/>
        <function-ref name="destination" scoped="" ref="0x2b0526585538"/>
        <function-ref name="setSource" scoped="" ref="0x2b05265856c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526585848"/>
        <function-ref name="type" scoped="" ref="0x2b05265859d0"/>
        <function-ref name="setType" scoped="" ref="0x2b0526585b58"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526585ce0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526585e68"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526584020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b05265dd308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b05265dd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05265dd658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05265dd7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05265dd968"/>
        <function-ref name="cancel" scoped="" ref="0x2b05265ddaf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05265ddc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b05265dc020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b05265dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05265dc370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526580460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526580460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05265807d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526580958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526580ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526580c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526580df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b05265dfd20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05265dfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05265de0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05265de228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05265de3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05265de538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05265de6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05265e1180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05265e1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05265e14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b05265de908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b05265de908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b05265dec58"/>
        <function-ref name="noAck" scoped="" ref="0x2b05265dede0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b05265dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b05265e1738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b05265e1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b05265e1a88"/>
        <function-ref name="source" scoped="" ref="0x2b05265e1c10"/>
        <function-ref name="address" scoped="" ref="0x2b05265e1d98"/>
        <function-ref name="destination" scoped="" ref="0x2b05265df020"/>
        <function-ref name="setSource" scoped="" ref="0x2b05265df1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b05265df330"/>
        <function-ref name="type" scoped="" ref="0x2b05265df4b8"/>
        <function-ref name="setType" scoped="" ref="0x2b05265df640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b05265df7c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b05265df950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b05265dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b05265d8728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b05265d8728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b05265d8a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b05265d8c00"/>
        <function-ref name="start" scoped="" ref="0x2b05265d8d88"/>
        <function-ref name="stop" scoped="" ref="0x2b05265d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b05265f4208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b05265f4208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05265f4558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05265f46e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05265f4868"/>
        <function-ref name="cancel" scoped="" ref="0x2b05265f49f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05265f4b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05265d8110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05265d8110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05265d8460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05265d7760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05265d7760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05265d7ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b05265f28f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b05265f28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b05265f2c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05265f2dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b05265f1020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05265f11a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05265f1330"/>
        <function-ref name="get" scoped="" ref="0x2b05265f14b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05265f1640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05265f1c60"/>
        <function-ref name="set" scoped="" ref="0x2b05265f17c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b05265f1950"/>
        <function-ref name="led2On" scoped="" ref="0x2b05265f1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b05265f2020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b05265f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b05265f2370"/>
        <function-ref name="offset" scoped="" ref="0x2b05265f24f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b05265f2680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b052660bda8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b052660bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b052660a170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b052660a2f8"/>
        <function-ref name="start" scoped="" ref="0x2b052660a480"/>
        <function-ref name="stop" scoped="" ref="0x2b052660a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b0526667830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b0526667830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526667b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526667d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b0526618398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b0526618398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05266186e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0526618870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b052663dd70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b052663dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b052663c0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b052663c278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b052660b790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b052660b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052660bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b0526615e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b0526615e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b05266171c0"/>
        <function-ref name="flush" scoped="" ref="0x2b0526617348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b0526669020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b0526669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526669370"/>
        <function-ref name="runTask" scoped="" ref="0x2b05266694f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b052661ab38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b052661ab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b052661f020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b052661f1a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b052661f330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b052661f4b8"/>
        <function-ref name="putData" scoped="" ref="0x2b052661f640"/>
        <function-ref name="putDone" scoped="" ref="0x2b052661f7c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b052661f950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b052661fbc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b052661fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b052661e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b052661e1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b052661e330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b052661e4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b052661e640"/>
        <function-ref name="get" scoped="" ref="0x2b052661e7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b052661e950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0526618020"/>
        <function-ref name="set" scoped="" ref="0x2b052661ead8"/>
        <function-ref name="led0On" scoped="" ref="0x2b052661ec60"/>
        <function-ref name="led2On" scoped="" ref="0x2b052661ede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b0526663918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b0526663918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526663c68"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526663df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b0526604950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b0526604950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b0526604ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b0526604e28"/>
        <function-ref name="startSend" scoped="" ref="0x2b0526609020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b05266091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b0526620b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0526620b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b0526608020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b05266081a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b0526608330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b0526737100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b0526737100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526737450"/>
        <function-ref name="runTask" scoped="" ref="0x2b05267375d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b052673c020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b052673c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052673c390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052673c518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052673c6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b052673c828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052673c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b05267378a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b05267378a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526737bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526737d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b052673d868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b052673d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052673dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b052673cdb8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b052673cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b052626d4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b052673a170"/>
        <function-ref name="offset" scoped="" ref="0x2b052673a2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b052673a480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0526739a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0526739a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0526739da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0526738020"/>
        <function-ref name="led1On" scoped="" ref="0x2b05267381a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0526738330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05267384b8"/>
        <function-ref name="get" scoped="" ref="0x2b0526738640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05267387c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0526738de8"/>
        <function-ref name="set" scoped="" ref="0x2b0526738ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0526738950"/>
        <function-ref name="led0On" scoped="" ref="0x2b0526738c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b0526739020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b0526739020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b0526739370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b05267394f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b0526739680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b0526739808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b052673a6c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b052673a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b052673aa18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b052673aba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b052673ad28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b0526749448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0526749448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526749798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0526749920"/>
        <function-ref name="receive" scoped="" ref="0x2b0526749aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0526749c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0526749db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0526731020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05267311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b0526735b30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0526735b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b0526735e80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b0526732030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b05267321b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b0526732340"/>
        <function-ref name="putData" scoped="" ref="0x2b05267324c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b0526732650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b05267327d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0526731420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0526731420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0526731770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05267318f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0526731a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0526731c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0526731d90"/>
        <function-ref name="get" scoped="" ref="0x2b0526730020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05267301a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05267307c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526730330"/>
        <function-ref name="led0On" scoped="" ref="0x2b05267304b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0526730640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0526771290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0526771290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05267715e0"/>
        <function-ref name="receive" scoped="" ref="0x2b0526771768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b05267540c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b05267540c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526754410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0526754598"/>
        <function-ref name="receive" scoped="" ref="0x2b0526754720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b05267548a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0526754a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0526754bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526754d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b05267348b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b05267348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0526734c00"/>
        <function-ref name="stop" scoped="" ref="0x2b0526734d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0526775af0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0526775af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526775e40"/>
        <function-ref name="receive" scoped="" ref="0x2b0526770020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0526770310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0526770310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526770660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b05267707e8"/>
        <function-ref name="receive" scoped="" ref="0x2b0526770970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0526770af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0526770c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0526770e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052676f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0526769398" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0526769398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052676e130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b052676ea40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b052676e5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b052676d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0526775338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0526775338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0526775688"/>
        <function-ref name="stop" scoped="" ref="0x2b0526775810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b05267bb780" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b05267bb780"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05267bbad0"/>
        <function-ref name="receive" scoped="" ref="0x2b05267bbc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b05267b9020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b05267b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267b9370"/>
        <function-ref name="stop" scoped="" ref="0x2b05267b94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05267669f0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05267669f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526766d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b05267ba020" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b05267ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05267ba370"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b05267ba4f8"/>
        <function-ref name="receive" scoped="" ref="0x2b05267ba680"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b05267ba808"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b05267ba990"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b05267bab18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05267baca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b05267b7640" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b05267b7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05267b63f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b05267b6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b05267b6878"/>
        <function-ref name="overflow" scoped="" ref="0x2b05267b41f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b05267b8020" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b05267b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b05267b8370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b05267b84f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b05267b8680"/>
        <function-ref name="txDone" scoped="" ref="0x2b05267b8808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b05267b8990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b05267b8b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b05267b8ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b05267b8e28"/>
        <function-ref name="tx" scoped="" ref="0x2b05267b7020"/>
        <function-ref name="rx" scoped="" ref="0x2b05267b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b05267bb020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b05267bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267bb370"/>
        <function-ref name="stop" scoped="" ref="0x2b05267bb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b05267b97c0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b05267b97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267b9b10"/>
        <function-ref name="stop" scoped="" ref="0x2b05267b9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b05267e3510" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b05267e3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b05267e3860"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b05267e39e8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b05267e3b70"/>
        <function-ref name="txDone" scoped="" ref="0x2b05267e3cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b05267e3e80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b05267e2030"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b05267e21b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b05267e2340"/>
        <function-ref name="tx" scoped="" ref="0x2b05267e24c8"/>
        <function-ref name="rx" scoped="" ref="0x2b05267e2650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b05267e1be0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b05267e1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b05267e0020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b05267e01a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b05267e0330"/>
        <function-ref name="txDone" scoped="" ref="0x2b05267e04b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b05267e0640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b05267e07c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b05267e0950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b05267e0ad8"/>
        <function-ref name="tx" scoped="" ref="0x2b05267e0c60"/>
        <function-ref name="rx" scoped="" ref="0x2b05267e0de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b05267e4b80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b05267e4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267e3020"/>
        <function-ref name="stop" scoped="" ref="0x2b05267e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b05267e29d0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b05267e29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267e2d20"/>
        <function-ref name="stop" scoped="" ref="0x2b05267e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b05267e13a0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b05267e13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267e16f0"/>
        <function-ref name="stop" scoped="" ref="0x2b05267e1878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b05267e4328" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b05267e4328"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267e4678"/>
        <function-ref name="stop" scoped="" ref="0x2b05267e4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b05267dfb00" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b05267dfb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05267dfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b05267db3c8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b05267db3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b05267db718"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b05267db8a0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b05267dba28"/>
        <function-ref name="txDone" scoped="" ref="0x2b05267dbbb0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b05267dbd38"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b05267da020"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b05267da1a8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b05267da330"/>
        <function-ref name="tx" scoped="" ref="0x2b05267da4b8"/>
        <function-ref name="rx" scoped="" ref="0x2b05267da640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b05267da998" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b05267da998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05267dace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b05267d8240" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b05267d8240"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b05267d8590"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b05267d8718"/>
        <function-ref name="rxDone" scoped="" ref="0x2b05267d88a0"/>
        <function-ref name="txDone" scoped="" ref="0x2b05267d8a28"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b05267d8bb0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b05267d8d38"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b05267d7020"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b05267d71a8"/>
        <function-ref name="tx" scoped="" ref="0x2b05267d7330"/>
        <function-ref name="rx" scoped="" ref="0x2b05267d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b05267dcaf0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b05267dcaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267dce40"/>
        <function-ref name="stop" scoped="" ref="0x2b05267db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b05267d90f0" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b05267d90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267d9440"/>
        <function-ref name="stop" scoped="" ref="0x2b05267d95c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b05267d9988" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b05267d9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267d9cd8"/>
        <function-ref name="stop" scoped="" ref="0x2b05267d9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b05267d77d8" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b05267d77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b05267d7b28"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b05267d7cb0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b05267d7e38"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b05267d6020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b05267d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b05267d64b8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b05267d64b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b05267d6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b05267dc258" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b05267dc258"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b05267dc5a8"/>
        <function-ref name="stop" scoped="" ref="0x2b05267dc730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b052683ea88" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b052683ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052683a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526839190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b052683acb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526839618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b05268387f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b05268387f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0526190d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526835578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b052685c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526835a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b052685c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b052686a5e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b052686a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b052686a938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b052686aac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b052686ac48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b052686add0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b052684b020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b052684b1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b052684b330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b052684b4b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b052684b640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b052684b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b052684a020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b052684a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0526860270"/>
        <function-ref name="test" scoped="" ref="0x2b0526861930"/>
        <function-ref name="get" scoped="" ref="0x2b052684aba0"/>
        <function-ref name="captured" scoped="" ref="0x2b0526862560"/>
        <function-ref name="reset" scoped="" ref="0x2b0526862a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526861db8"/>
        <function-ref name="set" scoped="" ref="0x2b0526862088"/>
        <function-ref name="start" scoped="" ref="0x2b0526861020"/>
        <function-ref name="stop" scoped="" ref="0x2b05268614a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b052685f598" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b052685f598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b052687fdb8"/>
        <function-ref name="fired" scoped="" ref="0x2b052685eab0"/>
        <function-ref name="get" scoped="" ref="0x2b052685e150"/>
        <function-ref name="reset" scoped="" ref="0x2b052687f020"/>
        <function-ref name="isOn" scoped="" ref="0x2b052687e270"/>
        <function-ref name="set" scoped="" ref="0x2b052685e5d8"/>
        <function-ref name="start" scoped="" ref="0x2b052687f4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b052687f930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b052684f6e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b052684f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b052684d930"/>
        <function-ref name="test" scoped="" ref="0x2b052684d020"/>
        <function-ref name="get" scoped="" ref="0x2b05268573a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b052684ddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b052684c2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b052684e1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526857d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b052684d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526857830"/>
        <function-ref name="start" scoped="" ref="0x2b052684e680"/>
        <function-ref name="stop" scoped="" ref="0x2b052684eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0526875838" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526875838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b0526875b88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0526875d10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0526874020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b05268741a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0526874330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b05268744b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0526874640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b05268747c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b0526874950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0526874ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b0526897938" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b0526897938"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b05268930f8"/>
        <function-ref name="fired" scoped="" ref="0x2b0526896e40"/>
        <function-ref name="get" scoped="" ref="0x2b05268964e0"/>
        <function-ref name="reset" scoped="" ref="0x2b0526894310"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526893580"/>
        <function-ref name="set" scoped="" ref="0x2b0526896968"/>
        <function-ref name="start" scoped="" ref="0x2b0526894798"/>
        <function-ref name="stop" scoped="" ref="0x2b0526894c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b0526873020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0526873020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0526897270"/>
        <function-ref name="test" scoped="" ref="0x2b0526898930"/>
        <function-ref name="get" scoped="" ref="0x2b0526873ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b0526872560"/>
        <function-ref name="reset" scoped="" ref="0x2b0526872a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526898db8"/>
        <function-ref name="set" scoped="" ref="0x2b0526872088"/>
        <function-ref name="start" scoped="" ref="0x2b0526898020"/>
        <function-ref name="stop" scoped="" ref="0x2b05268984a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b0526893bf8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b0526893bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b052688f4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b0526891130"/>
        <function-ref name="get" scoped="" ref="0x2b05268927a0"/>
        <function-ref name="reset" scoped="" ref="0x2b05268915b8"/>
        <function-ref name="isOn" scoped="" ref="0x2b052688f930"/>
        <function-ref name="set" scoped="" ref="0x2b0526892c28"/>
        <function-ref name="start" scoped="" ref="0x2b0526891a40"/>
        <function-ref name="stop" scoped="" ref="0x2b052688f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b052688e020" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b052688e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b052688c7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b052688d560"/>
        <function-ref name="get" scoped="" ref="0x2b052688eba0"/>
        <function-ref name="reset" scoped="" ref="0x2b052688d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b052688cc30"/>
        <function-ref name="set" scoped="" ref="0x2b052688d088"/>
        <function-ref name="start" scoped="" ref="0x2b052688de70"/>
        <function-ref name="stop" scoped="" ref="0x2b052688c320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b052687a6f8" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b052687a6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0526876930"/>
        <function-ref name="test" scoped="" ref="0x2b0526876020"/>
        <function-ref name="get" scoped="" ref="0x2b05268793a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b0526876db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b05268752f0"/>
        <function-ref name="reset" scoped="" ref="0x2b05268781f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526879d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b05268764a8"/>
        <function-ref name="set" scoped="" ref="0x2b0526879830"/>
        <function-ref name="start" scoped="" ref="0x2b0526878680"/>
        <function-ref name="stop" scoped="" ref="0x2b0526878b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b052690f4e8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b052690f4e8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b05260be388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b05260be388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052690f838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b052690fc08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b052690fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b052692bdb8"/>
        <function-ref name="test" scoped="" ref="0x2b052692b4a8"/>
        <function-ref name="get" scoped="" ref="0x2b0526903820"/>
        <function-ref name="setScale" scoped="" ref="0x2b052692a270"/>
        <function-ref name="getScale" scoped="" ref="0x2b052692a748"/>
        <function-ref name="reset" scoped="" ref="0x2b0526902658"/>
        <function-ref name="overflow" scoped="" ref="0x2b05269021d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b052692b930"/>
        <function-ref name="set" scoped="" ref="0x2b0526903ca8"/>
        <function-ref name="start" scoped="" ref="0x2b0526902ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b052692b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0526927a98" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0526927a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0526190d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526942828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526940190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526942cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526940618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0526940b78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526940b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b052693cc20"/>
        <function-ref name="test" scoped="" ref="0x2b052693c310"/>
        <function-ref name="get" scoped="" ref="0x2b052693f728"/>
        <function-ref name="setScale" scoped="" ref="0x2b052693b0f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b052693b5d0"/>
        <function-ref name="reset" scoped="" ref="0x2b052693e548"/>
        <function-ref name="overflow" scoped="" ref="0x2b052693e0c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b052693c798"/>
        <function-ref name="set" scoped="" ref="0x2b052693fbb0"/>
        <function-ref name="start" scoped="" ref="0x2b052693e9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b052693ee58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b0526947450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b0526947450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0526190d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05269461d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526946ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526946658"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526944020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0526937270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0526937270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526948020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526948930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b05269484a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526948db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b0526967020" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b0526967020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b0526967370"/>
        <function-ref name="offset" scoped="" ref="0x2b05269674f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b0526967680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b0526979020" loc="43:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0526979020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b05269888c0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b05269861c0"/>
        <function-ref name="element" scoped="" ref="0x2b0526986660"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0526988470"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0526988d10"/>
        <function-ref name="empty" scoped="" ref="0x2b0526979b68"/>
        <function-ref name="size" scoped="" ref="0x2b0526988020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b05269acb90" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b05269acb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b05269ab470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b05269abd10"/>
        <function-ref name="element" scoped="" ref="0x2b05269aa200"/>
        <function-ref name="maxSize" scoped="" ref="0x2b05269ab020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b05269ab8c0"/>
        <function-ref name="empty" scoped="" ref="0x2b05269ae728"/>
        <function-ref name="size" scoped="" ref="0x2b05269aeb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b05269aa668" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b05269aa668"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05269aa9b8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05269aab40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05269aacc8"/>
        <function-ref name="cancel" scoped="" ref="0x2b05269aae50"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05269a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b05269a92a8" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05269a92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05269a95f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05269a9780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05269a9908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05269a9a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05269a9c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b05269a33e8" loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b05269a33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b05269a3738"/>
        <function-ref name="runTask" scoped="" ref="0x2b05269a38c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526985c88" loc="89:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526985c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05269af020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b05269a8020" loc="96:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b05269a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b05269a8370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05269a84f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b05269a8680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05269a8808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05269a8990"/>
        <function-ref name="get" scoped="" ref="0x2b05269a8b18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05269a8ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05269a7330"/>
        <function-ref name="set" scoped="" ref="0x2b05269a8e28"/>
        <function-ref name="led0On" scoped="" ref="0x2b05269a7020"/>
        <function-ref name="led2On" scoped="" ref="0x2b05269a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b05269ac358" loc="90:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b05269ac358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b05269ac6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b05269bdcb0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b05269bdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b05269ba0a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05269ba228"/>
        <function-ref name="led1On" scoped="" ref="0x2b05269ba3b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05269ba538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05269ba6c0"/>
        <function-ref name="get" scoped="" ref="0x2b05269ba848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05269ba9d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05269b9020"/>
        <function-ref name="set" scoped="" ref="0x2b05269bab58"/>
        <function-ref name="led0On" scoped="" ref="0x2b05269bace0"/>
        <function-ref name="led2On" scoped="" ref="0x2b05269bae68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b05269b4ce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b05269b4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269b30a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269b3228"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269b33b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269b3538"/>
        <function-ref name="get" scoped="" ref="0x2b05269b36c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269b3848"/>
        <function-ref name="set" scoped="" ref="0x2b05269b39d0"/>
        <function-ref name="clr" scoped="" ref="0x2b05269b3b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05269b5020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05269b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05269b5370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b05269b3e70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b05269b3e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269b21e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269b2370"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269b24f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269b2680"/>
        <function-ref name="get" scoped="" ref="0x2b05269b2808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269b2990"/>
        <function-ref name="set" scoped="" ref="0x2b05269b2b18"/>
        <function-ref name="clr" scoped="" ref="0x2b05269b2ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b05269b55e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b05269b55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b05269b5938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b05269b5ac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b05269b5c48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b05269b5dd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b05269b4020"/>
        <function-ref name="get" scoped="" ref="0x2b05269b41a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b05269b4330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b05269b4950"/>
        <function-ref name="set" scoped="" ref="0x2b05269b44b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b05269b4640"/>
        <function-ref name="led2On" scoped="" ref="0x2b05269b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b05269df020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b05269df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269df370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269df4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269df680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269df808"/>
        <function-ref name="get" scoped="" ref="0x2b05269df990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269dfb18"/>
        <function-ref name="set" scoped="" ref="0x2b05269dfca0"/>
        <function-ref name="clr" scoped="" ref="0x2b05269dfe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b05269b6e10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b05269b6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269f21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269f2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269f24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269f2640"/>
        <function-ref name="get" scoped="" ref="0x2b05269f27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269f2950"/>
        <function-ref name="set" scoped="" ref="0x2b05269f2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b05269f2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b05269f1020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b05269f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269f1370"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269f14f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269f1680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269f1808"/>
        <function-ref name="get" scoped="" ref="0x2b05269f1990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269f1b18"/>
        <function-ref name="set" scoped="" ref="0x2b05269f1ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b05269f1e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b05269ef2d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05269ef2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05269ef628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b05269f01b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b05269f01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05269f0500"/>
        <function-ref name="isInput" scoped="" ref="0x2b05269f0688"/>
        <function-ref name="toggle" scoped="" ref="0x2b05269f0810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05269f0998"/>
        <function-ref name="get" scoped="" ref="0x2b05269f0b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05269f0ca8"/>
        <function-ref name="set" scoped="" ref="0x2b05269f0e30"/>
        <function-ref name="clr" scoped="" ref="0x2b05269ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b05269e5080" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b05269e5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b05269e53d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526a0da38" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526a0da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526a0dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b0526a0c080" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b0526a0c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b0526a0c3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b05269e8e28" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b05269e8e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0526a041a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b0526a04538" loc="40:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b0526a04538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526a04888"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526a04a10"/>
        <function-ref name="start" scoped="" ref="0x2b0526a04b98"/>
        <function-ref name="stop" scoped="" ref="0x2b0526a04d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526a05a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SinkC.BootTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526a05a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526bcbd60"/>
        <function-ref name="fired" scoped="" ref="0x2b0526bcc470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526bcb1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526bccd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526bc9648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526bc91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526bcc8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526bcd620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526bcb790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526bcdac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0526a244e8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a244e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526a20768"/>
        <function-ref name="fired" scoped="" ref="0x2b0526a23e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526a21b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526a21728"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526a1f088"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526a20bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526a212d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526a23088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526a20198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526a23528"/>
        <function-ref name="stop" scoped="" ref="0x2b0526a239c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0526a1bb68" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0526a1bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526a18d98"/>
        <function-ref name="fired" scoped="" ref="0x2b0526a194d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526a181f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526a19d78"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526a16688"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526a16238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526a19928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526a1a6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526a187c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526a1ab90"/>
        <function-ref name="stop" scoped="" ref="0x2b0526a19088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0526a16c48" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0526a16c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526a15820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526a1fe38" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526a1fe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526a1b1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0526a31108" loc="31:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0526a31108"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526a31c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b0526a35c80" loc="30:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b0526a35c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526a34a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526a334a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526a33020"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526a33930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526a10348" loc="28:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526a10348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526a10698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b0526a37838" loc="29:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0526a37838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526a35020"/>
        <function-ref name="fired" scoped="" ref="0x2b0526a3d020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0526a3d930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526a3d4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0526a354a8"/>
        <function-ref name="start" scoped="" ref="0x2b0526a0e5e0"/>
        <function-ref name="stop" scoped="" ref="0x2b0526a0eab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0526b26670" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0526b26670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526b24220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0526b2c478" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0526b2c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526b29b18"/>
        <function-ref name="fired" scoped="" ref="0x2b0526b2bb80"/>
        <function-ref name="startAt" scoped="" ref="0x2b0526b29510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526b29088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0526b28020"/>
        <function-ref name="start" scoped="" ref="0x2b0526b2b220"/>
        <function-ref name="stop" scoped="" ref="0x2b0526b2b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526b2dc20" loc="60:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526b2dc20"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b05260be388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b05260be388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526b2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0526b28608" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0526b28608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526b273a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526b27cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526b27830"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526b26190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b0527d362a0" loc="68:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0527d362a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0527d365f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0527d36778"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0527d36900"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0527d36a88"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0527d36c10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0527d36d98"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0527d35020"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0527d351a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0527d3d168" loc="64:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0527d3d168"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527d3dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0527d43020" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0527d43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527d40690"/>
        <function-ref name="fired" scoped="" ref="0x2b0527d426f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0527d40088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527d42b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0527d40b18"/>
        <function-ref name="start" scoped="" ref="0x2b0527d43d70"/>
        <function-ref name="stop" scoped="" ref="0x2b0527d42270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527d447b8" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527d447b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527d44b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0527d3f128" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0527d3f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527d3fe78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0527d3e7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0527d3e330"/>
        <function-ref name="overflow" scoped="" ref="0x2b0527d3ec40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b0527d32688" loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0527d32688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0527d329d8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0527d32b60"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0527d32ce8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0527d32e70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0527d30020"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0527d301a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0527d30330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0527d304b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b0527d35538" loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0527d35538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0527d33db8"/>
        <function-ref name="fired" scoped="" ref="0x2b0527d34a58"/>
        <function-ref name="get" scoped="" ref="0x2b0527d340f8"/>
        <function-ref name="reset" scoped="" ref="0x2b0527d33020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0527d32270"/>
        <function-ref name="set" scoped="" ref="0x2b0527d34580"/>
        <function-ref name="start" scoped="" ref="0x2b0527d334a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0527d33930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0527d3b2f0" loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0527d3b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0527d384a8"/>
        <function-ref name="test" scoped="" ref="0x2b0527d39a40"/>
        <function-ref name="get" scoped="" ref="0x2b0527d3be70"/>
        <function-ref name="setScale" scoped="" ref="0x2b0527d38930"/>
        <function-ref name="getScale" scoped="" ref="0x2b0527d38e08"/>
        <function-ref name="reset" scoped="" ref="0x2b0527d3ac80"/>
        <function-ref name="overflow" scoped="" ref="0x2b0527d3a7f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0527d38020"/>
        <function-ref name="set" scoped="" ref="0x2b0527d3a320"/>
        <function-ref name="start" scoped="" ref="0x2b0527d39130"/>
        <function-ref name="stop" scoped="" ref="0x2b0527d395b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0526a9e160" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526a9e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0526a9e4b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0526a9e638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0526a9e7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0526a9e948"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0526a9ead0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0526a9ec58"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0526a9ede0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0526acf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0526acc7b0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0526acc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0526accb00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0526accc88"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0526acce10"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0526aca020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0526aca1a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0526aca330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0526aca4b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0526aca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0526acf4e8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0526acf4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0526acddb8"/>
        <function-ref name="fired" scoped="" ref="0x2b0526acea20"/>
        <function-ref name="get" scoped="" ref="0x2b0526ace0c0"/>
        <function-ref name="reset" scoped="" ref="0x2b0526acd020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526acc270"/>
        <function-ref name="set" scoped="" ref="0x2b0526ace548"/>
        <function-ref name="start" scoped="" ref="0x2b0526acd4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0526acd930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526aa3180" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526aa3180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0526aa0270"/>
        <function-ref name="test" scoped="" ref="0x2b0526aa1930"/>
        <function-ref name="get" scoped="" ref="0x2b0526aa3d00"/>
        <function-ref name="setScale" scoped="" ref="0x2b0526aa06f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0526aa0bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0526aa2b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526aa26d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526aa1db8"/>
        <function-ref name="set" scoped="" ref="0x2b0526aa21f8"/>
        <function-ref name="start" scoped="" ref="0x2b0526aa1020"/>
        <function-ref name="stop" scoped="" ref="0x2b0526aa14a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0526ac2a98" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0526ac2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0526ac2de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0526ac1020"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0526ac11a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0526ac1330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0526ac14b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0526ac1640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0526ac17c8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0526ac1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b0526abc0c0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0526abc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0526abc410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0526abc7c0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0526abc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0526abcb10"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0526abcc98"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0526abce20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0526abb020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0526abb1a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0526abb330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0526abb4b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0526abb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0526ac1e18" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0526ac1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0526abd798"/>
        <function-ref name="fired" scoped="" ref="0x2b0526abf4f8"/>
        <function-ref name="get" scoped="" ref="0x2b0526ac0a18"/>
        <function-ref name="reset" scoped="" ref="0x2b0526abf980"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526abdc20"/>
        <function-ref name="set" scoped="" ref="0x2b0526abf020"/>
        <function-ref name="start" scoped="" ref="0x2b0526abfe08"/>
        <function-ref name="stop" scoped="" ref="0x2b0526abd310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526ac7a70" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526ac7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0526ac4b80"/>
        <function-ref name="test" scoped="" ref="0x2b0526ac4270"/>
        <function-ref name="get" scoped="" ref="0x2b0526ac6658"/>
        <function-ref name="setScale" scoped="" ref="0x2b0526ac2088"/>
        <function-ref name="getScale" scoped="" ref="0x2b0526ac2560"/>
        <function-ref name="reset" scoped="" ref="0x2b0526ac54a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526ac5020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0526ac46f8"/>
        <function-ref name="set" scoped="" ref="0x2b0526ac6ae0"/>
        <function-ref name="start" scoped="" ref="0x2b0526ac5930"/>
        <function-ref name="stop" scoped="" ref="0x2b0526ac5db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b0526b5dcf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b0526b5dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526b5c0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526b5c228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0526b61c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0526b61c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526b5d410"/>
        <function-ref name="fired" scoped="" ref="0x2b0526b5e4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0526b5edb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526b5e930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0526b5d898"/>
        <function-ref name="start" scoped="" ref="0x2b0526b5f9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0526b5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526b66ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526b66ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526b62d60"/>
        <function-ref name="fired" scoped="" ref="0x2b0526b63470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526b621c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526b63d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526b61648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526b611f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526b638c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526b65620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526b62790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526b65ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0526b63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b0526bac930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b0526bac930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526bacc80"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526bace08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b0526bb1858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b0526bb1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526badbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0526bae1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526bad020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526baea60"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526bac4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526bac088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526bae610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526bb03d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526bad5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526bb0878"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bb0d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526bb75e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526bb75e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526bb2988"/>
        <function-ref name="fired" scoped="" ref="0x2b0526bb4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526bb4d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526bb4900"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526bb12d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526bb2df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526bb4490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526bb6198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526bb2398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526bb6658"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bb6b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0526ba7128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0526ba7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526ba7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0526b9e330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0526b9e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526b9d0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0526b9d9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0526b9d548"/>
        <function-ref name="overflow" scoped="" ref="0x2b0526b9de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0526bc72b0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="SinkC.DistTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526bc72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526bc35f0"/>
        <function-ref name="fired" scoped="" ref="0x2b0526bc6c08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526bc5928"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526bc54d8"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526bc2020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526bc3a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526bc5088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526bc7df8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526bc3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526bc6318"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bc67b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b0526bc1878" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0526bc1878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0526bc1bc8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0526bc1d50"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0526bbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b0526bed930" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b0526bed930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0526bedc80"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b0526bede08"/>
        <function-ref name="setType" scoped="" ref="0x2b0526bec020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b0526bec1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0526bec330"/>
        <function-ref name="getType" scoped="" ref="0x2b0526bec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b0526bea650" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b0526bea650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b0526bea9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x2b0526bbdc20" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b0526bbdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526bbc020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526bbc1a8"/>
        <function-ref name="start" scoped="" ref="0x2b0526bbc330"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bbc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0526bbcd30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0526bbcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526bbb0d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526bbb260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526bbb3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526bba868" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526bba868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526bbabb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526beac48" loc="65:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526beac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526bed020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526bed1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526bed330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526bed4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526bed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526bbbbb8" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526bbbbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526bba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b0526bec9a0" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526bec9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0526be8a00"/>
        <function-ref name="init" scoped="" ref="0x2b0526be8528"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0526be7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoTrafficStatistics" ref="0x2b0526bdf2b8" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b0526bdf2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0526bdf608"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0526bdf790"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0526bdf918"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0526bdfaa0"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0526bdfc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingControl" ref="0x2b0526bbd3c0" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b0526bbd3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0526bbd710"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bbd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b0526be7528" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0526be7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b0526be7878"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0526be7a00"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b0526be7b88"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0526be7d10"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0526be6020"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b0526be61a8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0526be6330"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0526be64b8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0526be6640"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0526be67c8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0526be6950"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0526be6ad8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0526be6c60"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0526be5020"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0526be51a8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0526be5330"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b0526be54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b0526bd6020" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0526bd6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0526bd6370"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0526bd64f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0526bd6680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0526bfc020" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0526bfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526bfc370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526bfc4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526bfc680"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526bfc808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526bfc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b0526c07930" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b0526c07930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0526c07c80"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b0526c07e08"/>
        <function-ref name="setType" scoped="" ref="0x2b0526c06020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b0526c061a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0526c06330"/>
        <function-ref name="getType" scoped="" ref="0x2b0526c064b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0526bfccc8" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0526bfccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526bfb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="selfReceiveTask" ref="0x2b0526c0d020" loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="selfReceiveTask" scoped="" ref="0x2b0526c0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526c0d370"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526c0d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatus" ref="0x2b0526c03b30" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b0526c03b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b0526c03e80"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b0526c05030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b0526c085c0" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b0526c085c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b0526c08910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526c08bb8" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526c08bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526c07020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526c071a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526c07330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526c074b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526c07640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526bd3a30" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526bd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526bd3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0526bd5020" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0526bd5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526bd5370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526bd54f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526bd5680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b0526c1d510" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c1d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0526c19560"/>
        <function-ref name="init" scoped="" ref="0x2b0526c19088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0526c19a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2b0526bf3a70" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2b0526bf3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b05262a1358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b05262a16b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b0526bf9470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b0526bf1158"/>
        <function-ref name="element" scoped="" ref="0x2b0526bf1788"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0526bf9020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0526bf9ad0"/>
        <function-ref name="empty" scoped="" ref="0x2b0526bfa620"/>
        <function-ref name="size" scoped="" ref="0x2b0526bfaa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0526c16d40" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0526c16d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b0526c150d8"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0526c15260"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b0526c153e8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0526c15570"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0526c156f8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b0526c15880"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0526c15a08"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0526c15b90"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0526c15d18"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0526c11020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0526c111a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0526c11330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0526c114b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0526c11740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0526c118c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0526c11a50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b0526c11bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0526bff240" loc="72:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0526bff240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526bff690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526bff818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526bff9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526bffb28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526bffcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0526bd7110" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0526bd7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0526bd7460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CacheCompare" ref="0x2b0526c00ab8" loc="64:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b0526c00ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526291500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b05262919b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b0526c04658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526bd5e50" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526bd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526bd31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b0526c10020" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0526c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526c10ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b0526c3e368" loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b0526c3e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526c3e6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526c3e840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x2b0526c21d30" loc="78:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x2b0526c21d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
            <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526beecb8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0526bee1c0"/>
        <function-ref name="empty" scoped="" ref="0x2b0526bef8b8"/>
        <function-ref name="put" scoped="" ref="0x2b0526bee610"/>
        <function-ref name="size" scoped="" ref="0x2b0526befd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0526bd7710" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0526bd7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0526bd7a60"/>
        <function-ref name="stop" scoped="" ref="0x2b0526bd7be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0526c16060" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526c16060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0526c163b0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0526c16538"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0526c166c0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0526c16848"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0526c169d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatistics" ref="0x2b0526c02158" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatistics" scoped="" ref="0x2b0526c02158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b0526bdd428"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526bdd020"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526c02ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHistory" ref="0x2b0526c1a958" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHistory" scoped="" ref="0x2b0526c1a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526291500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b05262919b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b0526c1e528"/>
        <function-ref name="flush" scoped="" ref="0x2b0526c1ee68"/>
        <function-ref name="lookup" scoped="" ref="0x2b0526c1e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0526c83960" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0526c83960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526c80560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0526c82850" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0526c82850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526c82ba0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526c82d28"/>
        <function-ref name="start" scoped="" ref="0x2b0526c7d020"/>
        <function-ref name="stop" scoped="" ref="0x2b0526c7d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b0526cb1080" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b0526cb1080"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b0526cb13d0"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b0526cb1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526c7d430" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526c7d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526c7d780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526c7d908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526c7da90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526c7dc18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526c7dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0526c7c080" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0526c7c080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526c7c3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526c7c558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526c7c6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526c7c868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526c7c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b0526c7b5a8" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0526c7b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0526c7a5f0"/>
        <function-ref name="init" scoped="" ref="0x2b0526c7a118"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0526c7aac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoPathCost" ref="0x2b0526cadc30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0526cadc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0526cb0020"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0526cb01a8"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0526cb0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526c7cc80" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526c7cc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526c7b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStatistics" ref="0x2b0526caf5d8" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0526caf5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0526caf928"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0526cafab0"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0526cafc38"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0526cafdc0"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0526cab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0526cb0720" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526cb0720"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0526cb0a70"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0526cb0bf8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0526cb0d80"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0526caf020"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0526caf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0526ca7df8" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0526ca7df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526ca6170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526ca62f8"/>
        <function-ref name="start" scoped="" ref="0x2b0526ca6480"/>
        <function-ref name="stop" scoped="" ref="0x2b0526ca6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b0526c98690" loc="81:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0526c98690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526c989e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526c98b68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526c98cf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526c98e78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526c97030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b0526c99020" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b0526c99020"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b0526c99370"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b0526c994f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526ca6890" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526ca6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526ca6be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526ca6d68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526ca5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526ca51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526ca5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b0526c9a020" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0526c9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526c9aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b0526cced90" loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b0526cced90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526ccc170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526ccc2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526ccc480"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526ccc608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526ccc790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b0526cc4ae8" loc="98:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0526cc4ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0526cc4e38"/>
        <function-ref name="rand32" scoped="" ref="0x2b0526cc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0526ca55a8" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0526ca55a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526ca58f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526ca5a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526ca5c08"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526ca5d90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526ca4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b0526cc5a40" loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b0526cc5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0526cc5d90"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0526cc3020"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0526cc31a8"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0526cc3330"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0526cc34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0526cca3b0" loc="97:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0526cca3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b0526cca700"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0526cca888"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b0526ccaa10"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0526ccab98"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0526ccad20"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b0526cc9020"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0526cc91a8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0526cc9330"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0526cc94b8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0526cc9640"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0526cc97c8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0526cc9950"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0526cc9ad8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0526cc9d60"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0526cc7020"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0526cc71a8"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b0526cc7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x2b0526cde3e8" loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x2b0526cde3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0526cde738"/>
        <function-ref name="runTask" scoped="" ref="0x2b0526cde8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BackoffConfig" ref="0x2b0526ca16e0" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffConfig" scoped="" ref="0x2b0526ca16e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b0526ca1a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b0526ca0168" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b0526ca0168"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526ca04b8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526ca0640"/>
        <function-ref name="start" scoped="" ref="0x2b0526ca07c8"/>
        <function-ref name="stop" scoped="" ref="0x2b0526ca0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketStatistics" ref="0x2b0526ca2060" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStatistics" scoped="" ref="0x2b0526ca2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b0526bdaca0"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b0526bda318"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526ca2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b0526c97380" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2b0526c97380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526c977d0"/>
        <function-ref name="source" scoped="" ref="0x2b0526c97958"/>
        <function-ref name="address" scoped="" ref="0x2b0526c97ae0"/>
        <function-ref name="destination" scoped="" ref="0x2b0526c97c68"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526c97df0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526c96020"/>
        <function-ref name="type" scoped="" ref="0x2b0526c961a8"/>
        <function-ref name="setType" scoped="" ref="0x2b0526c96330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526c964b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526c96640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526c967c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b0526cce0e8" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0526cce0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526cce438"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526cce5c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526cce748"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526cce8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526ccea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526ca42b0" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526ca42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526ca4600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSnoop" ref="0x2b0526c95a20" loc="87:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSnoop" scoped="" ref="0x2b0526c95a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526c95d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0526cc6298" loc="100:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0526cc6298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0526cc65e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0526cc6770"/>
        <function-ref name="led1On" scoped="" ref="0x2b0526cc68f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0526cc6a80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0526cc6c08"/>
        <function-ref name="get" scoped="" ref="0x2b0526cc6d90"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0526cc5020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0526cc5640"/>
        <function-ref name="set" scoped="" ref="0x2b0526cc51a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0526cc5330"/>
        <function-ref name="led2On" scoped="" ref="0x2b0526cc54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b0526c99868" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b0526c99868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526c99bb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526c99d40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526c98020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526c981a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526c98330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b0526c95380" loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b0526c95380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526c956d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b0526c96b40" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0526c96b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526c95020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PathCost" ref="0x2b0526cccb28" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathCost" scoped="" ref="0x2b0526cccb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0526ccce78"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0526ccb030"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0526ccb1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0526cc38a8" loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0526cc38a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0526cc3df8"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0526cc2020"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0526cc21a8"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0526cc2330"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0526cc24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b0526cc8c00" loc="93:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526cc8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0526cca020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0526ca0d18" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0526ca0d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526c9b088"/>
        <function-ref name="fired" scoped="" ref="0x2b0526c9e688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0526c9d470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0526c9d020"/>
        <function-ref name="getdt" scoped="" ref="0x2b0526c9b928"/>
        <function-ref name="gett0" scoped="" ref="0x2b0526c9b4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526c9ead8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0526c9f8b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0526c9da40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0526c9fd58"/>
        <function-ref name="stop" scoped="" ref="0x2b0526c9e238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0526d48e68" loc="46:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0526d48e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526d801e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526d80370"/>
        <function-ref name="start" scoped="" ref="0x2b0526d804f8"/>
        <function-ref name="stop" scoped="" ref="0x2b0526d80680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0526d763a0" loc="65:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d763a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0526d766f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0526d7c1c8" loc="51:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0526d7c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0526d7c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526d80df8" loc="48:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526d80df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526d7f170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526d7f2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526d7f480"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526d7f608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526d7f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526d7eb68" loc="50:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526d7eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526d7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526d7c7a0" loc="53:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526d7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526d7caf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526d7cc78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526d7ce00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526d7b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526d7b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b0526d6b020" loc="67:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b0526d6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526d63478"/>
        <function-ref name="clear" scoped="" ref="0x2b0526d63b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526d6bd70"/>
        <function-ref name="set" scoped="" ref="0x2b0526d9e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0526d9ee48" loc="68:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526d9ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526d9b300"/>
        <function-ref name="clear" scoped="" ref="0x2b0526d9b9e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526d9dbe8"/>
        <function-ref name="set" scoped="" ref="0x2b0526d9a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526d7e020" loc="49:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526d7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526d7e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b0526d70dc0" loc="58:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b0526d70dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0526d77170"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0526d772f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0526d77480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0526d77608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0526d77790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0526d7b448" loc="54:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0526d7b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526d7b798"/>
        <function-ref name="source" scoped="" ref="0x2b0526d7b920"/>
        <function-ref name="address" scoped="" ref="0x2b0526d7baa8"/>
        <function-ref name="destination" scoped="" ref="0x2b0526d7bc30"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526d7bdb8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526d78020"/>
        <function-ref name="type" scoped="" ref="0x2b0526d781a8"/>
        <function-ref name="setType" scoped="" ref="0x2b0526d78330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526d784b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526d78640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526d787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0526d6c878" loc="59:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0526d6c878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0526d6cbc8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0526d6cd50"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0526d76020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0526d972c0" loc="46:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0526d972c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526d97610"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526d97798"/>
        <function-ref name="start" scoped="" ref="0x2b0526d97920"/>
        <function-ref name="stop" scoped="" ref="0x2b0526d97aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0526d84818" loc="67:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0526d84818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526d83de8"/>
        <function-ref name="get" scoped="" ref="0x2b0526d838d8"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526d833c8"/>
        <function-ref name="set" scoped="" ref="0x2b0526d81328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0526d93b28" loc="51:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0526d93b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0526d93e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526d92190" loc="57:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526d92190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526d924e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526d92668"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526d927f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526d92978"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526d92b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526d96270" loc="48:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526d96270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526d965c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526d96748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526d968d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526d96a58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526d96be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526d93020" loc="50:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526d93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526d93370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0526d87480" loc="66:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0526d87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526d86aa8"/>
        <function-ref name="get" scoped="" ref="0x2b0526d86598"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526d86088"/>
        <function-ref name="set" scoped="" ref="0x2b0526d84020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526d943c8" loc="49:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526d943c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526d94718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0526dbc6b0" loc="71:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dbc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526dbbc58"/>
        <function-ref name="clear" scoped="" ref="0x2b0526db9380"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526dbb578"/>
        <function-ref name="set" scoped="" ref="0x2b0526db9a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0526dbd2d8" loc="70:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0526dbd2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526dbde58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0526d8e110" loc="65:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0526d8e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526d8d6e0"/>
        <function-ref name="get" scoped="" ref="0x2b0526d8d1d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526d8ec90"/>
        <function-ref name="set" scoped="" ref="0x2b0526d8dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b0526d90498" loc="62:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b0526d90498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0526d907e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0526d90970"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0526d90af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0526d90c80"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0526d90e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0526d92da0" loc="58:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0526d92da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526d91170"/>
        <function-ref name="source" scoped="" ref="0x2b0526d912f8"/>
        <function-ref name="address" scoped="" ref="0x2b0526d91480"/>
        <function-ref name="destination" scoped="" ref="0x2b0526d91608"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526d91790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526d91918"/>
        <function-ref name="type" scoped="" ref="0x2b0526d91aa0"/>
        <function-ref name="setType" scoped="" ref="0x2b0526d91c28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526d91db0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526d90020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526d901a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0526d8f140" loc="63:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0526d8f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0526d8f490"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0526d8f618"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0526d8f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0526d81970" loc="68:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526d81970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0526d81dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0526db8670" loc="72:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526db8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526db7ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b0526db51f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526db73f0"/>
        <function-ref name="set" scoped="" ref="0x2b0526db58d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0526db49e0" loc="42:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0526db49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0526db4d30"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0526db1020"/>
        <function-ref name="start" scoped="" ref="0x2b0526db11a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0526db1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0526dc3d28" loc="81:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0526dc3d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526dc0388"/>
        <function-ref name="get" scoped="" ref="0x2b0526dc1e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526dc18f0"/>
        <function-ref name="set" scoped="" ref="0x2b0526dc0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b0526da8710" loc="61:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b0526da8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0526da8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b0526da04b8" loc="63:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b0526da04b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0526da0908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0526da0a90"/>
        <function-ref name="request" scoped="" ref="0x2b0526da0c18"/>
        <function-ref name="granted" scoped="" ref="0x2b0526da0da0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0526d9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0526dad348" loc="48:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0526dad348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0526dad698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526db1aa8" loc="45:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526db1aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526db1df8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526db0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526db01a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526db0330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526db04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526daf818" loc="47:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526daf818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526dafb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0526dd0308" loc="65:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0526dd0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0526dd0658"/>
        <function-ref name="address" scoped="" ref="0x2b0526dd07e0"/>
        <function-ref name="destination" scoped="" ref="0x2b0526dd0968"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526dd0af0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526dd0c78"/>
        <function-ref name="pan" scoped="" ref="0x2b0526dd0e00"/>
        <function-ref name="setPan" scoped="" ref="0x2b0526dd9020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526dd91a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0526dd9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b0526dd96e0" loc="66:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b0526dd96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526dd9a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526dd9bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526dd9d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526dd8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526dd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0526dc6870" loc="80:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0526dc6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526dc3020"/>
        <function-ref name="get" scoped="" ref="0x2b0526dc49a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526dc4490"/>
        <function-ref name="set" scoped="" ref="0x2b0526dc3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0526dc81d8" loc="70:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0526dc81d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b0526dc8528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0526dc86b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b0526dc8838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0526dc89c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b0526daa9e8" loc="55:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0526daa9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526daad38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526da9020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526da91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526da9330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526da94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526db0c38" loc="46:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526db0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526daf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0526dfbc38" loc="85:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0526dfbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526df90f8"/>
        <function-ref name="clear" scoped="" ref="0x2b0526df97d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526dfa9f0"/>
        <function-ref name="set" scoped="" ref="0x2b0526df8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0526dbf830" loc="84:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0526dbf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0526dfb410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0526dce518" loc="79:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0526dce518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526dcaae0"/>
        <function-ref name="get" scoped="" ref="0x2b0526dca5d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0526dca0c0"/>
        <function-ref name="set" scoped="" ref="0x2b0526dc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b0526da1250" loc="59:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b0526da1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526da15a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526da1728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526da18b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526da1a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526da1bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0526dac020" loc="51:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0526dac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526dac370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b0526dc8c70" loc="71:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b0526dc8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0526dcf020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0526dcf1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0526dcf330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0526dcf4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0526dcf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0526dcf968" loc="77:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0526dcf968"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0526dcfcb8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0526dcfe40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0526dce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0526dab2c0" loc="54:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0526dab2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526dab610"/>
        <function-ref name="source" scoped="" ref="0x2b0526dab798"/>
        <function-ref name="address" scoped="" ref="0x2b0526dab920"/>
        <function-ref name="destination" scoped="" ref="0x2b0526dabaa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526dabc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526dabdb8"/>
        <function-ref name="type" scoped="" ref="0x2b0526daa020"/>
        <function-ref name="setType" scoped="" ref="0x2b0526daa1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526daa330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526daa4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526daa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0526df8bf0" loc="86:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0526df8bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526df5300"/>
        <function-ref name="clear" scoped="" ref="0x2b0526df59e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526df6be8"/>
        <function-ref name="set" scoped="" ref="0x2b0526df40f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b0526da8020" loc="60:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0526da8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526da8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0526dbf020" loc="82:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0526dbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0526dbf370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0526dacbb0" loc="52:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0526dacbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526dab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b0526e11c00" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b0526e11c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b0526e0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b0526e177b0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b0526e177b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b0526e17b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b0526e05130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b0526e05130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526e05480"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0526e05608"/>
        <function-ref name="source" scoped="" ref="0x2b0526e05790"/>
        <function-ref name="destination" scoped="" ref="0x2b0526e05918"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526e05aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526e05c28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526e05db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b0526e15020" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b0526e15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b0526e15370"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b0526e154f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b0526e15680"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b0526e15808"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b0526e15990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b0526e23bd8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e23bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0526e27020"/>
        <function-ref name="wait" scoped="" ref="0x2b0526e271a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526e27330"/>
        <function-ref name="isFree" scoped="" ref="0x2b0526e274b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0526e27640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b0526e1de08" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b0526e1de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526e261a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526e26330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526e264b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526e26640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0526e267c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0526e26950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b0526e22020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0526e22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0526e1b578"/>
        <function-ref name="clear" scoped="" ref="0x2b0526e1bc58"/>
        <function-ref name="isValid" scoped="" ref="0x2b0526e22e70"/>
        <function-ref name="set" scoped="" ref="0x2b0526e5a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b0526deb928" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0526deb928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526debc78"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0526debe00"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0526def020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0526def1a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0526def330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b0526e18220" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b0526e18220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b0526e18570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b0526de2670" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b0526de2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0526de29c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b0526de2b48"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0526de2cd0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b0526de2e58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b0526dee020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b0526dee1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0526dee330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0526dee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b0526e2ad58" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0526e2ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0526e040d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0526e04260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0526e043e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0526e04570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0526e046f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0526e04880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0526e04a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0526e04b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0526e04d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0526e02020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0526e021a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0526e02330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0526e024b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0526e02740"/>
        <function-ref name="localPan" scoped="" ref="0x2b0526e028c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0526e02a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0526e02bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0526e02d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0526e29020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526e291a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0526e29330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0526e294b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0526e29640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0526e297c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0526e29950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b0526ddd6c0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b0526ddd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0526ddda10"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0526dddb98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0526dddd20"/>
        <function-ref name="getSender" scoped="" ref="0x2b0526de1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b0526e13b40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b0526e13b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b0526e1a020"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b0526e1a1a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b0526e1a330"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b0526e1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b0526e83c50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0526e83c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0526eda020"/>
        <function-ref name="wait" scoped="" ref="0x2b0526eda1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526eda330"/>
        <function-ref name="isFree" scoped="" ref="0x2b0526eda4b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0526eda640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0526edac68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0526edac68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0526ecc410"/>
        <function-ref name="fired" scoped="" ref="0x2b0526ece4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0526ecedb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0526ece930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0526ecc898"/>
        <function-ref name="start" scoped="" ref="0x2b0526ecf9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0526ece020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b0527d9e4d0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0527d9e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0527d9e840"/>
        <function-ref name="wait" scoped="" ref="0x2b0527d9e9c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527d9eb50"/>
        <function-ref name="isFree" scoped="" ref="0x2b0527d9ecd8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0527d9ee60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0527d9d350" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0527d9d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527d9bab0"/>
        <function-ref name="fired" scoped="" ref="0x2b0527d9ca58"/>
        <function-ref name="startAt" scoped="" ref="0x2b0527d9b4a8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527d9b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0527d9a020"/>
        <function-ref name="start" scoped="" ref="0x2b0527d9c0f8"/>
        <function-ref name="stop" scoped="" ref="0x2b0527d9c5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b0527d9a3f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0527d9a3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0527d9a748"/>
        <function-ref name="suspend" scoped="" ref="0x2b0527d9a8d0"/>
        <function-ref name="resume" scoped="" ref="0x2b0527d9aa58"/>
        <function-ref name="run" scoped="" ref="0x2b0527d9abe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b0526edc5b8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0526edc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0526edc908"/>
        <function-ref name="suspend" scoped="" ref="0x2b0526edca90"/>
        <function-ref name="resume" scoped="" ref="0x2b0526edcc18"/>
        <function-ref name="run" scoped="" ref="0x2b0526edcda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0526f6e430" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0526f6e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526f6e780"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526f6e908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526f6ea90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0526f6ed18" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0526f6ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526f6d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0526f701a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0526f701a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0526f70510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0526f74700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0526f74700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526f74a50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526f74bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526f74d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526f73020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526f731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0526f73510" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0526f73510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526f73880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0526f73a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526f73b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526f73d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526f72020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0526f72aa0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0526f72aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526f72e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0526f6f678" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0526f6f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0526f6f9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0526f6fb50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0526f6fcd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0526f6fe60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0526f6e020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0526f6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0526f6d328" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0526f6d328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526f6d678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0526f6d800"/>
        <function-ref name="source" scoped="" ref="0x2b0526f6d988"/>
        <function-ref name="destination" scoped="" ref="0x2b0526f6db10"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526f6dc98"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526f6de20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526f6c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0526f72388" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0526f72388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526f726f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0526f708b8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0526f708b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526f70c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0526f751f0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0526f751f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0526f75540"/>
        <function-ref name="source" scoped="" ref="0x2b0526f756c8"/>
        <function-ref name="address" scoped="" ref="0x2b0526f75850"/>
        <function-ref name="destination" scoped="" ref="0x2b0526f759d8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0526f75b60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0526f75ce8"/>
        <function-ref name="type" scoped="" ref="0x2b0526f75e70"/>
        <function-ref name="setType" scoped="" ref="0x2b0526f74020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0526f741a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0526f74330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0526f744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0526f6f020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0526f6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0526f6f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0527e0a5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0527e0a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527e0a908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0527e0bba0" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0527e0bba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527e0a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527e0a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527e0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0527e0d898" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0527e0d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0527e0dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0527e10060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0527e10060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527e103b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527e10538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527e106c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527e10848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527e109d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0527e10d38" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0527e10d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527e0e0d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527e0e260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527e0e3e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527e0e570"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527e0e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0527e0d1c0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0527e0d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527e0d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527e15c60" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527e15c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527e12020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527e121a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527e12330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527e124b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527e12640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527e127c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0527e0ab90" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0527e0ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0527e09020"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0527e091a8"/>
        <function-ref name="source" scoped="" ref="0x2b0527e09330"/>
        <function-ref name="destination" scoped="" ref="0x2b0527e094b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0527e09640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527e097c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0527e09950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b0527e09b98" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0527e09b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0527e08020"/>
        <function-ref name="changed" scoped="" ref="0x2b0527e081a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0527e08330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0527e084b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527e0cd90" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527e0cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527e0b170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527e0b2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527e0b480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527e0b608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527e0b790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527e0b918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0527e0ea60" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0527e0ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527e0edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0527e0c020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0527e0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527e0c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0527e12a10" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0527e12a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0527e12d60"/>
        <function-ref name="source" scoped="" ref="0x2b0527e11020"/>
        <function-ref name="address" scoped="" ref="0x2b0527e111a8"/>
        <function-ref name="destination" scoped="" ref="0x2b0527e11330"/>
        <function-ref name="setSource" scoped="" ref="0x2b0527e114b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527e11640"/>
        <function-ref name="type" scoped="" ref="0x2b0527e117c8"/>
        <function-ref name="setType" scoped="" ref="0x2b0527e11950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0527e11ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0527e11c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0527e11de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0527e0c738" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0527e0c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527e0caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b0526f49c60" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0526f49c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0526f45020"/>
        <function-ref name="changed" scoped="" ref="0x2b0526f451a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0526f45330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0526f454b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0526f65a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0526f65a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526f65d98"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526f9a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526f9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b0526f9a3f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0526f9a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0526f9a740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0526f9a8c8"/>
        <function-ref name="request" scoped="" ref="0x2b0526f9aa50"/>
        <function-ref name="granted" scoped="" ref="0x2b0526f9abd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0526f9ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b0526f65100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b0526f65100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0526f65450"/>
        <function-ref name="cancel" scoped="" ref="0x2b0526f655d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0526f65760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0527009020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527009020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0527009390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0527009518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0527007020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527007020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0527007390"/>
        <function-ref name="configure" scoped="" ref="0x2b0527007518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b052700a200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b052700a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b052700a570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b052700a6f8"/>
        <function-ref name="request" scoped="" ref="0x2b052700a880"/>
        <function-ref name="granted" scoped="" ref="0x2b052700aa08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b052700ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0527009760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527009760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0527009ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b0527009c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527e37438" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527e37438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527e37788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b0527e37a10" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b0527e37a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0527e37d60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0527e35020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0527e351a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0527e35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0527e33698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527e33698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0527e33a08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0527e33b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0527e326c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527e326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0527e32a30"/>
        <function-ref name="configure" scoped="" ref="0x2b0527e32bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0527e32e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0527e32e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0527e311c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0527e31348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0527e314d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0527e31658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0527e34918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0527e34918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0527e34c88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0527e34e10"/>
        <function-ref name="request" scoped="" ref="0x2b0527e33020"/>
        <function-ref name="granted" scoped="" ref="0x2b0527e331a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0527e33330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0527e33dd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527e33dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0527e32170"/>
        <function-ref name="userId" scoped="" ref="0x2b0527e322f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0527e31920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0527e31920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527e31c70"/>
        <function-ref name="runTask" scoped="" ref="0x2b0527e31df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0527019ba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0527019ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527017020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05270171a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527017330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b05270175b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b05270175b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527017908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b052701d840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b052701d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b052701db90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0527004980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0527004980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527004cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527004e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052701e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052701e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052701e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b052701ad98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b052701ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527019170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05270192f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527019480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527019608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527019790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527019918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b052701de38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b052701de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b052701c1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b052701c348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b052701c4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b052701c658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b052701c7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b052701c968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b052701caf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b052701cc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b052701ce00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b052701b020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b052701b1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b052701b330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b052701b4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b052701b740"/>
        <function-ref name="localPan" scoped="" ref="0x2b052701b8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b052701ba50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b052701bbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b052701bd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b052701a020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b052701a1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b052701a330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b052701a4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b052701a640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b052701a7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b052701a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b052701e578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b052701e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052701e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052701ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052701ebd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b052701ed60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052701d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b052701d2a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b052701d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052701d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b052706d490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b052706d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052706d7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b052706d968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052706daf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b052706dd78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b052706dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052706c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0527071880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527071880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527071bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527071d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052706f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052706f1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052706f330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052706f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b052706e060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b052706e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052706e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b052706c378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b052706c378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052706c6c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052706c850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052706c9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052706cb60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052706cce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052706ce70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b052706f740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b052706f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052706fa90"/>
        <function-ref name="cancel" scoped="" ref="0x2b052706fc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052706fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b0527011838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b0527011838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527011b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527011d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527071020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b05270712a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b05270712a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05270715f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b052706e638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b052706e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052706e988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052706eb10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052706ec98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052706ee20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052706d020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052706d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0527101900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527101900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0527101c50"/>
        <function-ref name="address" scoped="" ref="0x2b0527101dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b0527100020"/>
        <function-ref name="setSource" scoped="" ref="0x2b05271001a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527100330"/>
        <function-ref name="pan" scoped="" ref="0x2b05271004b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b0527100640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b05271007c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0527100950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527100b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527100b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05270ff020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05270ff1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05270ff330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05270ff4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05270ff640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05270ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b0527105980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527105980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0527105cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0527105e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0527103020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b05271031a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0527103330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b05271034b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0527103640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b05271037c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0527103950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0527103ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0527103c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0527103de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0527102020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b05271022a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0527102430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b05271025b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0527102740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b05271028c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0527102a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0527102bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0527102d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0527101020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b05271011a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0527101330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b05271014b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b05270ffab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b05270ffab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05270ffe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05270fe020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05270fe1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05270fe330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05270fe4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05270fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0527eccd98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0527eccd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0527ecb170"/>
        <function-ref name="address" scoped="" ref="0x2b0527ecb2f8"/>
        <function-ref name="destination" scoped="" ref="0x2b0527ecb480"/>
        <function-ref name="setSource" scoped="" ref="0x2b0527ecb608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527ecb790"/>
        <function-ref name="pan" scoped="" ref="0x2b0527ecb918"/>
        <function-ref name="setPan" scoped="" ref="0x2b0527ecbaa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0527ecbc28"/>
        <function-ref name="localPan" scoped="" ref="0x2b0527ecbdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527eca020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527eca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527eca370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527eca4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527eca680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527eca808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527eca990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527ecab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b0527ed2d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0527ed2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0527ece0d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0527ece260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0527ece3e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0527ece570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0527ece6f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0527ece880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0527ecea08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0527eceb90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0527eced18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0527ecd020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0527ecd1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0527ecd330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0527ecd4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0527ecd740"/>
        <function-ref name="localPan" scoped="" ref="0x2b0527ecd8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0527ecda50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0527ecdbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0527ecdd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0527ecc020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0527ecc1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0527ecc330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0527ecc4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0527ecc640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0527ecc7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0527ecc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b0527ecadc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0527ecadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0527ec9170"/>
        <function-ref name="changed" scoped="" ref="0x2b0527ec92f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0527ec9480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0527ec9608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527ec9890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527ec9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527ec9be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527ec9d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527ec8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527ec81a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527ec8330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527ec84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b052717b510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b052717b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052717b860"/>
        <function-ref name="cancel" scoped="" ref="0x2b052717b9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052717bb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b052717bdf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b052717bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052717a170"/>
        <function-ref name="header" scoped="" ref="0x2b052717a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b052717c470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b052717c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052717c7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b052717c948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052717cad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b052717a580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b052717a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b052717a8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b052717aa58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b052717abe0"/>
        <function-ref name="getSender" scoped="" ref="0x2b052717ad68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b052717cd18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b052717cd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052717b0a0"/>
        <function-ref name="header" scoped="" ref="0x2b052717b228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0527efe458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0527efe458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527efe7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527efe930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527efeab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0527efed40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0527efed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527efd0d8"/>
        <function-ref name="header" scoped="" ref="0x2b0527efd260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b0527efbbd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527efbbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527efa020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b0527efa1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0527efa330"/>
        <function-ref name="set" scoped="" ref="0x2b0527efa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0527f03da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0527f03da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527eff170"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527eff2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527eff480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b0527efb020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0527efb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b0527efb370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0527efb4f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b0527efb680"/>
        <function-ref name="evicted" scoped="" ref="0x2b0527efb808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b0527efb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b0527eff6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0527eff6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527effa18"/>
        <function-ref name="header" scoped="" ref="0x2b0527effba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527effde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527effde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527efe170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b0527efd4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b0527efd4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0527efd7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0527efd980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0527efdb08"/>
        <function-ref name="getSender" scoped="" ref="0x2b0527efdc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b0527117d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0527117d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b05271140d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0527114260"/>
        <function-ref name="getNode" scoped="" ref="0x2b05271143e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b0527114570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b05271146f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b0527110b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527110b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527110e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b052710f020"/>
        <function-ref name="get" scoped="" ref="0x2b052710f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b052710f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b0527111850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0527111850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b0527111ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0527111d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b0527110020"/>
        <function-ref name="evicted" scoped="" ref="0x2b05271101a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b0527110330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527111238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527111238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527111588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b0527ef8140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0527ef8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527ef8490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b0527ef8618"/>
        <function-ref name="get" scoped="" ref="0x2b0527ef87a0"/>
        <function-ref name="set" scoped="" ref="0x2b0527ef8928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0527169c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0527169c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527168020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05271681a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527168330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b05271685b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b05271685b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527168908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b0527164100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b0527164100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0527164450"/>
        <function-ref name="noAck" scoped="" ref="0x2b05271645d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b0527164760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b052716b2e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b052716b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052716b638"/>
        <function-ref name="cancel" scoped="" ref="0x2b052716b7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052716b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b052716ae20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b052716ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05271691a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527169330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05271694b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527169640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05271697c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527169950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527168b90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527168b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527166020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05271661a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527166330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05271664b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527166640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05271667c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b0527165470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b0527165470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b05271657c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0527165948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0527165ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0527165c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0527165de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b052716bbd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b052716bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052716a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b0527166a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0527166a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0527166d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b0527165020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b05271651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b052716a268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b052716a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b052716a5b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b052716a740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b052716a8c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b052716aa50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b052716abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0527199440" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0527199440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0527199790"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0527199918"/>
        <function-ref name="start" scoped="" ref="0x2b0527199aa0"/>
        <function-ref name="stop" scoped="" ref="0x2b0527199c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0527194430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0527194430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527194780"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527194908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527194a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0527194d18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0527194d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05271930a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0527197020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0527197020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527197370"/>
        <function-ref name="cancel" scoped="" ref="0x2b05271974f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527197680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527196020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527196020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527196370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05271964f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527196680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527196808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527196990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527196b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0527196d60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0527196d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b05271950d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0527195260"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b05271953e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0527195570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b0527195858" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b0527195858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0527195ba8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0527195d30"/>
        <function-ref name="start" scoped="" ref="0x2b0527194020"/>
        <function-ref name="stop" scoped="" ref="0x2b05271941a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0527197908" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0527197908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527197c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527193328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527193328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527193678"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527193800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527193988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527193b10"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527193c98"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527193e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0527f585e8" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0527f585e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b0527f58938"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0527f58ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b0527f58c48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0527f58dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0527210270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0527210270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b05272105c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0527210748"/>
        <function-ref name="start" scoped="" ref="0x2b05272108d0"/>
        <function-ref name="stop" scoped="" ref="0x2b0527210a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b052720e5d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b052720e5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b052720e928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b052720eab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b052720ec38"/>
        <function-ref name="done" scoped="" ref="0x2b052720edc0"/>
        <function-ref name="standby" scoped="" ref="0x2b052720d020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b052720d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0527210ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0527210ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052720f0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b052720f228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052720f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b052720dc98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b052720dc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052720b020"/>
        <function-ref name="header" scoped="" ref="0x2b052720b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b052720f638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b052720f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052720f988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b052720d3f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b052720d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052720d740"/>
        <function-ref name="ready" scoped="" ref="0x2b052720d8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052720da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b052720fbd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b052720fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b052720e020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b052720e1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b052720e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0527f51870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0527f51870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0527f51bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0527f51d48"/>
        <function-ref name="start" scoped="" ref="0x2b0527f50020"/>
        <function-ref name="stop" scoped="" ref="0x2b0527f501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b0527f50430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0527f50430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527f50780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b0527f4d450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0527f4d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0527f4d7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0527f4d928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0527f4dab0"/>
        <function-ref name="done" scoped="" ref="0x2b0527f4dc38"/>
        <function-ref name="standby" scoped="" ref="0x2b0527f4ddc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0527f4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0527f50a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0527f50a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527f50d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527f4e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527f4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b0527f4a4f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b0527f4a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527f4a840"/>
        <function-ref name="runTask" scoped="" ref="0x2b0527f4a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b0527f4b578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0527f4b578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527f4b8c8"/>
        <function-ref name="header" scoped="" ref="0x2b0527f4ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b0527f4ac90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b0527f4ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527f49020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0527f491a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0527f4e430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0527f4e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527f4e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b0527f4bd18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b0527f4bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527f4a0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0527f4a228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b0527f4cc98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0527f4cc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527f4b020"/>
        <function-ref name="ready" scoped="" ref="0x2b0527f4b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527f4b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0527f4e9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0527f4e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0527f4ed18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0527f4d020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0527f4d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b0527f4c268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0527f4c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0527f4c5b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b0527f4c740"/>
        <function-ref name="resume" scoped="" ref="0x2b0527f4c8c8"/>
        <function-ref name="run" scoped="" ref="0x2b0527f4ca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b0527249020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0527249020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527249370"/>
        <function-ref name="get" scoped="" ref="0x2b05272494f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b0527249680"/>
        <function-ref name="set" scoped="" ref="0x2b0527249808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b052724d220" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b052724d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052724d570"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052724d6f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052724d880"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052724da08"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052724db90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052724dd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b052724a188" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b052724a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052724a4d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052724a660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052724a7e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052724a970"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052724aaf8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052724ac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b05272507d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b05272507d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b052724fc58"/>
        <function-ref name="clear" scoped="" ref="0x2b052724e380"/>
        <function-ref name="isValid" scoped="" ref="0x2b052724f578"/>
        <function-ref name="set" scoped="" ref="0x2b052724ea60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b052724b168" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b052724b168"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052724bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0527254a48" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0527254a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0527252020"/>
        <function-ref name="clear" scoped="" ref="0x2b0527252700"/>
        <function-ref name="isValid" scoped="" ref="0x2b0527253828"/>
        <function-ref name="set" scoped="" ref="0x2b0527252de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b0527f8d618" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0527f8d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527f8d968"/>
        <function-ref name="get" scoped="" ref="0x2b0527f8daf0"/>
        <function-ref name="setValue" scoped="" ref="0x2b0527f8dc78"/>
        <function-ref name="set" scoped="" ref="0x2b0527f8de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527f8f7a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527f8f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527f8faf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527f8fc78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527f8fe00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527f8d020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527f8d1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527f8d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527f8a2a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527f8a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527f8a5f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527f8a778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527f8a900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527f8aa88"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527f8ac10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527f8ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0527f92c48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0527f92c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0527f900f8"/>
        <function-ref name="clear" scoped="" ref="0x2b0527f907d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b0527f919f0"/>
        <function-ref name="set" scoped="" ref="0x2b0527f8f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b0527f8c1c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527f8c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527f8cd48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b0527f8b290" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0527f8b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527f8be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0527f95020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0527f95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0527f94478"/>
        <function-ref name="clear" scoped="" ref="0x2b0527f94b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b0527f95d70"/>
        <function-ref name="set" scoped="" ref="0x2b0527f92278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527244a70" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527244a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527244dc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527275020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05272751a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527275330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05272754b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527275640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527275928" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527275928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527275c78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527275e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527274020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05272741a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527274330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05272744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b0527244020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b0527244020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527244390"/>
        <function-ref name="get" scoped="" ref="0x2b0527244518"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272446a0"/>
        <function-ref name="set" scoped="" ref="0x2b0527244828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b05272bd7c8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b05272bd7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b05272bdb18"/>
        <function-ref name="request" scoped="" ref="0x2b05272bdca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b05272ba388" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b05272ba388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272b9a40"/>
        <function-ref name="get" scoped="" ref="0x2b05272b9530"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272b9020"/>
        <function-ref name="set" scoped="" ref="0x2b05272b7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b05272a5368" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b05272a5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272a56b8"/>
        <function-ref name="get" scoped="" ref="0x2b05272a5840"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272a59c8"/>
        <function-ref name="set" scoped="" ref="0x2b05272a5b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b05272aabc8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b05272aabc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b05272a8088"/>
        <function-ref name="clear" scoped="" ref="0x2b05272a8768"/>
        <function-ref name="isValid" scoped="" ref="0x2b05272a9948"/>
        <function-ref name="set" scoped="" ref="0x2b05272a8e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b0527270148" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0527270148"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0527270498"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0527270620"/>
        <function-ref name="setChannel" scoped="" ref="0x2b05272707a8"/>
        <function-ref name="done" scoped="" ref="0x2b0527270930"/>
        <function-ref name="standby" scoped="" ref="0x2b0527270ab8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0527270c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b05272a4ab8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b05272a4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b05272a4e08"/>
        <function-ref name="wait" scoped="" ref="0x2b05272a3020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05272a31a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b05272a3330"/>
        <function-ref name="getNow" scoped="" ref="0x2b05272a34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b05272be060" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b05272be060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272bc640"/>
        <function-ref name="get" scoped="" ref="0x2b05272bc130"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272bebe0"/>
        <function-ref name="set" scoped="" ref="0x2b05272bcb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b052726c020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b052726c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052726c370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052726c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052726c680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052726c808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b052726c990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b052726cb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b05272abb80" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b05272abb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05272aa020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05272aa1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05272aa330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b05272aa4b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b05272aa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b052726e948" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b052726e948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052726ec98"/>
        <function-ref name="header" scoped="" ref="0x2b052726ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b05272afae0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b05272afae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05272ab150"/>
        <function-ref name="fired" scoped="" ref="0x2b05272ad1f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b05272adb08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05272ad680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b05272ab5d8"/>
        <function-ref name="start" scoped="" ref="0x2b05272ae860"/>
        <function-ref name="stop" scoped="" ref="0x2b05272aed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b05272b7880" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b05272b7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272b5020"/>
        <function-ref name="get" scoped="" ref="0x2b05272b69a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272b6490"/>
        <function-ref name="set" scoped="" ref="0x2b05272b5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b05272b0830" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b05272b0830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05272af410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b052726e020" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b052726e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052726e370"/>
        <function-ref name="ready" scoped="" ref="0x2b052726e4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052726e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b05272b5d70" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b05272b5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272b2388"/>
        <function-ref name="get" scoped="" ref="0x2b05272b3e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272b3928"/>
        <function-ref name="set" scoped="" ref="0x2b05272b2898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b05272a4020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b05272a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272a4370"/>
        <function-ref name="get" scoped="" ref="0x2b05272a44f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272a4680"/>
        <function-ref name="set" scoped="" ref="0x2b05272a4808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b05272a6750" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b05272a6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272a6aa0"/>
        <function-ref name="get" scoped="" ref="0x2b05272a6c28"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272a6db0"/>
        <function-ref name="set" scoped="" ref="0x2b05272a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b05272b0020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b05272b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b05272b0370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b0527299518" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b0527299518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b0527299868"/>
        <function-ref name="request" scoped="" ref="0x2b05272999f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b05272cdc60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b05272cdc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b05272d19f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b05272e60c8" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b05272e60c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272e56a0"/>
        <function-ref name="get" scoped="" ref="0x2b05272e5190"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272e6c48"/>
        <function-ref name="set" scoped="" ref="0x2b05272e5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b05272ca988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b05272ca988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272cacd8"/>
        <function-ref name="get" scoped="" ref="0x2b05272cae60"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272c9020"/>
        <function-ref name="set" scoped="" ref="0x2b05272c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b052729b020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b052729b020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052729b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b05272c82b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b05272c82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b05272c7910"/>
        <function-ref name="clear" scoped="" ref="0x2b05272c5020"/>
        <function-ref name="isValid" scoped="" ref="0x2b05272c7230"/>
        <function-ref name="set" scoped="" ref="0x2b05272c5700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b05272d9e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b05272d9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05272d81e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b05272d8370"/>
        <function-ref name="toggle" scoped="" ref="0x2b05272d84f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05272d8680"/>
        <function-ref name="get" scoped="" ref="0x2b05272d8808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05272d8990"/>
        <function-ref name="set" scoped="" ref="0x2b05272d8b18"/>
        <function-ref name="clr" scoped="" ref="0x2b05272d8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b05272c4ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b05272c4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b05272c4e08"/>
        <function-ref name="wait" scoped="" ref="0x2b05272c3020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05272c31a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b05272c3330"/>
        <function-ref name="getNow" scoped="" ref="0x2b05272c34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b052729b620" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b052729b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b052729b970"/>
        <function-ref name="turnOn" scoped="" ref="0x2b052729baf8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b052729bc80"/>
        <function-ref name="done" scoped="" ref="0x2b052729be08"/>
        <function-ref name="standby" scoped="" ref="0x2b052729a020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b052729a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b05272ce020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b05272ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05272ceba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0527298cd0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0527298cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272e7388"/>
        <function-ref name="get" scoped="" ref="0x2b0527297e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272978f0"/>
        <function-ref name="set" scoped="" ref="0x2b05272e7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0527299ca8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0527299ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527298020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05272981a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527298330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05272984b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527298640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05272987c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b05272d4d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b05272d4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05272d90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b05272d9228"/>
        <function-ref name="toggle" scoped="" ref="0x2b05272d93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05272d9538"/>
        <function-ref name="get" scoped="" ref="0x2b05272d96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05272d9848"/>
        <function-ref name="set" scoped="" ref="0x2b05272d99d0"/>
        <function-ref name="clr" scoped="" ref="0x2b05272d9b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b05272cb100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b05272cb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05272cb450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b05272cb5d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b05272cb760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b05272cb8e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b05272cba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b052729ad78" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b052729ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05272990f0"/>
        <function-ref name="header" scoped="" ref="0x2b0527299278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b0527385d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b0527385d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527384170"/>
        <function-ref name="runTask" scoped="" ref="0x2b05273842f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b05272e3458" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b05272e3458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272e2a40"/>
        <function-ref name="get" scoped="" ref="0x2b05272e2530"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272e2020"/>
        <function-ref name="set" scoped="" ref="0x2b05272e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b052729c450" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b052729c450"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b05260be6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052729c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b05272db4f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b05272db4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b05272db848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b05272db9d0"/>
        <function-ref name="request" scoped="" ref="0x2b05272dbb58"/>
        <function-ref name="granted" scoped="" ref="0x2b05272dbce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b05272dbe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b05272dc130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b05272dc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05272dc580"/>
        <function-ref name="isInput" scoped="" ref="0x2b05272dc708"/>
        <function-ref name="toggle" scoped="" ref="0x2b05272dc890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05272dca18"/>
        <function-ref name="get" scoped="" ref="0x2b05272dcba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05272dcd28"/>
        <function-ref name="set" scoped="" ref="0x2b05272db020"/>
        <function-ref name="clr" scoped="" ref="0x2b05272db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b05272e0860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b05272e0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272dfe30"/>
        <function-ref name="get" scoped="" ref="0x2b05272df920"/>
        <function-ref name="isSet" scoped="" ref="0x2b05272df410"/>
        <function-ref name="set" scoped="" ref="0x2b05272de388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b052729a450" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b052729a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052729a7a0"/>
        <function-ref name="ready" scoped="" ref="0x2b052729a928"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052729aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b05272cf5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b05272cf5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b05272cf938"/>
        <function-ref name="disable" scoped="" ref="0x2b05272cfac0"/>
        <function-ref name="captured" scoped="" ref="0x2b05272cfc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b05272cfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b05272d41f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b05272d41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b05272d4540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b05272d46c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b05272d4850"/>
        <function-ref name="write" scoped="" ref="0x2b05272d49d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b05272c9518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b05272c9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272c9868"/>
        <function-ref name="get" scoped="" ref="0x2b05272c99f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272c9b78"/>
        <function-ref name="set" scoped="" ref="0x2b05272c9d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b05272cbe10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b05272cbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05272ca1a8"/>
        <function-ref name="get" scoped="" ref="0x2b05272ca330"/>
        <function-ref name="setValue" scoped="" ref="0x2b05272ca4b8"/>
        <function-ref name="set" scoped="" ref="0x2b05272ca640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b05272de9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b05272de9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b05272ded20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b05272c4020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b05272c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b05272c4370"/>
        <function-ref name="suspend" scoped="" ref="0x2b05272c44f8"/>
        <function-ref name="resume" scoped="" ref="0x2b05272c4680"/>
        <function-ref name="run" scoped="" ref="0x2b05272c4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b0527396338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b0527396338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527396688"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527396810"/>
        <function-ref name="toggle" scoped="" ref="0x2b0527396998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527396b20"/>
        <function-ref name="get" scoped="" ref="0x2b0527396ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527396e30"/>
        <function-ref name="set" scoped="" ref="0x2b0527395020"/>
        <function-ref name="clr" scoped="" ref="0x2b05273951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b0527397140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b0527397140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0527397490"/>
        <function-ref name="isInput" scoped="" ref="0x2b0527397618"/>
        <function-ref name="toggle" scoped="" ref="0x2b05273977a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527397928"/>
        <function-ref name="get" scoped="" ref="0x2b0527397ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527397c38"/>
        <function-ref name="set" scoped="" ref="0x2b0527397dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b0527396020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b05273942e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b05273942e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527391928"/>
        <function-ref name="fired" scoped="" ref="0x2b05273939e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0527391320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527393e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0527391db0"/>
        <function-ref name="start" scoped="" ref="0x2b0527393088"/>
        <function-ref name="stop" scoped="" ref="0x2b0527393560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b0527399990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b0527399990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0527399ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0527399e68"/>
        <function-ref name="request" scoped="" ref="0x2b0527398020"/>
        <function-ref name="granted" scoped="" ref="0x2b05273981a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0527398330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b052739c710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b052739c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052739ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b052739cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052739cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0527399020"/>
        <function-ref name="get" scoped="" ref="0x2b05273991a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0527399330"/>
        <function-ref name="set" scoped="" ref="0x2b05273994b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0527399640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b05273954c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b05273954c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b0527395810"/>
        <function-ref name="disable" scoped="" ref="0x2b0527395998"/>
        <function-ref name="captured" scoped="" ref="0x2b0527395b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b0527395ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b05273985e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273985e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b0527398938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b0527398ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b0527398c48"/>
        <function-ref name="write" scoped="" ref="0x2b0527398dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0527390438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0527390438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0526256140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052738f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b05273dd830" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b05273dd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05273ddb80"/>
        <function-ref name="isInput" scoped="" ref="0x2b05273ddd08"/>
        <function-ref name="toggle" scoped="" ref="0x2b05273dc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05273dc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b05273dc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05273dc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b05273dc640"/>
        <function-ref name="clr" scoped="" ref="0x2b05273dc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b05273e1190" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b05273e1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b05273dd310"/>
        <function-ref name="test" scoped="" ref="0x2b05273de998"/>
        <function-ref name="get" scoped="" ref="0x2b05273e1d10"/>
        <function-ref name="captured" scoped="" ref="0x2b05273df6d0"/>
        <function-ref name="reset" scoped="" ref="0x2b05273dfba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b05273dee20"/>
        <function-ref name="set" scoped="" ref="0x2b05273df1f8"/>
        <function-ref name="start" scoped="" ref="0x2b05273de088"/>
        <function-ref name="stop" scoped="" ref="0x2b05273de510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b05273dcaf8" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b05273dcaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b05273dce48"/>
        <function-ref name="isInput" scoped="" ref="0x2b05273db020"/>
        <function-ref name="toggle" scoped="" ref="0x2b05273db1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b05273db330"/>
        <function-ref name="get" scoped="" ref="0x2b05273db4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b05273db640"/>
        <function-ref name="set" scoped="" ref="0x2b05273db7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b05273db950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b05273e2870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b05273e2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05273e2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b052738fcd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b052738fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b05273e20a0"/>
        <function-ref name="disable" scoped="" ref="0x2b05273e2228"/>
        <function-ref name="captured" scoped="" ref="0x2b05273e23b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b05273e2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b05273c2c20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b05273c2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05273c9020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05273c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b05273cb020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b05273cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b05273cb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05273e39d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05273e39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05273e3d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b05273cb668" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273cb668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b05273cb9b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b05273cbb40"/>
        <function-ref name="splitRead" scoped="" ref="0x2b05273cbcc8"/>
        <function-ref name="write" scoped="" ref="0x2b05273cbe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b05273c9978" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b05273c9978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b05273c9cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b05273c9e50"/>
        <function-ref name="request" scoped="" ref="0x2b05273c8020"/>
        <function-ref name="granted" scoped="" ref="0x2b05273c81a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b05273c8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b052742bb58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b052742bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b052742a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b052742a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b05273bd020" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b05273bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05273bd370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05273bd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b05273f5208" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b05273f5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b05273f5558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b05273f56e0"/>
        <function-ref name="request" scoped="" ref="0x2b05273f5868"/>
        <function-ref name="granted" scoped="" ref="0x2b05273f59f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b05273f5b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b05273bfd80" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b05273bfd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b05273be170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05273bf7a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05273bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05273bfaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b05273ba020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b05273ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b05273ba370"/>
        <function-ref name="sleep" scoped="" ref="0x2b05273f67c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b05273ba680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b05273f6950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b05273ba990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b05273bab18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b05273baca0"/>
        <function-ref name="read" scoped="" ref="0x2b05273bae28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b052740f020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b052740f1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b052740f330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b052740f4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b052740f640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b052740f8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b052740fa50"/>
        <function-ref name="write" scoped="" ref="0x2b052740fbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b052740fd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b05273f6020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b05273f61a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b05273f6330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b05273f64b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b05273ba4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b05273ba808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b05273f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b05273be428" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b05273be428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b05273be778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b05273be900"/>
        <function-ref name="splitRead" scoped="" ref="0x2b05273bea88"/>
        <function-ref name="write" scoped="" ref="0x2b05273bec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b05273bdc88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b05273bdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b05273bc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b05273bc1a8"/>
        <function-ref name="request" scoped="" ref="0x2b05273bc330"/>
        <function-ref name="granted" scoped="" ref="0x2b05273bc4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b05273bc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b05273f5e30" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b05273f5e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b05273f41a8"/>
        <function-ref name="userId" scoped="" ref="0x2b05273f4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b05273f4600" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b05273f4600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b05273f4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b0527458020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b0527458020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b0527458370"/>
        <function-ref name="sleep" scoped="" ref="0x2b05274567c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b0527458680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0527456950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b0527458990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b0527458b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0527458ca0"/>
        <function-ref name="read" scoped="" ref="0x2b0527458e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b0527457020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b05274571a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b0527457330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b05274574b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b0527457640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b05274578c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b0527457a50"/>
        <function-ref name="write" scoped="" ref="0x2b0527457bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b0527457d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b0527456020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b05274561a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b0527456330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b05274564b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b05274584f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b0527458808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b0527456640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b052744a190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b052744a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052744a4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b052744a668"/>
        <function-ref name="toggle" scoped="" ref="0x2b052744a7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052744a978"/>
        <function-ref name="get" scoped="" ref="0x2b052744ab00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052744ac88"/>
        <function-ref name="set" scoped="" ref="0x2b052744ae10"/>
        <function-ref name="clr" scoped="" ref="0x2b0527449020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b052744fde0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b052744fde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052744e170"/>
        <function-ref name="isInput" scoped="" ref="0x2b052744e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052744e480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052744e608"/>
        <function-ref name="get" scoped="" ref="0x2b052744e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052744e918"/>
        <function-ref name="set" scoped="" ref="0x2b052744eaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b052744ec28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b052744cc70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b052744cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052744f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b052744f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052744f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052744f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b052744f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052744f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b052744f950"/>
        <function-ref name="clr" scoped="" ref="0x2b052744fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b052744c438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b052744c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b052744c788"/>
        <function-ref name="stop" scoped="" ref="0x2b052744c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b0527449350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b0527449350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b05274496a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b0527455dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b0527455dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b0527452170"/>
        <function-ref name="sleep" scoped="" ref="0x2b0527450640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b0527452480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b05274507c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b0527452790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b0527452918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0527452aa0"/>
        <function-ref name="read" scoped="" ref="0x2b0527452c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b0527452db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0527451020"/>
        <function-ref name="setClock" scoped="" ref="0x2b05274511a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0527451330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b05274514b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b0527451740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b05274518c8"/>
        <function-ref name="write" scoped="" ref="0x2b0527451a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b0527451bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b0527451d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b0527450020"/>
        <function-ref name="getClock" scoped="" ref="0x2b05274501a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0527450330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b05274522f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b0527452608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b05274504b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b052744b020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b052744b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b052744b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b052744b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b052744b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b052744b808"/>
        <function-ref name="get" scoped="" ref="0x2b052744b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b052744bb18"/>
        <function-ref name="set" scoped="" ref="0x2b052744bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b052744be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b05274b2510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b05274b2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b05274b2880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b05274b2a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b05274b0550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b05274b0550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b05274b08c0"/>
        <function-ref name="configure" scoped="" ref="0x2b05274b0a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b05274b3748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b05274b3748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b05274b3ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b05274b3c40"/>
        <function-ref name="request" scoped="" ref="0x2b05274b3dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b05274b2020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b05274b21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b05274b2c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b05274b2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b05274b0020"/>
        <function-ref name="userId" scoped="" ref="0x2b05274b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527fd27b0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527fd27b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527fd2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b0527fd2d88" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b0527fd2d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0527fd0170"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0527fd02f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0527fd0480"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0527fd0608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0527fce9a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0527fce9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0527fced18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0527fcd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0527fcdb08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0527fcdb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0527fcde78"/>
        <function-ref name="configure" scoped="" ref="0x2b0527fcc030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0527fcc2b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0527fcc2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0527fcc608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0527fcc790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0527fcc918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0527fccaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0527fcfb80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0527fcfb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0527fce020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0527fce1a8"/>
        <function-ref name="request" scoped="" ref="0x2b0527fce330"/>
        <function-ref name="granted" scoped="" ref="0x2b0527fce4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0527fce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0527fcd268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0527fcd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0527fcd5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b0527fcd740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0527fccd68" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0527fccd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0527fcb0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0527fcb278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b05274a1838" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b05274a1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b05274a1b88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b05274a1d10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b05274a0020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b05274a01a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b05274a0330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b05274a04b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b05274a0640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b05274a07c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b05274a0950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b05274a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b052749f020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b052749f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b052749b270"/>
        <function-ref name="test" scoped="" ref="0x2b052749d930"/>
        <function-ref name="get" scoped="" ref="0x2b052749fba0"/>
        <function-ref name="captured" scoped="" ref="0x2b052749e560"/>
        <function-ref name="reset" scoped="" ref="0x2b052749ea38"/>
        <function-ref name="isOn" scoped="" ref="0x2b052749ddb8"/>
        <function-ref name="set" scoped="" ref="0x2b052749e088"/>
        <function-ref name="start" scoped="" ref="0x2b052749d020"/>
        <function-ref name="stop" scoped="" ref="0x2b052749d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b052749be18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b052749be18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0527497798"/>
        <function-ref name="fired" scoped="" ref="0x2b05274994f8"/>
        <function-ref name="get" scoped="" ref="0x2b052749aa18"/>
        <function-ref name="reset" scoped="" ref="0x2b0527499980"/>
        <function-ref name="isOn" scoped="" ref="0x2b0527497c20"/>
        <function-ref name="set" scoped="" ref="0x2b0527499020"/>
        <function-ref name="start" scoped="" ref="0x2b0527499e08"/>
        <function-ref name="stop" scoped="" ref="0x2b0527497310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b05274a86e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b05274a86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b05274a3930"/>
        <function-ref name="test" scoped="" ref="0x2b05274a3020"/>
        <function-ref name="get" scoped="" ref="0x2b05274a53a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b05274a3db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b05274a12f0"/>
        <function-ref name="reset" scoped="" ref="0x2b05274a41f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b05274a5d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274a34a8"/>
        <function-ref name="set" scoped="" ref="0x2b05274a5830"/>
        <function-ref name="start" scoped="" ref="0x2b05274a4680"/>
        <function-ref name="stop" scoped="" ref="0x2b05274a4b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b05274e8160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b05274e8160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b05274e84b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b05274e8638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b05274e87c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b05274e8948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b05274e8ad0"/>
        <function-ref name="setControlB" scoped="" ref="0x2b05274e8c58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b05274e8de0"/>
        <function-ref name="getControlB" scoped="" ref="0x2b05274e7020"/>
        <function-ref name="setControlC" scoped="" ref="0x2b05274e71a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b05274e7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b05274e1020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b05274e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b05274df7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b05274e0560"/>
        <function-ref name="get" scoped="" ref="0x2b05274e1ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b05274e09e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274dfc30"/>
        <function-ref name="set" scoped="" ref="0x2b05274e0088"/>
        <function-ref name="start" scoped="" ref="0x2b05274e0e70"/>
        <function-ref name="stop" scoped="" ref="0x2b05274df320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b05274e7808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b05274e7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b05274e3930"/>
        <function-ref name="test" scoped="" ref="0x2b05274e3020"/>
        <function-ref name="get" scoped="" ref="0x2b05274e53c8"/>
        <function-ref name="captured" scoped="" ref="0x2b05274e5d28"/>
        <function-ref name="reset" scoped="" ref="0x2b05274e4238"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274e34a8"/>
        <function-ref name="set" scoped="" ref="0x2b05274e5850"/>
        <function-ref name="start" scoped="" ref="0x2b05274e46c0"/>
        <function-ref name="stop" scoped="" ref="0x2b05274e4b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b05274de360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b05274de360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b05274dbc20"/>
        <function-ref name="fired" scoped="" ref="0x2b05274dc980"/>
        <function-ref name="get" scoped="" ref="0x2b05274dc020"/>
        <function-ref name="reset" scoped="" ref="0x2b05274dce08"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274da0f8"/>
        <function-ref name="set" scoped="" ref="0x2b05274dc4a8"/>
        <function-ref name="start" scoped="" ref="0x2b05274db310"/>
        <function-ref name="stop" scoped="" ref="0x2b05274db798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b05274da770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b05274da770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b05274d6020"/>
        <function-ref name="fired" scoped="" ref="0x2b05274d9d08"/>
        <function-ref name="get" scoped="" ref="0x2b05274d93a8"/>
        <function-ref name="reset" scoped="" ref="0x2b05274d71f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274d64a8"/>
        <function-ref name="set" scoped="" ref="0x2b05274d9830"/>
        <function-ref name="start" scoped="" ref="0x2b05274d7680"/>
        <function-ref name="stop" scoped="" ref="0x2b05274d7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b05274ed180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b05274ed180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b05274e9270"/>
        <function-ref name="test" scoped="" ref="0x2b05274ea930"/>
        <function-ref name="get" scoped="" ref="0x2b05274edd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b05274e96f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b05274e9bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b05274ebb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b05274eb6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b05274eadb8"/>
        <function-ref name="set" scoped="" ref="0x2b05274eb1f8"/>
        <function-ref name="start" scoped="" ref="0x2b05274ea020"/>
        <function-ref name="stop" scoped="" ref="0x2b05274ea4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b052758a6f0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b052758a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527587020"/>
        <function-ref name="fired" scoped="" ref="0x2b0527588020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0527588930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05275884a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b05275874a8"/>
        <function-ref name="start" scoped="" ref="0x2b0527589578"/>
        <function-ref name="stop" scoped="" ref="0x2b0527589a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b052756a770" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b052756a770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b05260be388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b05260be388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052756aac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0527569020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0527569020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b05275650f8"/>
        <function-ref name="test" scoped="" ref="0x2b05275667a8"/>
        <function-ref name="get" scoped="" ref="0x2b0527569ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b0527565580"/>
        <function-ref name="getScale" scoped="" ref="0x2b0527565a58"/>
        <function-ref name="reset" scoped="" ref="0x2b05275679e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0527567560"/>
        <function-ref name="isOn" scoped="" ref="0x2b0527566c30"/>
        <function-ref name="set" scoped="" ref="0x2b0527567088"/>
        <function-ref name="start" scoped="" ref="0x2b0527567e70"/>
        <function-ref name="stop" scoped="" ref="0x2b0527566320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b052802dbc8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b052802dbc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b05260be020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b05260be020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b052802a270"/>
        <function-ref name="fired" scoped="" ref="0x2b052802b310"/>
        <function-ref name="startAt" scoped="" ref="0x2b052802bc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b052802b798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b052802a6f8"/>
        <function-ref name="start" scoped="" ref="0x2b052802c948"/>
        <function-ref name="stop" scoped="" ref="0x2b052802ce20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b0528025c68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b0528025c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b05280214a8"/>
        <function-ref name="fired" scoped="" ref="0x2b05280221d0"/>
        <function-ref name="get" scoped="" ref="0x2b0528024820"/>
        <function-ref name="reset" scoped="" ref="0x2b0528022658"/>
        <function-ref name="isOn" scoped="" ref="0x2b0528021930"/>
        <function-ref name="set" scoped="" ref="0x2b0528024ca8"/>
        <function-ref name="start" scoped="" ref="0x2b0528022ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b0528021020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b052802ac18" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b052802ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0528026db8"/>
        <function-ref name="test" scoped="" ref="0x2b05280264a8"/>
        <function-ref name="get" scoped="" ref="0x2b0528029820"/>
        <function-ref name="setScale" scoped="" ref="0x2b0528025270"/>
        <function-ref name="getScale" scoped="" ref="0x2b0528025748"/>
        <function-ref name="reset" scoped="" ref="0x2b0528027658"/>
        <function-ref name="overflow" scoped="" ref="0x2b05280271d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0528026930"/>
        <function-ref name="set" scoped="" ref="0x2b0528029ca8"/>
        <function-ref name="start" scoped="" ref="0x2b0528027ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b0528026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0527583208" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0527583208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527583d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b052757e020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b052757e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052757ed70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b052757d6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b052757d230"/>
        <function-ref name="overflow" scoped="" ref="0x2b052757db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b052757bb90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b052757bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TOne" ref="0x2b05261909f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527579930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0527578270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0527579db8"/>
        <function-ref name="overflow" scoped="" ref="0x2b05275786f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0527578c58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0527578c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b05275d1db8"/>
        <function-ref name="test" scoped="" ref="0x2b05275d14a8"/>
        <function-ref name="get" scoped="" ref="0x2b0527577820"/>
        <function-ref name="setScale" scoped="" ref="0x2b05275d0270"/>
        <function-ref name="getScale" scoped="" ref="0x2b05275d0748"/>
        <function-ref name="reset" scoped="" ref="0x2b05275d2658"/>
        <function-ref name="overflow" scoped="" ref="0x2b05275d21d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b05275d1930"/>
        <function-ref name="set" scoped="" ref="0x2b0527577ca8"/>
        <function-ref name="start" scoped="" ref="0x2b05275d2ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b05275d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b05275c97f8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b05275c97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05275c8578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b05275c7020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b05275c8a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b05275c74a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b05275cc5a8" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b05275cc5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05275cb3a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b05275cbcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b05275cb830"/>
        <function-ref name="overflow" scoped="" ref="0x2b05275c9190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b05275c4020" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b05275c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05275c4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b05275c3230" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b05275c3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05275c2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b05275c2930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b05275c24a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b05275c2db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b05275bb7d0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b05275bb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614b430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b052614b788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b05275b7578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b05275a6e78" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b05275a6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276031f8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527603380"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527603508"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0527603690"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0527603818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b0527602428" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0527602428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527602778"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0527602900"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0527602a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0527602c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0527602d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b05276220b8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b05276220b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527622408"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527622590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527622718"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276228a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527622a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b0527617400" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0527617400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527617750"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05276178d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527617a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527617be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527617d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b052761fba0" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b052761fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b052761a728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b0527624cd8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b0527624cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05276230a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527623228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276233b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527623538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05276236c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoDissemination" ref="0x2b052761b300" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b052761b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b052761b650"/>
        <function-ref name="version" scoped="" ref="0x2b052761b7d8"/>
        <function-ref name="update" scoped="" ref="0x2b052761b960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b0527616130" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b0527616130"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527616580"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527616708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527616890"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527616a18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527616ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b0527613bb8" loc="76:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0527613bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527612760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b0527622d58" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b0527622d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05276210d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527621260"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276213e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527621570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05276216f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b0527624020" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b0527624020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527624370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276244f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527624680"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527624808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527624990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b0527618020" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0527618020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527618370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276184f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527618680"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527618808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527618990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b05276156c0" loc="68:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b05276156c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527615a10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527615b98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527615d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527614020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05276141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b0527623a20" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b0527623a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527623d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b0527627890" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b0527627890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527627be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b0527618d08" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0527618d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05276170a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b052761be70" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b052761be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b052761f4f0"/>
        <function-ref name="get" scoped="" ref="0x2b0527620a18"/>
        <function-ref name="set" scoped="" ref="0x2b052761f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b0527615020" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b0527615020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527615370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b0527614488" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0527614488"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b05276147d8"/>
        <function-ref name="source" scoped="" ref="0x2b0527614960"/>
        <function-ref name="address" scoped="" ref="0x2b0527614ae8"/>
        <function-ref name="destination" scoped="" ref="0x2b0527614c70"/>
        <function-ref name="setSource" scoped="" ref="0x2b0527614df8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0527613020"/>
        <function-ref name="type" scoped="" ref="0x2b05276131a8"/>
        <function-ref name="setType" scoped="" ref="0x2b0527613330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b05276134b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0527613640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b05276137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b052760dd00" loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b052760dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052760c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052760c228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052760c3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b052760c538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052760c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationStatistics" ref="0x2b0527666720" loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b0527666720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b0526bd8cc0"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b0526bd8808"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527665370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b0527663d58" loc="32:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b0527663d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05276621e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527662370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276624f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527662680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527662808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b0527667188" loc="22:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b0527667188"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b0527667cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b052760e988" loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b052760e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052760ecd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052760ee60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052760d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052760d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052760d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b052765e410" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b052765e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052765d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b0527662b60" loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b0527662b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527661020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276611a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527661330"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276614b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527661640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b052760c9f0" loc="16:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b052760c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052760cd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052760b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052760b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052760b330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052760b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b0527611c10" loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b0527611c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052760e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052760e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052760e330"/>
        <function-ref name="cancel" scoped="" ref="0x2b052760e4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052760e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b05276658f0" loc="30:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b05276658f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527665c40"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527665dc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527663020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276631a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527663330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dissemination" ref="0x2b052760b8b8" loc="19:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b052760b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b052760bc08"/>
        <function-ref name="version" scoped="" ref="0x2b052760bd90"/>
        <function-ref name="update" scoped="" ref="0x2b052760a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b0527660060" loc="37:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b0527660060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05276603b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527660538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276606c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527660848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05276609d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b052760d690" loc="14:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b052760d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052760d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b0527611590" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b0527611590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05276118e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b05276636a8" loc="31:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b05276636a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05276639f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b052760a530" loc="21:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b052760a530"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b0527669a50"/>
        <function-ref name="get" scoped="" ref="0x2b05276690f8"/>
        <function-ref name="set" scoped="" ref="0x2b0527669580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b05276619a0" loc="36:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b05276619a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527661cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b0527660c90" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0527660c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b052765f020"/>
        <function-ref name="source" scoped="" ref="0x2b052765f1a8"/>
        <function-ref name="address" scoped="" ref="0x2b052765f330"/>
        <function-ref name="destination" scoped="" ref="0x2b052765f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b052765f640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b052765f7c8"/>
        <function-ref name="type" scoped="" ref="0x2b052765f950"/>
        <function-ref name="setType" scoped="" ref="0x2b052765fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b052765fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b052765fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b052765e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b05276c6248" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b05276c6248"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b05276c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b05276f2e68" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b05276f2e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b05276f11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b05276f4530" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b05276f4530"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b05276f2a50"/>
        <function-ref name="get" scoped="" ref="0x2b05276f20f8"/>
        <function-ref name="set" scoped="" ref="0x2b05276f2580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b052807b9e8" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b052807b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b052807a560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dissemination" ref="0x2b0528077c48" loc="8:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b0528077c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b0528076020"/>
        <function-ref name="version" scoped="" ref="0x2b05280761a8"/>
        <function-ref name="update" scoped="" ref="0x2b0528076330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b05280766c0" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b05280766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05280743a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b0528077610" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b0528077610"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0528077960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b052807acb8" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b052807acb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b05261cdc80"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b05261cbb78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b05280771f8"/>
        <function-ref name="get" scoped="" ref="0x2b0528078870"/>
        <function-ref name="set" scoped="" ref="0x2b0528078cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="valueChangedTask" ref="0x2b0528074800" loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="valueChangedTask" scoped="" ref="0x2b0528074800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0528074b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b0528074cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b05276e39d8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b05276e39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b05276e3d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendData" ref="0x2b05276e4b48" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendData" scoped="" ref="0x2b05276e4b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05276e3020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276e31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276e3330"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276e34b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05276e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendData" ref="0x2b05276e7d80" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x2b05276e7d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05276e4170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276e42f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276e4480"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276e4608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05276e4790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b05276df6d8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b05276df6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05276dfa28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276dfbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276dfd38"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276de020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05276de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b05276e28e8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b05276e28e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05276e2c38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276e2dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276df020"/>
        <function-ref name="cancel" scoped="" ref="0x2b05276df1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05276df330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b05276dea98" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b05276dea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b05276dede8"/>
        <function-ref name="rand32" scoped="" ref="0x2b05276dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneTask" ref="0x2b05276d3778" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneTask" scoped="" ref="0x2b05276d3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b05276d3ac8"/>
        <function-ref name="runTask" scoped="" ref="0x2b05276d3c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoBackoffConfig" ref="0x2b05276de4c0" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b05276de4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b05276de810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b05276dc460" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b05276dc460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05276d96c8"/>
        <function-ref name="fired" scoped="" ref="0x2b05276dbdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b05276daad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b05276da688"/>
        <function-ref name="getdt" scoped="" ref="0x2b05276d7020"/>
        <function-ref name="gett0" scoped="" ref="0x2b05276d9b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05276da238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b05276db020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b05276d90f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b05276db4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b05276db960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b0527718080" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0527718080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b05277183d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b0527718558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b052771b020" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b052771b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052771bb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b052771c2b0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b052771c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052771c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b0527713020" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0527713020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0527713370"/>
        <function-ref name="rand32" scoped="" ref="0x2b05277134f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b0527715e48" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b0527715e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b05277149e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b05277155f0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b05277155f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527715940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b052771d6e0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoForwardLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b052771d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527704a18"/>
        <function-ref name="fired" scoped="" ref="0x2b0527706158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0527706e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b05277069f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b05277032e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0527704e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b05277065a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0527716370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0527704448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0527716810"/>
        <function-ref name="stop" scoped="" ref="0x2b0527716cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b052775c060" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b052775c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052775c3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0527701658" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0527701658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b05277019a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527701b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527701cb8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527701e40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05276fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b05276fe888" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05276fe888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05276febd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05276fed60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05276fd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05276fd1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05276fd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b05276fd818" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b05276fd818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b05276fc868"/>
        <function-ref name="init" scoped="" ref="0x2b05276fc390"/>
        <function-ref name="creationTime" scoped="" ref="0x2b05276fcd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSubSend" ref="0x2b052775d358" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSubSend" scoped="" ref="0x2b052775d358"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b052775d6a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052775d830"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052775d9b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b052775db40"/>
        <function-ref name="sendDone" scoped="" ref="0x2b052775dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b052775c6d8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b052775c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b052775ca28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b052775cbb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b052775cd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b052775b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b052775b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05276fe2b0" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05276fe2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05276fe600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b0527754ab8" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b0527754ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527754e08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527753020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05277531a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527753330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b05277534b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b05277537f0" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b05277537f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527753b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b052775bd90" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b052775bd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0527758170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05277582f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527758480"/>
        <function-ref name="cancel" scoped="" ref="0x2b0527758608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0527758790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0527757020" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0527757020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527757370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05277574f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527757680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527757808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527757990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b0527757e78" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0527757e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0527754020"/>
        <function-ref name="init" scoped="" ref="0x2b05277569f0"/>
        <function-ref name="creationTime" scoped="" ref="0x2b05277544f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0527753e68" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0527753e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05277521e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0527752370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05277524f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0527752680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527752808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0527758a20" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0527758a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0527758d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b0527752cc8" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0527752cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0527751870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0527784228" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoRadioC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0527784228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05277805f0"/>
        <function-ref name="fired" scoped="" ref="0x2b0527783b28"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b05277818c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0527781470"/>
        <function-ref name="getdt" scoped="" ref="0x2b052777f020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0527780a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527781020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0527784d70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0527780020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0527783238"/>
        <function-ref name="stop" scoped="" ref="0x2b05277836d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b052777e750" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <component-ref qname="OrinocoConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b052777e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b052777eaa0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b052777ec28"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b052777edb0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b052777b020"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b052777b1a8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b052777b330"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b052777b4b8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b052777b640"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b052777b7c8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b052777b950"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b052777bad8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b052777bc60"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b052777bde8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b052777a120"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b052777a2a8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b052777a430"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b052777a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0527777130" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0527777130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0527777480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b0527777750" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0527777750"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b0527777aa0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0527777c28"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b0527777db0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0527776020"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b05277761a8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b0527776330"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b05277764b8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0527776640"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b05277767c8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0527776950"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0527776ad8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0527776c60"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0527776de8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0527775120"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b05277752a8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0527775430"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b05277755b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b05277a1df8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b05277a1df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b052779e170"/>
        <function-ref name="setRoot" scoped="" ref="0x2b052779e2f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b052779e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b05277a1460" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b05277a1460"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b05277a17b0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b05277a1938"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b05277a1ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b052779baf0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b052779baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b052779be40"/>
        <function-ref name="setRoot" scoped="" ref="0x2b052779a020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b052779a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b052779b158" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b052779b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b052779b4a8"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b052779b630"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b052779b7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b052779a4a8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b052779a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b052779a7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b05277f46e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="OrinocoP.SendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b05277f46e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b05262a1358"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b05262a16b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b05277da088"/>
        <function-ref name="enqueue" scoped="" ref="0x2b05277dad48"/>
        <function-ref name="element" scoped="" ref="0x2b05277d83a8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b05277dbc10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b05277da6e8"/>
        <function-ref name="empty" scoped="" ref="0x2b05277db370"/>
        <function-ref name="size" scoped="" ref="0x2b05277db7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b05277d5478" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="OrinocoP.MsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b05277d5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
            <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05278163e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b05278178c0"/>
        <function-ref name="empty" scoped="" ref="0x2b0527817020"/>
        <function-ref name="put" scoped="" ref="0x2b0527817d10"/>
        <function-ref name="size" scoped="" ref="0x2b0527817470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b052804a6c0" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b052804a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
            <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0528048730"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0528049c10"/>
        <function-ref name="empty" scoped="" ref="0x2b0528049370"/>
        <function-ref name="put" scoped="" ref="0x2b0528048088"/>
        <function-ref name="size" scoped="" ref="0x2b05280497c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b052804a020" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b052804a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b052804a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2b0527813d78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2b0527813d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526291500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b05262919b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b05278128f0"/>
        <function-ref name="flush" scoped="" ref="0x2b0527802278"/>
        <function-ref name="lookup" scoped="" ref="0x2b0527812d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CacheCompare" ref="0x2b05278027b8" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b05278027b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526291500"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b05262919b8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b0527800370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b05277fcd78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b05277fcd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b05277fb0f0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b05277fb278"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b05277fb400"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b05277fb588"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b05277fb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b05277fc060" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b05277fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b05277fc3b0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b05277fc538"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b05277fc6c0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b05277fc848"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b05277fc9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b052785e240" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b052785e240"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b052785e590"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b052785e718"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b052785e8a0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b052785ea28"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b052785ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b052785c490" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b052785c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b052785a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PktRateJobConfig" ref="0x2b052785dc58" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b052785dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b052785c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PktRateJob" ref="0x2b0527856700" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJob" scoped="" ref="0x2b0527856700"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0527856a50"/>
        <function-ref name="done" scoped="" ref="0x2b0527856bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b052785f500" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b052785f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b052785f850"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b052785f9d8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b052785fb60"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b052785fce8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b052785fe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b052782fc80" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b052782fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b052782f4c0" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b052782f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b052782f810"/>
        <function-ref name="done" scoped="" ref="0x2b052782f998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b052788b3a0" loc="42:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b052788b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b052788b6f0"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b052788b878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b052788e030" loc="43:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b052788e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="jobid_t" ref="0x2b05277f92f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b052788e380"/>
        <function-ref name="done" scoped="" ref="0x2b052788e508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchTimer" ref="0x2b0527887bb0" loc="50:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DispatchTimer" scoped="" ref="0x2b0527887bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0527884dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b0527885510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0527884238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0527885db0"/>
        <function-ref name="getdt" scoped="" ref="0x2b05278826c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0527882278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527885960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0527886728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0527884808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0527886bc8"/>
        <function-ref name="stop" scoped="" ref="0x2b05278850c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b0527888420" loc="46:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b0527888420"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b0527888770"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b05278888f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dispatch" ref="0x2b052787bbe0" loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dispatch" scoped="" ref="0x2b052787bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b052787a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b052787a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b05278871c8" loc="47:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b05278871c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0527887518"/>
        <function-ref name="done" scoped="" ref="0x2b05278876a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b05278628d8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="EASchedulerC.DispatchTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b05278628d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b052614d020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b052614d378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b05278c7bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0527860238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b05278c7020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0527860ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b05278c64d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b05278c6088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0527860688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0527861458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b05278c75f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b05278618f8"/>
        <function-ref name="stop" scoped="" ref="0x2b0527861d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b05278c2530" loc="42:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <component-ref qname="EAEnergyManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278c2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278c2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b05278c1788" loc="44:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b05278c1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b05278c1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b05278be2e8" loc="45:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b05278be2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278be638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAScheduler" ref="0x2b05278be8f0" loc="46:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b05278be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b05278bec40"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b05278bedc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b05278b29c0" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278b29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278b2d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b05278b1020" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b05278b1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b052789bc58" loc="45:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b052789bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0527898020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05278981a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0527898330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05278984b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0527898640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b052789b600" loc="42:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b052789b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b052789b950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b05278ff6d8" loc="47:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05278ff6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05278ffa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05278ffbb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05278ffd38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05278fe020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05278fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b05278fed00" loc="49:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b05278fed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b05278fc0a0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b05278fc228"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b05278fc3b0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b05278fc538"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b05278fc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05278ff080" loc="44:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05278ff080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05278ff3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b05278fe428" loc="48:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b05278fe428"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b05278fe778"/>
        <function-ref name="done" scoped="" ref="0x2b05278fe900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b0527896d00" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0527896d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278f30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b0527896540" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b0527896540"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0527896890"/>
        <function-ref name="done" scoped="" ref="0x2b0527896a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b05278f2838" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278f2838"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278f2b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b05278f2e70" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278f2e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b05278f11e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b05278f0758" loc="42:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278f0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b05278f0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b05278ecdf0" loc="45:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05278ecdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05278e9170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05278e92f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05278e9480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05278e9608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05278e9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05278ec798" loc="42:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05278ec798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05278ecae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b05278e7af8" loc="47:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b05278e7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b05278e7e48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b05278e4020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b05278e41a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b05278e4330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b05278e44b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStats" ref="0x2b05278e31f8" loc="49:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStats" scoped="" ref="0x2b05278e31f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b0526bdd428"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0526bdd020"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05278e3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b05278e74a0" loc="44:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b05278e74a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b05278e77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketStats" ref="0x2b05278e24a0" loc="50:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStats" scoped="" ref="0x2b05278e24a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b0526bdaca0"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b0526bda318"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05278e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DissStats" ref="0x2b05278e1788" loc="51:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissStats" scoped="" ref="0x2b05278e1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b0526bd8cc0"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b0526bd8808"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b05278e0370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b05278e4738" loc="48:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b05278e4738"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b05278e4a88"/>
        <function-ref name="done" scoped="" ref="0x2b05278e4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b05278e58e0" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278e5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b05278e5120" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b05278e5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b05278e5470"/>
        <function-ref name="done" scoped="" ref="0x2b05278e55f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b05278cd598" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278cd598"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b05278cd8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b05278cdbd0" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b05278cdbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b05278cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b05278cb560" loc="44:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b05278cb560"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b05278cb8b0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2b05262b6b80" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2b05262ace08" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2b05262b64f8" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoConfig" loc="42:../../../Orinoco/interfaces/OrinocoConfig.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <short>&#10; Orinoco Configuration&#10;&#10; </short>
        <long>&#10; Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getQueueLocalReserve" ref="0x2b05262ce9e0" loc="90:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpInterval" ref="0x2b05262c5378" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Ts" ref="0x2b05262c5108" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueueLocalReserve" ref="0x2b05262ce290" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x2b05262ce020" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMaxDwellTime" ref="0x2b05262c1d80" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b05262c1b10" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinQueueSize" ref="0x2b05262cf020" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b05262bfcd0" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBackoffTime" ref="0x2b05262cdad0" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bo" ref="0x2b05262cd860" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpDeviation" ref="0x2b05262c4be8" loc="56:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinDwellTime" ref="0x2b05262c3ca8" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b05262c3a38" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxDwellTime" ref="0x2b05262c04f8" loc="72:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpDeviation" ref="0x2b05262c44b0" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="alpha" ref="0x2b05262c4240" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbsWakeUpDeviation" ref="0x2b05262c33a0" loc="60:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinQueueSize" ref="0x2b05262cf738" loc="84:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumWaitingIntervals" ref="0x2b05262bf5f8" loc="78:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinDwellTime" ref="0x2b05262c1478" loc="66:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpInterval" ref="0x2b05262c5ab8" loc="47:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNumWaitingIntervals" ref="0x2b05262c0e40" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b05262c0bd0" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBackoffTime" ref="0x2b05262cd178" loc="93:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b05262e4020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e6a20" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2b05262e6d48" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2b05262e82a0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262eabb8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b05262e8020" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b05262e7920" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e7348" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2b05262e76a0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2b05262ea520" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262ea2b0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b05262e6338" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e60c8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2b05262e8c28" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2b0526296470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e89b8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b052629c2a8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b05262fb5d8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b05262fb5d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b05262fbe68" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b05262dca00" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
              <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262dc100" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b05262dc428" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05262dc738" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b05262bb030" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b05262bdd90" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b05262ba430" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b05262ba1c0" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b05262bd418" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b05262bb818" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b05262d3838" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262d35c8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b05262d1830" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262d15c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b05262d0948" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262d0380" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05262d0690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b05262e0ab8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b05262e1bd0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e1640" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05262e1950" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketDelay" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/PacketDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b05262ee020" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
          <interfacedef-ref qname="PacketDelay"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b05262ee020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="delay" ref="0x2b05262ec4e8" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="46:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; @return packet delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262ec278" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b05262eeaa0" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/PacketDelay.nc">
          <short>&#10; Initialize packet delay tracking by stamping packet with current time&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262ee830" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="creationTime" ref="0x2b05262eb020" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="54:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; </short>
          <long> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; @return locale time, at which the packet was created at its origin&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262ecd00" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b05262b8020" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b05262b87c0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b0526305070" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b05263057a8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b0526303020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b0526303e70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b0526301480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0526301c18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b0526303738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526300768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b05263004f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b05262f4900" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b0526302608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b0526302d20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueSend" loc="48:../../../Orinoco/interfaces/QueueSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b05262e2c40" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="50:../../../Orinoco/interfaces/QueueSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; messages was successfully stored in the sending queue and will&#10; be eventually sent/forwarded.&#10; There is no event signaled after packet sending.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted, EBUSY if&#10;                  the component cannot accept the request now but&#10;                  will be able to later, FAIL if the stack is in&#10;                  a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262e26b0" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05262e29c0" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b05262f2c18" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="81:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05262f2650" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05262f2960" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b05262f3db0" loc="78:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="68:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b052629b3b0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b052629b3b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b05262a5020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b05262aa778" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b05262a85b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b05262a8020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b05262a8338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b05262a97b8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b05262a4020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b05262a5740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b05262a9020" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b052629be80" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b052629bc10" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b05262a65b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b05262a6020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b05262a6338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b05262ab8e8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b05262ab678" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b05262aa0d8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b05262cc588" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262cc588"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x2b05262c9338" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262cc588"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b05262c90c8" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262cc588"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b05262d8250" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262d8250"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x2b05262d7cd8" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b05262d8ab0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262d8250"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b05262d7540" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262d8250"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b05262d72d0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b05262d8250"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0526323020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b0526332810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b05263325a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b0526334020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b0526334a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b05263347a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b05263334d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0526333260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b0526333d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b0526349dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b05263484c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b0526349070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b0526347290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0526349710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b0526348b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b052634a328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b052634a998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b05260d5378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b05260e0258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b05260d5a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b05260e2070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b05260e2860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b0526197e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b05261af4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b052611c940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b05261b0020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b05264ea920" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b05264ea020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b05264ea380" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05264ea690" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b05264ffc68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05264ff6a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05264ff9b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0526500e28" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b05264e8be8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05264e8978" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0526500030" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05264e7a60" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b05264e7d88" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b0526508930" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05265086c0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b05264f8a88" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05264f8818" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b05264fa020" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b05264faa78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05264fa808" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b05264f52a0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05264f7c98" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b05264f5020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b05264f6dc0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05264f6808" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b05264f6b40" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b052650c5c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b052650c358" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b052650b840" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b052650b2c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b052650b5c0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0526268848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b05264f4478" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b05264f4208" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b0526507d20" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0526507770" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0526507aa0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b0526506ac8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b0526503290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526503020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b05265023b0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526502140" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b0526501468" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05265011f8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0526514808" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526514278" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0526514588" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b052650ea68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b052650e4a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b052650e7b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0526513c70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0526512a50" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05265127e0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0526510e28" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526510880" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0526510ba8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b05265ee640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05265ee060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b05265ee3c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b05265f3948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b05265ef760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05265ef198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b05265ef4e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b0526615b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b0526615450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b052661d1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b052661c528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b052661a020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b052661bd60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b052661cd40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b052661dcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b052661da58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b052661a818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b052661b5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b0526605110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b05266059c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b05266077b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b0526607548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b05266044e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0526604278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b0526621020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b0526621bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0526621958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b0526620640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b05266203d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b052672f9b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b052672f418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b052672f738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b052674e4a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b052674e238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b052674c2a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b052674ec20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b052674c020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b052674f1d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b052674ba38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b052674b160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b052674b480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b052674b7a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b052674fa50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b052672e2b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0526751880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0526751ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b052672e020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0526752bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0526752940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b05267739b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b05267733f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b0526773730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b052676faf8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b052676faf8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b052676fd28" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b052676fd28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b052676c5e8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b052676fd28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b052676a628" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b052676ce00" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b052676ad18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b05267813a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b0526782570" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b052677e9f0" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b052677e780" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b052677fa08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b0526783710" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b0526783e30" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b0526782c90" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b0526781a80" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b052677f378" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b052677f108" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b052677e110" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b052686f1d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b052686d578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b0526849328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b052686b780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b052686b020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b052686dc78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b052686e4c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b052686e250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b052686a290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b052686a020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b0526849a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b052686ede8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b052686eb78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b052686fb00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b052686f890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0526868020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b05268639b8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b0526863748" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b05268648e8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b05268688d8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b0526867c38" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b05268679c8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b05268653a0" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0526863070" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526867290" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0526867020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526868020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0526865a98" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b05268641d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0526860c78" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526860c78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b05268813e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0526883760" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b052685d568" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526860c78"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0526883e68" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0526881b30" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526883020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526860c78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b052685dc40" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526860c78"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0526882590" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0526882c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0526858b88" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0526858b88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b05268500d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b05268511d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b05268554a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0526858b88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b0526850a28" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b05268507b8" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b052684f1d8" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0526854c40" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0526854520" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0526851930" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526855dd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0526858b88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0526855b68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0526858b88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0526853360" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0526853a48" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0526978698" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b0526973728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b0526972838" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b05269725c8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b0526971290" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0526971020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b0526973020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0526973e80" loc="81:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526978698"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b0526974020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b0526974750" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b05269ac020" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b05269afcb0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2b0526a2f368" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b0526a2f368"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0526a2fc20" loc="51:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b0526a2f368"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0526a0fdd8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0526a0fdd8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0526a3c068" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0526a38958" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0526a3ba78" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b0526a38020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0526a3aa08" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b0526a3ad28" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0526a3a258" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b0526a37110" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0526a3cb28" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0526a3c8b8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526a3c068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0526a3b328" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0526a6a290" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0526a6b178" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b0526a6d020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0526a6bae8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0526a6b878" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b0526a6c9d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0526a6c760" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0526a6ac08" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0526a6a998" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b0526a6d750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b0526a6c0a8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0526a6de08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b0526a5e178" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b0526a61258" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b0526a61970" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b0526a60178" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b0526a5e928" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b0526a60948" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b0526a62070" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0526162978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0526162d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b0526a62a28" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0526162978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0526162d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0526a627b8" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0526162978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0526162d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2b0526beb0c8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526bb87b0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b0526bb8ad8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0526bb8de8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficStatistics" loc="43:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date February 9th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRxBurst" ref="0x2b0526be17a0" loc="52:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxBurst" ref="0x2b0526be10d8" loc="50:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktCreationIntvl" ref="0x2b0526be2258" loc="46:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktReceptionIntvl" ref="0x2b0526be2998" loc="48:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardDelay" ref="0x2b0526bdf020" loc="54:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueStatus" loc="41:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date September 2 2013&#10;</long>
      </documentation>
      <function event="" provided="0" name="dropped" ref="0x2b0526c03818" loc="60:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="56:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; signaled, if a new (remote) packet cannot be stored in the queue&#10; this event must only be signaled from Receive.receive() !&#10;</short>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="acceptsRemote" ref="0x2b0526c03110" loc="54:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="49:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; check if the queue accepts remote packets&#10;&#10; </short>
          <long>&#10; check if the queue accepts remote packets&#10;&#10; @return true, if accepting; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0526bfb800" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b0526bf7728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b0526bf4020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b0526bf6d78" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b05257e3488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b05257e3488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b0526bf3020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0526bf4c50" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b0526bf7020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0526bf6290" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bfb800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b0526bf8070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b0526bf8790" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CacheCompare" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b0526c05788" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <interfacedef-ref qname="CacheCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0526c05788"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="equal" ref="0x2b0526c005b0" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <documentation loc="42:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <short>&#10; compare a cached element ce with another element cmp&#10;&#10; </short>
          <long>&#10; compare a cached element ce with another element cmp&#10;&#10; @param ce  element in cache&#10; @param cmp element for comparison&#10;&#10; @return true, if a == b; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="CacheCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0526c05788"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0526c05788"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ce" ref="0x2b0526c00020" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0526c05788"/></type-var>
          </variable>
          <variable name="cmp" ref="0x2b0526c00330" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0526c05788"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0526bf04a0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bf04a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0526c213b0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bf04a0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b0526c24cf8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b0526bf0cc8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b0526c23718" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bf04a0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b0526c234a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526bf04a0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b0526c244e8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficUpdates" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="updateRxBurst" ref="0x2b0526c13378" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b0526c13108" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateForwardDelay" ref="0x2b0526c13ca0" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="done" ref="0x2b0526c13a30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTxBurst" ref="0x2b0526c14a18" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b0526c147a8" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktReceptionIntvl" ref="0x2b0526c14110" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktCreationIntvl" ref="0x2b0526c179b0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b0526bfe2a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0526bfe2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0526bfeab8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0526bfe2a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0526c1f8b8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526c1f8b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2b0526c1c338" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526c1f8b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b0526c1c0c8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526c1f8b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b0526c1a418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2b0526c1ccc8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526c1f8b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b0526c1ca58" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0526c1f8b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoPathCost" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCost" ref="0x2b0526cae258" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0526296d20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reviseCost" ref="0x2b0526cae8f8" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="inspectBeacon" ref="0x2b0526cad998" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0526296d20"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526cad060" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cost" ref="0x2b0526cad3f0" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0526296d20"/></typename>
            </type-int>
          </variable>
          <variable name="update" ref="0x2b0526cad708" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b0526cc47b8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b0526cc4020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoBackoffConfig" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <short>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; </short>
        <long>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; @author Christian Renner&#10; @date January 11 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMaximumBackoff" ref="0x2b0526ca1360" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b0526cc8290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526cc8020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b0526d7a3c0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b0526d7dd80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0526d7a140" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b0526d76e18" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0526d76e18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0526d69068" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526d69068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b0526d67cf0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526d69068"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d67a80" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b0526d65020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d68ca8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b0526d69b88" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d69918" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526d642a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526d69068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d65c48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b0526d64020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0526d69068"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b0526d71670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d71400" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b0526d75968" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d75380" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b0526d756e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b0526d74710" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d744a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b0526d73c80" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d73698" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b0526d73a00" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b0526d705b8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d70348" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b0526d6dd48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b0526d6d590" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0526d6d320" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b0526d6c580" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b0526d8fe58" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0526d8fe58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b0526d8bdc8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d8bb58" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0526d8b3d0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0526d8fe58"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d8b160" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b0526d8c9a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d8c738" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0526d89ab0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0526d8fe58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526d894e8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b0526d89830" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0526d8fe58"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0526dda0d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b0526ddb178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b0526ddc848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0526ddb900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0526ddaac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b0526dd5020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd6cc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b0526d9fbc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0526dd65b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd6348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0526dd4988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd4398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526dd4708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0526dd5cd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd56e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526dd5a58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b0526dd2c30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b05262534c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd29c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b0526dd1928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b05262534c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd1348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0526dd16a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b05262534c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0526dd22d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dd2060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b0526dd0070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b05262534c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b0526dcb860" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dcb278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b0526dcb5e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b0526dc9948" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dc96d8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b0526dcca60" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b0526dcc108" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b0526dd8e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0526da6a70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b0526da6170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0526da64d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0526da67e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0526da2df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526da2828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0526da2b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0526da2020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0526da57e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526da5578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0526da36e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526da3140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0526da3468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b0526e11920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b0526e174e8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e17278" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b0526e07670" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e07400" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b0526e06ce0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e06a70" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b0526e09020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0ad38" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0526e0b910" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0b6a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0526e09cb0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e096f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526e09a30" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0526e0a618" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0a060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526e0a398" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b0526e06348" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e07d40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0526e060c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b0526e101d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b0526e10ad0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b0526e0ec28" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0e9b8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b0526e0f5b8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0f348" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b0526e0e0a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e0fdd0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b0526e23110" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b0526e24290" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b0526e24020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0526e249c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b0526e28748" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b0526e238c0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0526256540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b0526e1da10" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e1d7a0" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b0526e1f020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e21d48" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0526e1e578" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b0526e1fd88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e1f7d8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b0526e1fb08" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b0526e214e8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e21278" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b0526e1d020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e1ed20" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0526ded640" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b0526df0e50" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526df0be0" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b0526dec290" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dec020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b0526decac8" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b0526deb608" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526deb398" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b0526de1e60" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de1bf0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b0526de2328" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b0526de3b50" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0526de3570" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526de38d0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b0526de7800" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de7590" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b0526de62d0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de6060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b0526de42a0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0526de6b50" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526de4020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b0526de8020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b0526de8da0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de8828" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526de8b20" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b0526de4d90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de4b20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b0526e33a28" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e337b8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b0526e34290" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e34020" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b0526e00020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e01a08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b0526e01d28" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b0526dfd020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dffd20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b0526e2e748" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e2e198" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526e2e4c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b0526dff520" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dff2b0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b0526e33040" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e34a88" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b0526e34d98" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b0526dfc8b8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0526dfc2d8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526dfc638" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b0526e2fa20" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e2f7b0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b0526e00a60" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e007f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b0526e38290" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e38020" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b0526e3a720" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0526e3a140" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526e3a4a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b0526e2bd88" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b05262538b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b0526e2d290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e2d020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b0526e2b5f8" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b05262534c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b0526e2f020" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e309d0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0526e30d00" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b0526dfdaa8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dfd838" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b0526e36818" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e36278" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b0526e36598" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b0526e32798" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e321f8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b0526e32518" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0526e2a790" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e2a520" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b0526e37020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e38a30" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0526e38d28" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b0526e01290" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e01020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b0526e2dd78" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e2db08" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b0526e30290" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e30020" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b0526e37aa8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e37838" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b0526ddeb48" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526dde598" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b0526dde8c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b0526ddd328" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b0526ddf3b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526ddf140" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b0526ddfdd0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526ddfb60" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b0526e145b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e14348" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b0526de0ab0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526de0840" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b0526e14da0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b0526e13828" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526e135b8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b0526eb2b28" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b0526eb1428" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b0526eb1d40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b0526eb2438" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b0526ebfd90" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526ebfb20" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0526efd7a8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526efd538" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0526ebccd0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526ebc728" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0526ebca50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b0526efa2c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
              <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0526efa020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b0526ee7070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b0526ee6020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b0526ee77d0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b0526ee9868" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b0526ee92b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0526268bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0526ee95e8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b0526f92c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0526f8f580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b0526f8abf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b0526f8a440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b0526f8d360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b0526f8db50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b0526fc6ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0526f8bc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0526fc6858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0526f8bc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b0526f86ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b0526fc75e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0526f8bc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0526fc7378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0526f8bc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0526fc6020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b0526f8bc40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b05270f6e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
              <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05270f6bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b05270f6290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05270f6020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b052712f020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0527130ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b052712f790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b05270edcf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b05270eda88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0527130640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b05271303d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b05270ea020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b05270ebd80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b05271344e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0527134270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b05270eaab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b05270ea840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b0527132020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0527134ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b05270eb5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b05270eb340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0526266020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b0527188428" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b05271864a0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b0527185020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0527186c38" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b0527185780" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b0527188c58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b0527184020" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b052718ac50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b052718a9e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b05271cd020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b05271817b8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0527181548" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b05271f7e50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05271f7be0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b05271fbdd0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05271fbb60" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b05271f8b10" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05271f8580" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b05271f8890" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b05271f74e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b05271f7278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0526281510"/>
                <typename><typedef-ref name="message_t" ref="0x2b0526280aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b05272bd3e8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b05272bd178" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b052726d9c8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b05272d2908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b05272d2908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b05272d2b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b05272d2b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b05272cd630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b05272d2b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b05272cd3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b05272d2b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b05272d01d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b05272cf290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b05272d0b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b05272d0890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b05272d39a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b05272d7020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b05272dace0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b05272d6338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b05272d60c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b05272d7820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b05272d6d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b05272d6ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b05273c76b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b05273cad58" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b05273c7100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05273c7420" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b05273c5a48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b05273c4da0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b05273c5140" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b05273c5460" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b05273c57a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b05273ccb98" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b05273cc928" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b0527406020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b05273fda60" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b0527401538" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b05273fc458" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b05273fc1e8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b0527407880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b05273fe108" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b05273ffe18" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b0527403d50" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b0527403ae0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b0527404020" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b05273f8b98" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b05273f8928" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b05274024d0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b05273fa4b0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b05273fa240" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b05273f9360" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b05273fd338" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b05273fd0c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b05273f8258" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b05273ff020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b0527401c18" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b0527404978" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0527404708" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b0527402de0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b0527402b70" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b05273fe918" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b05273fcb60" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b05273faba0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b05273f9aa8" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b05273ff738" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b05260b79b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b0527406738" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b0527403338" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b05274030c8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b052744d748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b052744c020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoDissemination" loc="9:../../../Orinoco/interfaces/OrinocoDissemination.nc">
      <documentation loc="1:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <short>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.</short>
        <long>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.&#10; The dissemination layer only attaches version numbers to &#10; outgoing data packets and receives updates piggy-backed on&#10; incoming beacons and informs the data storage layer.&#10;</long>
      </documentation>
      <function event="" provided="0" name="data" ref="0x2b052761ee78" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="15:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get data (reference) from owner to send in &#10; outgoing beacon&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x2b052761ebd0" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="version" ref="0x2b052761e4a8" loc="13:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="10:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get current version from data owner&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="update" ref="0x2b052761b020" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="21:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; signal there is a new update&#10; the user must copy the data out&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rversion" ref="0x2b052761d568" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
          <variable name="rdata" ref="0x2b052761d900" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b052761dc20" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b05257e8160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationDelay" loc="40:../../../Orinoco/interfaces/DisseminationDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="delay" ref="0x2b05276bf328" loc="47:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/DisseminationDelay.nc">
          <short> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; @return data delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b05257e8b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b052771ce48" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b052771ce48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b0527719918" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b05260dcae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b052771ce48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b05277196a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b052771ce48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAPeriodicJobConfig" loc="40:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPeriod" ref="0x2b052785d8b8" loc="41:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJob" loc="40:../../../EAJobs/interfaces/EAJob.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJob.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b052785acd0" loc="43:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b05278563a0" loc="47:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJobConfig" loc="40:../../../EAJobs/interfaces/EAJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b0527893b00" loc="43:../../../EAJobs/interfaces/EAJobConfig.nc">
        <interfacedef-ref qname="EAJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="ea_generic_jobconfig_t" ref="0x2b052782e078"/>
              <typename><typedef-ref name="ea_generic_jobconfig_t" ref="0x2b052782e690"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAScheduler" loc="42:../../../EAJobs/interfaces/EAScheduler.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAScheduler.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="jobStarted" ref="0x2b052788b108" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b05277f92f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b052788ce40" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b05277f92f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleJob" ref="0x2b052788c7d8" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b05277f92f8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b052788c240" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b05277f92f8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b052788c558" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b05257e9608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
