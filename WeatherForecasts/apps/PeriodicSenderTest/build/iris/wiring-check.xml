<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="58:TestAppC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c41f047e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42638150"/></to>
    </wire>
    <wire loc="61:TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1c41eb3818"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1c41ccdc38"/></to>
    </wire>
    <wire loc="62:TestAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c41ebf4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c4335dab8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c4335dab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:TestAppC.nc">
      <from><interface-ref name="BootTimer" scoped="" ref="0x2b1c41ebc680"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c43356020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c43356020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:TestAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b1c41ec96f0"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x2b1c41f38020"/></to>
    </wire>
    <wire loc="92:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b1c41f38020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c4200a808"/></to>
    </wire>
    <wire loc="65:TestAppC.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b1c41ec7b28"/></from>
      <to><interface-ref name="ForwardingControl" scoped="" ref="0x2b1c41f39788"/></to>
    </wire>
    <wire loc="81:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b1c41f39788"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1c41f67620"/></to>
    </wire>
    <wire loc="66:TestAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c41ecf1c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c41f36630"/></to>
    </wire>
    <wire loc="84:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c41f36630"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c41f66cf8"/></to>
    </wire>
    <wire loc="67:TestAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b1c41ec5c48"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b1c41f3cd60"/></to>
    </wire>
    <wire loc="80:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b1c41f3cd60"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b1c41f67db0"/></to>
    </wire>
    <wire loc="68:TestAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c41ed0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></to>
    </wire>
    <wire loc="82:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c41f62a10"/></to>
    </wire>
    <wire loc="69:TestAppC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c41ed1a08"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c41f5d600"/></to>
    </wire>
    <wire loc="106:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c41f5d600"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cb2740"/></to>
    </wire>
    <wire loc="70:TestAppC.nc">
      <from><interface-ref name="OrinocoRouting" scoped="" ref="0x2b1c41ee54b0"/></from>
      <to><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c41f38b20"/></to>
    </wire>
    <wire loc="101:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c41f38b20"/></from>
      <to><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42022020"/></to>
    </wire>
    <wire loc="72:TestAppC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b1c41efa648"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c41f4f4e8"/></to>
    </wire>
    <wire loc="85:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c41f4f4e8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c41f64b80"/></to>
    </wire>
    <wire loc="73:TestAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f096d8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f48310"/></to>
    </wire>
    <wire loc="83:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f48310"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f617a8"/></to>
    </wire>
    <wire loc="77:TestAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c4334ddf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></to>
    </wire>
    <wire loc="78:TestAppC.nc">
      <from><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b1c41f08900"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4334d798"/></to>
    </wire>
    <wire loc="67:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c4334d798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c43345288"/></to>
    </wire>
    <wire loc="82:TestAppC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b1c41efcce0"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b1c42d10098"/></to>
    </wire>
    <wire loc="26:../../lib/net/orinoco/RadioTestAppC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b1c42d10098"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b1c42d546b0"/></to>
    </wire>
    <wire loc="85:TestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c41edd080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c431df250"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c431df250"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c431dbab8"/></to>
    </wire>
    <wire loc="88:TestAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1c41f06ae8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1c42c2a568"/></to>
    </wire>
    <wire loc="92:TestAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c4339a4c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></to>
    </wire>
    <wire loc="93:TestAppC.nc">
      <from><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b1c41f05020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4339de48"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c4339de48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c43399b00"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c43ad9718"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c43210708"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b1c4305f020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b1c4305de30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c4300d120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42e6b110"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c43202480"/></to>
    </wire>
    <wire loc="73:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42ccba78"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42caede8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42c2fca0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c439af8f8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c4284aad8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c4263f1f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c43895430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42500238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c43848de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c4378c398"/></to>
    </wire>
    <wire loc="88:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c41f67020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b1c41e80308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b1c41b215c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b1c41b215c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b1c41bccd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41e80ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1c4294b870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41e80ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1c4284a020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41e80ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c41cbec10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c41cbec10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c41cd34f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41e7e418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1c41ccb9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c43197020"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1c41ccb9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42aeedc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c41cc6b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c41e56ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b1c41cd2398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c41e564b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b1c41cd3b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c4321e020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b1c41cd3b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41cd6a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41cd6a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41cdc428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1c41cdf108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b1c41ccb9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b1c41ce75f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b1c41cef1a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b1c41cef1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41d6e430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b1c41cdb7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b1c41cdf108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b1c41d17c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41dfa520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b1c41cfb7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41d94020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41d94020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43522480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b1c41d137e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41dacd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41dacd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4359b480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b1c41d1c4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41db08c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41db08c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4361d480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b1c41d23af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41e23c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b1c41ced4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41d6b740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41d6b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43417480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b1c41d1e1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41db25b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41db25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43624480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b1c41ceb7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41d78930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41d78930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c434313e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b1c41d03968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41d8e740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41d8e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c434a2480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b1c41d0ac78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41da5430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41da5430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43518480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b1c41d10c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41da7120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41da7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43592480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b1c41ce1c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41d71020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41d71020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43426480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b1c41cf9c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41d74d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41d74d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43496480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b1c41d00e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41d8bbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41d8bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43499480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b1c41d061a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41da18c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41da18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4350f480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b1c41d19968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41dc1d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41dc1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43614480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b1c41d257e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41e17c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b1c41d044d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41daea50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41daea50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c435a2480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41d6e430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4341d480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b1c41cf5348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41d84120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41d84120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4348d480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b1c41d274d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41e0ccd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b1c41cf3658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41d90500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41d90500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c434a93e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b1c41d0c968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41d93120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41d93120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4351e480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b1c41d12968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41daae18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41daae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43598480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b1c41d1b658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41dc3a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41dc3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4361a480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b1c41cec658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41d6a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41d6a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43414480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b1c41cea968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41d77a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41d77a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4342d480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b1c41d02af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41d8d8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41d8d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4349f480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b1c41d09e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41da45b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41da45b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43515480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b1c41d0fe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41da62a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41da62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4358f480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b1c41ce0e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41d70120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41d70120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43423480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b1c41cf8e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41d87e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41d87e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43493480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b1c41cfe020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41d8ad60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41d8ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43507480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b1c41d18af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41dc0e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41dc0e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43611480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b1c41cfc348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41d96e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41d96e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c435253e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b1c41d14658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41dadbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41dadbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4359e480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b1c41d1d348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41db1740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41db1740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43621480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b1c41d24968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41e123e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b1c41cee348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41d6c5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41d6c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4341a480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b1c41cf44d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41d832a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41d832a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4348a480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b1c41d0d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41db4500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41db4500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c436273e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b1c41cf27e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b1c41d8f5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b1c41d8f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c434a5480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b1c41d0baf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41d922a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41d922a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4351b480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b1c41d11af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41da8020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41da8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43595480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b1c41d1a7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41dc2bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41dc2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43617480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b1c41cdea70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41d73dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41d73dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c433b23e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b1c41ce9af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b1c41d75bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b1c41d75bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4342a480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b1c41d01c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b1c41d8ca50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b1c41d8ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c4349c480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b1c41d07020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b1c41da3740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b1c41da3740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43512480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b1c41d26658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c41e063e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b1c41d05348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b1c41daf930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b1c41daf930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c435a53e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b1c41cfd1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b1c41d89e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b1c41d89e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43504480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b1c41cf0020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b1c41d6f2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b1c41d6f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43420480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b1c41cf6100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b1c41d85020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b1c41d85020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b1c43490480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41bcbc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b1c41bd5168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b1c41b20e30"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1c41bf0988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1c4270c6f0"/></to>
    </wire>
    <wire loc="100:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c41f4b410"/></from>
      <to><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42023320"/></to>
    </wire>
    <wire loc="122:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42023320"/></from>
      <to><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42cb06a8"/></to>
    </wire>
    <wire loc="123:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42022020"/></from>
      <to><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42cd44c0"/></to>
    </wire>
    <wire loc="87:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2b1c41f49020"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2b1c41f62418"/></to>
    </wire>
    <wire loc="86:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1c41f4a1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c41f63868"/></to>
    </wire>
    <wire loc="71:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c4200a808"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c4202be70"/></to>
    </wire>
    <wire loc="91:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c41f5ab08"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42022c08"/></to>
    </wire>
    <wire loc="104:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42022c08"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42c59e78"/></to>
    </wire>
    <wire loc="124:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b1c41f57020"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b1c432b4060"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Stats" scoped="" ref="0x2b1c432b4060"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b1c432b0500"/></to>
    </wire>
    <wire loc="49:../../lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cb2740"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cab440"/></to>
    </wire>
    <wire loc="93:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c41f759b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c420252a8"/></to>
    </wire>
    <wire loc="72:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c420252a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c4202a908"/></to>
    </wire>
    <wire loc="94:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c41f6f7f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42024c20"/></to>
    </wire>
    <wire loc="74:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42024c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c420282b0"/></to>
    </wire>
    <wire loc="95:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c41f80a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42024020"/></to>
    </wire>
    <wire loc="73:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42024020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c420295a8"/></to>
    </wire>
    <wire loc="96:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c41fa0020"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42022c08"/></to>
    </wire>
    <wire loc="97:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b1c42020720"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b1c41f79a40"/></to>
    </wire>
    <wire loc="102:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RoutingState" scoped="" ref="0x2b1c4201ca58"/></from>
      <to><interface-ref name="OrinocoRoutingStateInternal" scoped="" ref="0x2b1c41f73768"/></to>
    </wire>
    <wire loc="107:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c41f9e9b0"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cb2740"/></to>
    </wire>
    <wire loc="110:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b1c43256e28"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b1c41f67db0"/></to>
    </wire>
    <wire loc="111:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c4201a360"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c43256490"/></to>
    </wire>
    <wire loc="50:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c43256490"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c43250158"/></to>
    </wire>
    <wire loc="114:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2b1c41f94460"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b1c432416e0"/></to>
    </wire>
    <wire loc="117:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x2b1c41f8a6c0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b1c4328b478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2b1c4328b478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b1c43ad9db8"/></to>
    </wire>
    <wire loc="120:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketHistory" scoped="" ref="0x2b1c41fa13b0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2b1c432ccd78"/></to>
    </wire>
    <wire loc="121:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CacheCompare" scoped="" ref="0x2b1c432ba7b8"/></from>
      <to><interface-ref name="CacheCompare" scoped="" ref="0x2b1c41f76ab8"/></to>
    </wire>
    <wire loc="125:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c41f99b48"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b1c432b4d78"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Updates" scoped="" ref="0x2b1c432b4d78"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b1c432af240"/></to>
    </wire>
    <wire loc="126:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c4201adb0"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b1c432b4d78"/></to>
    </wire>
    <wire loc="127:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficStatistics" scoped="" ref="0x2b1c4201dbc0"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b1c432b4060"/></to>
    </wire>
    <wire loc="107:../../lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="selfReceiveTask" scoped="" ref="0x2b1c41f96d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b1c41fa6368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42cb06a8"/></from>
      <to><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42cca178"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42cd44c0"/></from>
      <to><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42ccae00"/></to>
    </wire>
    <wire loc="58:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42c59e78"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42c4f508"/></to>
    </wire>
    <wire loc="75:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b1c42051020"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b1c42020720"/></to>
    </wire>
    <wire loc="76:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PathCost" scoped="" ref="0x2b1c4205cd68"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c4201a360"/></to>
    </wire>
    <wire loc="77:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c42066d80"/></from>
      <to><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c4201adb0"/></to>
    </wire>
    <wire loc="78:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b1c42066020"/></from>
      <to><interface-ref name="TrafficStatistics" scoped="" ref="0x2b1c4201dbc0"/></to>
    </wire>
    <wire loc="79:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="RoutingState" scoped="" ref="0x2b1c42070950"/></from>
      <to><interface-ref name="RoutingState" scoped="" ref="0x2b1c4201ca58"/></to>
    </wire>
    <wire loc="83:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b1c4203b128"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42131538"/></to>
    </wire>
    <wire loc="76:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42131538"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42150548"/></to>
    </wire>
    <wire loc="84:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42051840"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42c59020"/></to>
    </wire>
    <wire loc="57:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c42c59020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42c50658"/></to>
    </wire>
    <wire loc="85:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b1c4205d1c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c4212b8e0"/></to>
    </wire>
    <wire loc="84:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c4212b8e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c4216c020"/></to>
    </wire>
    <wire loc="86:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b1c4204f9b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4212d5f8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b1c4204f9b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c4212c1c8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b1c4204e0f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42c5a950"/></to>
    </wire>
    <wire loc="56:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42c5a950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42c50080"/></to>
    </wire>
    <wire loc="89:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSnoop" scoped="" ref="0x2b1c4204e790"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c4212c1c8"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b1c42071360"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c4212e4d0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b1c4205c060"/></from>
      <to><interface-ref name="SendData" scoped="" ref="0x2b1c42c10660"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x2b1c42c10660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42c09080"/></to>
    </wire>
    <wire loc="94:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c4206fd20"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42145850"/></to>
    </wire>
    <wire loc="95:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42145850"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42181b78"/></to>
    </wire>
    <wire loc="100:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubSendData" scoped="" ref="0x2b1c42c0d3d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42c5dd18"/></to>
    </wire>
    <wire loc="55:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c42c5dd18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42c53438"/></to>
    </wire>
    <wire loc="101:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c42c0c140"/></from>
      <to><interface-ref name="BackoffConfig" scoped="" ref="0x2b1c420436e0"/></to>
    </wire>
    <wire loc="105:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMSubSend" scoped="" ref="0x2b1c42c56ab8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c4212e4d0"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42c557f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4212d5f8"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42c55e68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42149c58"/></to>
    </wire>
    <wire loc="83:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c42149c58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c4216d388"/></to>
    </wire>
    <wire loc="111:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c42052020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="115:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c4203bcd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42c68350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42c68350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c4206a1c8"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cb2740"/></to>
    </wire>
    <wire loc="124:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Routing" scoped="" ref="0x2b1c4206bd08"/></from>
      <to><interface-ref name="OrinocoRoutingInternal" scoped="" ref="0x2b1c42cd4e48"/></to>
    </wire>
    <wire loc="53:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="OrinocoRoutingInternal" scoped="" ref="0x2b1c42cd4e48"/></from>
      <to><interface-ref name="OrinocoRoutingInternal" scoped="" ref="0x2b1c42cc97e0"/></to>
    </wire>
    <wire loc="127:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1c42069e60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></to>
    </wire>
    <wire loc="131:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Orinoco" scoped="" ref="0x2b1c42d14c68"/></from>
      <to><interface-ref name="OrinocoDI" scoped="" ref="0x2b1c4203ca78"/></to>
    </wire>
    <wire loc="132:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="VerSize" scoped="" ref="0x2b1c42082720"/></from>
      <to><interface-ref name="VerSize" scoped="" ref="0x2b1c42d55e30"/></to>
    </wire>
    <wire loc="136:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c420685e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c431df250"/></to>
    </wire>
    <wire loc="391:../../lib/net/orinoco/OrinocoRadioP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x2b1c420ae830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42150548"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42176b78"/></to>
    </wire>
    <wire loc="101:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42181b78"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c421af020"/></to>
    </wire>
    <wire loc="81:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b1c42149680"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4216fcd0"/></to>
    </wire>
    <wire loc="85:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4216fcd0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1c42170498"/></to>
    </wire>
    <wire loc="78:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c4212e4d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c4214d4d0"/></to>
    </wire>
    <wire loc="82:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c4214d4d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42173c30"/></to>
    </wire>
    <wire loc="80:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1c4212c1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c4216f1c8"/></to>
    </wire>
    <wire loc="84:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1c4216f1c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c42171968"/></to>
    </wire>
    <wire loc="90:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c4216d388"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b1c421909e8"/></to>
    </wire>
    <wire loc="98:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b1c4213b260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c4217e8b0"/></to>
    </wire>
    <wire loc="105:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c4217e8b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c421aec38"/></to>
    </wire>
    <wire loc="97:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c42154130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c4217a758"/></to>
    </wire>
    <wire loc="104:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c4217a758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c421aabf0"/></to>
    </wire>
    <wire loc="79:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c4212d5f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4214c5f8"/></to>
    </wire>
    <wire loc="83:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c4214c5f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42172dc0"/></to>
    </wire>
    <wire loc="88:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1c4213d418"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b1c4216b620"/></to>
    </wire>
    <wire loc="95:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1c4216b620"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b1c42194c70"/></to>
    </wire>
    <wire loc="91:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c4216c020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c42191378"/></to>
    </wire>
    <wire loc="89:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4213ce48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4216a2e8"/></to>
    </wire>
    <wire loc="96:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4216a2e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4219b968"/></to>
    </wire>
    <wire loc="217:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42176b78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42567020"/></to>
    </wire>
    <wire loc="100:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c42160988"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c421b3d28"/></to>
    </wire>
    <wire loc="311:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c421b3d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c4282ab20"/></to>
    </wire>
    <wire loc="125:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b1c42170498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4234c1a0"/></to>
    </wire>
    <wire loc="127:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b1c421909e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c4234f700"/></to>
    </wire>
    <wire loc="122:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c42173c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c4234e510"/></to>
    </wire>
    <wire loc="124:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1c42171968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c4234daa0"/></to>
    </wire>
    <wire loc="99:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c42162658"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c421b6870"/></to>
    </wire>
    <wire loc="309:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c421b6870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c4282e6b0"/></to>
    </wire>
    <wire loc="123:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42172dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c4234d388"/></to>
    </wire>
    <wire loc="271:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c421aec38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c427e6020"/></to>
    </wire>
    <wire loc="103:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4217f4e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c421af830"/></to>
    </wire>
    <wire loc="313:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c421af830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c42821e78"/></to>
    </wire>
    <wire loc="98:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c421692c0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c4219a518"/></to>
    </wire>
    <wire loc="310:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c4219a518"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c42823390"/></to>
    </wire>
    <wire loc="188:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1c42194c70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b1c42553b50"/></to>
    </wire>
    <wire loc="126:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c42191378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c423501f0"/></to>
    </wire>
    <wire loc="226:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4219b968"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b1c425fa268"/></to>
    </wire>
    <wire loc="312:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c421af020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42821668"/></to>
    </wire>
    <wire loc="272:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c421aabf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c427ea270"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42567020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b1c42564490"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c4282ab20"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c42843d28"/></to>
    </wire>
    <wire loc="161:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b1c4218e710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1c423fe840"/></to>
    </wire>
    <wire loc="149:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b1c4218d4b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c423d7200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1c423d7200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c43789720"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4234c1a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b1c436e94d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c4234e510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c436ec820"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b1c4234daa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b1c436ebdb0"/></to>
    </wire>
    <wire loc="162:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c4219c308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c424d8900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c424d8900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c43819d98"/></to>
    </wire>
    <wire loc="163:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b1c421a56e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c423d1980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c4282e6b0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c428469c0"/></to>
    </wire>
    <wire loc="218:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c421941d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c42565888"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c42565888"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c4389d5e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c4234f700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c436eda10"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c4234d388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c436eb698"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c427e6020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c438d4c48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c42821e78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4294f438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c42823390"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c4287b4b0"/></to>
    </wire>
    <wire loc="159:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c42187250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c423ff578"/></to>
    </wire>
    <wire loc="129:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c421921c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c4234c8b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c4234c8b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c436e9bf0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b1c42553b50"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b1c4254ed28"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b1c425fa268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b1c438949c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c423501f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c436ee3f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c427ea270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c438d6020"/></to>
    </wire>
    <wire loc="160:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c4218e020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c423fe2a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42821668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42878668"/></to>
    </wire>
    <wire loc="130:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c42192d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c4234a020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c4234a020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c436e83c8"/></to>
    </wire>
    <wire loc="103:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c421f4d58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c424db980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c424db980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c437a3d50"/></to>
    </wire>
    <wire loc="104:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42213bd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42274c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42212020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c427e6020"/></to>
    </wire>
    <wire loc="106:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b1c4220de08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c4282f600"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c4282f600"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c428478a8"/></to>
    </wire>
    <wire loc="111:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c42292c68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c4285c150"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c4285c150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c429532e0"/></to>
    </wire>
    <wire loc="117:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c42348328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b1c421e8130"/></to>
    </wire>
    <wire loc="118:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c42349430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b1c4236c100"/></to>
    </wire>
    <wire loc="119:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42349d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b1c42449060"/></to>
    </wire>
    <wire loc="120:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c4234a678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b1c42449638"/></to>
    </wire>
    <wire loc="138:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1c4235d3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c423d7200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c4236ca48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b1c4244b740"/></to>
    </wire>
    <wire loc="154:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c423fee38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c424db980"/></to>
    </wire>
    <wire loc="155:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c423faba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c42420838"/></to>
    </wire>
    <wire loc="156:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c423f95b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c4244c2a8"/></to>
    </wire>
    <wire loc="157:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c423fbd98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c4244c880"/></to>
    </wire>
    <wire loc="170:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c42448490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42537470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42537470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c4384cda0"/></to>
    </wire>
    <wire loc="171:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42448d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c425535b8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c425535b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1c425500c0"/></to>
    </wire>
    <wire loc="172:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42447378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c424d7b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c424d7b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c43817020"/></to>
    </wire>
    <wire loc="177:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c424d5ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c42552888"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c42552888"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c42550698"/></to>
    </wire>
    <wire loc="182:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c42535580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b1c421d86c0"/></to>
    </wire>
    <wire loc="183:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c42536510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42531bb0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42531bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1c425517a0"/></to>
    </wire>
    <wire loc="195:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c425517a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42567a90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42567a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1c42563020"/></to>
    </wire>
    <wire loc="196:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c425500c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42566430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42566430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1c42563908"/></to>
    </wire>
    <wire loc="197:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42550698"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c425669c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c425669c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c42562020"/></to>
    </wire>
    <wire loc="213:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b1c42564490"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c425c7708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c425c7708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c43896870"/></to>
    </wire>
    <wire loc="214:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c42563020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c425c62a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c425c62a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c43895a08"/></to>
    </wire>
    <wire loc="215:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42563908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c425c6b90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c425c6b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c43894430"/></to>
    </wire>
    <wire loc="216:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42562020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c427e49f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b1c427e49f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c438d07a0"/></to>
    </wire>
    <wire loc="223:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b1c425f9a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b1c428315d8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b1c428315d8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b1c42848020"/></to>
    </wire>
    <wire loc="224:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b1c425f73f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42537d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42537d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b1c438486c8"/></to>
    </wire>
    <wire loc="225:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b1c425fab70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b1c42834810"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b1c42834810"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b1c42849128"/></to>
    </wire>
    <wire loc="230:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42536df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42830020"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42830020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42848948"/></to>
    </wire>
    <wire loc="269:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c427e2a30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c42821e78"/></to>
    </wire>
    <wire loc="270:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c4281f9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c428380e0"/></to>
    </wire>
    <wire loc="273:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b1c4281e8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b1c42818660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42837020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b1c4282f600"/></to>
    </wire>
    <wire loc="306:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c42858390"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c42bb3bd8"/></to>
    </wire>
    <wire loc="49:../../chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c42bb3bd8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c42bad208"/></to>
    </wire>
    <wire loc="308:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42857400"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c427e6020"/></to>
    </wire>
    <wire loc="315:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b1c42853020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b1c42818660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b1c42853b50"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b1c42818660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="317:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b1c42852828"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b1c42818660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="318:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42851458"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42274c50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42274c50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c4370ce68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c4370ace0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c42292c68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b1c43706c70"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b1c422945b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c43762888"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c4233ec60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c436e8a20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c4234a678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c436e78c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1c42349430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c437632a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1c42349d18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c43763880"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b1c42348328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c423d6020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c43788510"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c423d6760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c43788c50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c43787570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c423d5020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b1c43787cf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b1c4378c970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b1c43786800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c43817dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c4233ec60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c43816890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c424d5ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b1c43845020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b1c42506d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b1c42506d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b1c42500850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c43845bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c43841140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c43841140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c424ffb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c43847458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b1c42536510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c43847d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1c42536df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b1c438464a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b1c42535580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b1c4254d988"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c4254e400"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b1c43892450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b1c425fab70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b1c43891268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b1c422945b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b1c43891c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b1c425f9a10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b1c43890578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b1c425f73f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b1c4388f4f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b1c4388fc90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b1c43890d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c438cb2a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c4281f9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c438ce1c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c427e2a30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c438cc290"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b1c438cf618"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b1c4281e8c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c42638150"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c427c7128"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b1c4263e020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c427d65e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c4263f1f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c426367a0"/></to>
    </wire>
    <wire loc="37:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c426367a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c427627d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b1c427d0858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c4276eab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c427a5c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1c42633140"/></to>
    </wire>
    <wire loc="38:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1c42633140"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c42760020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c427fb330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b1c426653b8"/></to>
    </wire>
    <wire loc="39:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b1c426653b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c4275c128"/></to>
    </wire>
    <wire loc="40:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b1c4265d7c0"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b1c4275a168"/></to>
    </wire>
    <wire loc="72:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b1c4275a168"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b1c438a4af8"/></to>
    </wire>
    <wire loc="71:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c4275c128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c438a7a90"/></to>
    </wire>
    <wire loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c427627d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c438aa020"/></to>
    </wire>
    <wire loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c42760020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c438aa7c8"/></to>
    </wire>
    <wire loc="75:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c438a3c28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c426ed810"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c426ed810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c426dc180"/></to>
    </wire>
    <wire loc="76:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c4389eb60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c426e6828"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c426e6828"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42711160"/></to>
    </wire>
    <wire loc="77:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c4391ee68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1c426e5c90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c426e5c90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1c427104e8"/></to>
    </wire>
    <wire loc="78:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b1c43919060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b1c426e1e70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b1c426e1e70"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b1c4270cdf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b1c427a1cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b1c427cb930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c4263e020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b1c4282de48"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b1c42847118"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c429532e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c42b3bb68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1c42826020"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1c4283f130"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4294f438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42b34400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b1c42869c30"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b1c42858390"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b1c428659e0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b1c42853020"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b1c42864678"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b1c42853b50"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b1c42863208"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b1c42852828"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42862020"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42857400"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c4286db48"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4294f438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c4285e7e8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42851458"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b1c42878d70"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b1c4295b710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b1c4295b710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b1c41ceb7e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1c42876020"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b1c42958990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b1c42958990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c42966e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c42871c18"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c429575e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c429575e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c4296e9d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b1c428757e0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b1c42956140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b1c42956140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b1c41cf44d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b1c42874958"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b1c42955338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b1c42955338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b1c41ced4d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b1c4286e100"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b1c429544c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b1c429544c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b1c4294ecd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b1c4285fcc0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b1c422945b8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b1c42867748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b1c42b793c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b1c42915d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b1c42b3bb68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b1c4397fbc8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c4296e9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c42963628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c42b34400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42b85c38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b1c42982c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b1c41d07020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b1c42981e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b1c41d0ac78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b1c42941540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1c42a76ca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b1c42a76ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1c42a5b350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b1c429661d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b1c42962120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b1c4296e388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b1c42963020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c4294ccd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c4296da18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1c42966e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c42962d88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b1c429893c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c42a41748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b1c42a41748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b1c439acd78"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c42988020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c42a40c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c42a40c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c439aa268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b1c4298a150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b1c42a0c020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b1c42a0c020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b1c42a09dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b1c429887c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1c41bf13c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b1c429acb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b1c429fc350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1c41bf13c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b1c429ffc70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b1c41ceb7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b1c42a03de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b1c41cea968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b1c429fe020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b1c41ce9af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b1c429fd190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b1c41cf9c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c42a40510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c439abaf8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c439aab08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c42a3f550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b1c439a92b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b1c439ae020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b1c439a9d68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42a6d5e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42a5dc90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42a376e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42a64be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c42a69a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b1c42a57c48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c42a69a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b1c42a9a020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c42a69a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b1c42a96360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b1c4397cc18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42a376e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b1c43977c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b1c42a69a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42aed540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42a376e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c42b84e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c42b59270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b1c42b89450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c42b2f108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c42b2f108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c42b77e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42b61020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42a376e0"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b1c42c09d98"/></from>
      <to><interface-ref name="SubSendData" scoped="" ref="0x2b1c42c0d3d8"/></to>
    </wire>
    <wire loc="53:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b1c42c08aa8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b1c42c0c140"/></to>
    </wire>
    <wire loc="56:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1c42c070c0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></to>
    </wire>
    <wire loc="59:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42c079d8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c42c1ce28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c42c1ce28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <from><interface-ref name="doneTask" scoped="" ref="0x2b1c42bfde68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b1c42c2e6f0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b1c42c2b528"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c42c349e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42c2fca0"/></to>
    </wire>
    <wire loc="59:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b1c42c4c020"/></from>
      <to><interface-ref name="AMSubSend" scoped="" ref="0x2b1c42c56ab8"/></to>
    </wire>
    <wire loc="60:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42c4ccc8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b1c42c557f0"/></to>
    </wire>
    <wire loc="61:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b1c42c4b3c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b1c42c55e68"/></to>
    </wire>
    <wire loc="64:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c42c4a220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="57:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42ccdb80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c41f36630"/></to>
    </wire>
    <wire loc="58:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c42ccc5b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></to>
    </wire>
    <wire loc="62:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="Clock" scoped="" ref="0x2b1c42cce610"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="67:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="AMA" scoped="" ref="0x2b1c42cd08e8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c4233ec60"/></to>
    </wire>
    <wire loc="70:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b1c42ccb2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></to>
    </wire>
    <wire loc="74:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1c42cd0220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></to>
    </wire>
    <wire loc="27:../../lib/net/orinoco/RadioTestAppC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b1c42d0a6c8"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b1c42d52418"/></to>
    </wire>
    <wire loc="24:../../lib/net/orinoco/RadioTestAppC.nc">
      <from><interface-ref name="Decoder" scoped="" ref="0x2b1c42d5b020"/></from>
      <to><interface-ref name="Decoder" scoped="" ref="0x2b1c42d5f1d0"/></to>
    </wire>
    <wire loc="25:../../lib/net/orinoco/RadioTestAppC.nc">
      <from><interface-ref name="Orinoco" scoped="" ref="0x2b1c42d5b898"/></from>
      <to><interface-ref name="Orinoco" scoped="" ref="0x2b1c42d14c68"/></to>
    </wire>
    <wire loc="28:../../lib/net/orinoco/RadioTestAppC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c42d5ac88"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="113:../../lib/net/orinoco/RadioTestC.nc">
      <from><interface-ref name="changedTask" scoped="" ref="0x2b1c42d3de70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../lib/net/orinoco/RadioTestC.nc">
      <from><interface-ref name="decodingTask" scoped="" ref="0x2b1c42d479a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b1c43201508"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b1c431c0808"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c431fc020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c431c6398"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c431c6398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c439bb5c8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c431fcc18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c431c5020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c431c5020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42e20d78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b1c43219b58"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b1c431ffc08"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c42e20d78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42e72d20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c431c5bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e1f9b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e1f9b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e73738"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b1c431c32a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c42e1d1a0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c42e1d1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c42e71908"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c439ba2c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42dcba60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c439bae80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e1f9b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42dcba60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42e2ce40"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c42e2bbd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42e21570"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b1c42e21570"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b1c42e18460"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e29888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e1f9b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c42e27020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c42e20d78"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b1c42e27c58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b1c42e26470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e245e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e6b728"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e6b728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e9cda8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42e207a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42e73180"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c42e6b110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c42e9c790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c42e668f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c42e1dad8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b1c42e70308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42e69208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b1c42e6f020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42e6a760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1c42e66020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b1c431786e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b1c42e69208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b1c42fed020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b1c42e6a760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b1c42fee868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b1c42feddb8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1c42e66020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c42e94bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c42e668f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c42feba50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c42e668f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b1c42fe3420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b1c42e668f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1c42fec6c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1c42e91b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b1c42feb020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b1c42e95950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1c42e8bb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1c42fe7b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b1c42e8a398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1c42fe68b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1c42fe68b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1c43018338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1c42fd6448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1c4301a0c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1c4301a0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1c43013310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b1c42eea830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b1c42ec7d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b1c42eec020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b1c42ee6918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b1c42fe9100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b1c42fe98a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b1c43014290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b1c43018af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b1c43018af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b1c4300de58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b1c43013310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b1c4302a5f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b1c43018338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b1c4300d6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c43012598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c430ba188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c430ba188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c43185c50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c43026c60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c43012598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b1c430285f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1c43068700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1c43068700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1c4305f730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b1c43028d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1c43067020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1c43067020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1c4305e020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b1c430275c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b1c43067860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b1c43067860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b1c4305e8a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b1c43063020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b1c4305b6d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1c43066e58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1c4305c568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1c430656f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1c4305ce00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c4305ac70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c41cc6b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b1c43059950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b1c41bf13c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b1c43183e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c430b4020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b1c430b4020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b1c4318f020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c4318d0e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c430b2c30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c430b2c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c430fd298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c4310cc90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c430f83d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b1c43109350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b1c430f7b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c431041c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b1c430f24e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c431041c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b1c430ee770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b1c431041c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b1c430eab20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c43197740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c430b2c30"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b1c431f6c78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b1c4321e020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b1c431db4f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b1c431d91b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b1c431dcb08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b1c431dcb08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b1c41ce0e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b1c431d8338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b1c43221ca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b1c43221ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b1c41ce1c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b1c431d74c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b1c43220e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b1c43220e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b1c41cdea70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b1c43210d28"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b1c43219b58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1c43209c08"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b1c4326c3b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e245e8"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b1c43250af0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b1c43256e28"/></to>
    </wire>
    <wire loc="54:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c4324f4a8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42145850"/></to>
    </wire>
    <wire loc="56:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b1c432ad490"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></to>
    </wire>
    <wire loc="60:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="PktRateJob" scoped="" ref="0x2b1c432a8700"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b1c432e9060"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b1c432e9060"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b1c432dfc88"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b1c432e9820"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c43371478"/></to>
    </wire>
    <wire loc="65:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c43371ab0"/></from>
      <to><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b1c432aec58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c432e0e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c432e9820"/></to>
    </wire>
    <wire loc="52:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b1c432df020"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b1c432da0c0"/></to>
    </wire>
    <wire loc="53:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b1c432dfc88"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b1c432dad28"/></to>
    </wire>
    <wire loc="50:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="DispatchTimer" scoped="" ref="0x2b1c432d8738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b1c4331f350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b1c4331f350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <from><interface-ref name="dispatch" scoped="" ref="0x2b1c43338830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b1c433130c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></to>
    </wire>
    <wire loc="51:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c43313bd8"/></from>
      <to><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c432e0e48"/></to>
    </wire>
    <wire loc="54:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b1c433122d8"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b1c432df020"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b1c433445b0"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b1c433479b8"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b1c433479b8"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b1c432dfc88"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a6308"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a5dd8"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c433a4458"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a3ca8"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b1c433af020"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b1c432b4060"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c433458e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c4334ddf0"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c432e0e48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a6308"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b1c43396d70"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b1c43397708"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b1c43397708"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b1c432dfc88"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b1c43384020"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c43383b28"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c43382190"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c43381a00"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="QueueStats" scoped="" ref="0x2b1c43395808"/></from>
      <to><interface-ref name="QueueStatistics" scoped="" ref="0x2b1c41f70788"/></to>
    </wire>
    <wire loc="65:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="PacketStats" scoped="" ref="0x2b1c43394ac0"/></from>
      <to><interface-ref name="PacketStatistics" scoped="" ref="0x2b1c42044020"/></to>
    </wire>
    <wire loc="69:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b1c43396180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b1c4339a4c8"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c432e0e48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b1c43384020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestC" loc="59:TestC.nc">
      <module/>
    </component>
    <component qname="OrinocoP" loc="51:../../lib/net/orinoco/OrinocoP.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoQueueP" loc="43:../../lib/net/orinoco/OrinocoQueueP.nc">
      <module/>
    </component>
    <component qname="OrinocoRadioC" loc="42:../../lib/net/orinoco/OrinocoRadioC.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioP" loc="54:../../lib/net/orinoco/OrinocoRadioP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:../../platforms/iris/ActiveMessageC.nc">
      <documentation loc="34:../../platforms/iris/ActiveMessageC.nc">
        <short>&#10; Modifications by Christian Renner from Hamburg University of Technology:&#10; Removed PacketAcknowledgement, and LowPowerListening to comply&#10; with Orinoco&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="42:../../chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="38:../../chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="26:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <documentation loc="11:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="59(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1c4265e6b0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230SlimRadioC" loc="40:../../chips/rf230/RF230SlimRadioC.nc">
      <documentation loc="35:../../chips/rf230/RF230SlimRadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230SlimRadioP" loc="40:../../chips/rf230/RF230SlimRadioP.nc">
      <documentation loc="35:../../chips/rf230/RF230SlimRadioP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC" loc="40:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoForwardLayerP" loc="40:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC.TimerMilliC" loc="44(OrinocoForwardLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerC" loc="40:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerP" loc="40:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoRadioC.Timer" loc="44(OrinocoRadioC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoConfigC" loc="42:../../lib/net/orinoco/OrinocoConfigC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoConfigC.nc">
        <short>&#10; configuration of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; configuration of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoConfigP" loc="42:../../lib/net/orinoco/OrinocoConfigP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoConfigP.nc">
        <short>&#10; implementation of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; implementation of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoRoutingC" loc="42:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoRoutingC.nc">
        <short>&#10; Bidirectional routing abstraction.</short>
        <long>&#10; Bidirectional routing abstraction.&#10;&#10; @author Andreas Reinhardt&#10; @date August 28, 2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRoutingP" loc="44:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <documentation loc="1:../../lib/net/orinoco/OrinocoBeaconMsg.h">
        <short> &#10; Orinoco beacon structure&#10; </short>
        <long> &#10; Orinoco beacon structure&#10; @author Christian Renner  (christian.renner@tuhh.de)&#10; @author Andreas Reinhardt (andreasr@cse.unsw.edu.au)&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioTestAppC" loc="8:../../lib/net/orinoco/RadioTestAppC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioTestC" loc="13:../../lib/net/orinoco/RadioTestC.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DecodeC" loc="4:../../lib/net/orinoco/DecodeC.nc">
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TThree" ref="0x2b1c41bd1d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TThree" ref="0x2b1c41bd1d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b1c41bcf630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <value cst="I:400">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoPathCostHopCountC" loc="40:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountP" loc="40:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoP.SendQueue" loc="42(OrinocoP.SendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41e9aa28"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b1c41e9ad80"/></typename>
          </type-tag>
          <value cst="I:30">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.MsgPool" loc="41(OrinocoP.MsgPool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
            <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
          </type-tag>
          <value cst="I:30">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP.MsgPool.PoolP" loc="53(OrinocoP.MsgPool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b1c4328ee68"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.PacketHistory" loc="44(OrinocoP.PacketHistory):../../lib/net/orinoco/OrinocoCacheC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="OrinocoCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41e9bbf0"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b1c41e9a0d8"/></typename>
          </type-tag>
          <value cst="I:40">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC" loc="43:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
        <short>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoTrafficStatisticsP" loc="45:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.Job" loc="42(OrinocoTrafficStatisticsC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="0">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EASchedulerC" loc="40:../../../EAJobs/lib/EASchedulerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EASchedulerP" loc="44:../../../EAJobs/lib/EASchedulerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EASchedulerC.DispatchTimer" loc="44(EASchedulerC.DispatchTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerC" loc="40:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerP" loc="42:../../../EAJobs/lib/EAEnergyManagerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC" loc="42(OrinocoTrafficStatisticsC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestAppC.TimerMilliC" loc="44(TestAppC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestAppC.BootTimer" loc="44(TestAppC.BootTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC" loc="40:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobP" loc="42:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC.Job" loc="42(OrinocoStatsReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="1">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoStatsReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobConfigC" loc="40:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC" loc="40:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobP" loc="42:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingMsg.h">
        <short>&#10; Orinoco Statistics Message&#10;&#10; </short>
        <long>&#10; Orinoco Statistics Message&#10;&#10; @author Christian Renner&#10; @date February 7th 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC.Job" loc="42(OrinocoDebugReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="2">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoDebugReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobConfigC" loc="42:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1c41d1fd00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1c41d2e0c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1c41d2e410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1c41d36608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1c41d36970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1c41d36cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b1c41d32060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b1c41dcb508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b1c41dcb870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b1c41dcbbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b1c41dca020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b1c4235aab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b1c42375170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b1c4265e6b0" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1c4265e6b0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b1c4265e9a0" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b1c4264d020" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b1c4264d020"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b1c4264d310" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c426348e8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c426348e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c4279fcc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c4279fcc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b1c4279c020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c427c99f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c427c99f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b1c42aefe00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42aefe00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b1c42aec1a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b1c42af0750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b1c42af0750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b1c42b22020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42b22020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b1c42b22320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b1c42b74430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b1c42b74430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b1c42b74b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42b74b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b1c42b5b918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b1c42b5b918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b1c42b580a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b1c42b580a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b1c42b58470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b1c42b58470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b1c42b58be8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b1c42b58be8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b1c42b56020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b1c42b567b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b1c42b567b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b1c42d91310" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b1c42d8de20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b1c42dc6d98" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b1c431c1498" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b1c431c1498"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b1c431c1800" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b1c43240198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b1c43240198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b1c432404f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b1c4328ee68" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b1c4328ee68"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b1c4328a1e8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b1c43286e50" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b1c43286e50"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b1c432831b8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoCacheC" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc" abstract="">
      <documentation loc="35:../../lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b1c432ca020" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c432ca020"/></type-var>
        </typedef>
        <constant name="SIZE" ref="0x2b1c432ca340" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EAJobC" loc="42:../../../EAJobs/lib/EAJobC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="EAPeriodicJobConfigC" loc="42:../../../EAJobs/lib/EAPeriodicJobConfigC.nc" abstract="">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b1c41cbfc80" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41cbfc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cbe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b1c41cbd890" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c41cbd890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c41cbdbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1c41ccb9a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1c41ccb9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41ccbcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c41cbec10" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c41cbec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41ccc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b1c41cc6b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c41cc6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1c41ccb020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1c41ccb1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1c41ccb330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1c41ccb4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1c41ccb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b1c41cd3b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b1c41cd3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cd2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c41cd34f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c41cd34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cd3840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b1c41cd2398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b1c41cd2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cd26e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1c41cdf108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1c41cdf108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cdf458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1c41cd6a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41cd6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cd6d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b1c41cdb7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b1c41cdb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cdbb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b1c41ce75f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b1c41ce75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ce7948"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ce7ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ce7c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ce7de0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cdb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cdb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cdb330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cdb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1c41cdc428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41cdc428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41cdc778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b1c41d17c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b1c41d17c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d165e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d16770"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d168f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d16a80"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d16c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d16d90"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d27020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b1c41cfb7e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b1c41cfb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cfbb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cfbcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cfbe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0c020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0c330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b1c41d137e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b1c41d137e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d13b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d13cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d13e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d12020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d121a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d12330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d124b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d12640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b1c41d1c4d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b1c41d1c4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d1c820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d1c9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d1cb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d1ccb8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d1ce40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d1b020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d1b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d1b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b1c41d23af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b1c41d23af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d23e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d22020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d221a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d22330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d224b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d22640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d227c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d22950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b1c41ced4d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b1c41ced4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ced820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ced9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cedb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cedcb8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cede40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cec020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b1c41d1e1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b1c41d1e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d1e4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d1e678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d1e800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d1e988"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d1eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d1ec98"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d1ee20"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d1d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b1c41ceb7e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b1c41ceb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cebb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cebcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cebe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cea020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cea330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b1c41d03968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b1c41d03968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d03cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d03e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d02020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d021a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d02330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d024b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d02640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b1c41d0ac78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b1c41d0ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d09020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d091a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d09330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d094b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d09640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d097c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d09950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d09ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b1c41d10c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b1c41d10c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d0f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d0f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d0f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0f950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b1c41ce1c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b1c41ce1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ce0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ce01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ce0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ce04b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ce0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ce07c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ce0950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ce0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b1c41cf9c78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b1c41cf9c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf84b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf87c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf8950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b1c41d00e00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b1c41d00e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cff1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cff330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cff4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cff640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cff7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cff950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cffad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b1c41d061a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b1c41d061a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d064f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d06678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d06800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d06988"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d06b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d06c98"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d06e20"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b1c41d19968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b1c41d19968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d19cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d19e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d18020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d181a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d18330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d184b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d18640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d187c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b1c41d257e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b1c41d257e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d25b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d25cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d25e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d24020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d241a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d24330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d244b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d24640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b1c41d044d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b1c41d044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d04820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d049a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d04b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d04cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d04e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d14020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b1c41cef1a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b1c41cef1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cef4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cef678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cef800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cef988"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cefb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cefc98"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cefe20"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b1c41cf5348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b1c41cf5348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf5698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf5820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf59a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf5b30"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf5cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf5e40"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf4020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b1c41d274d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b1c41d274d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d27820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d279a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d27b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d27cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d27e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d26020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d26330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b1c41cf3658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b1c41cf3658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf39a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf3b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf3cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf3e40"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf21a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf2330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b1c41d0c968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b1c41d0c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d0ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d0ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d0b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0b640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b1c41d12968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b1c41d12968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d12cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d12e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d11020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d111a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d11330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d114b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d11640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d117c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b1c41d1b658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b1c41d1b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d1b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d1bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d1bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d1be40"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d1a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d1a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d1a330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b1c41cec658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b1c41cec658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cec9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cecb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ceccb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cece40"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ceb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ceb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ceb330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ceb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b1c41cea968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b1c41cea968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ceacb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ceae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ce9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ce91a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ce9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ce94b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ce9640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ce97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b1c41d02af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b1c41d02af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d02e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d01020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d011a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d01330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d014b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d01640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d017c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d01950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b1c41d09e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b1c41d09e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d081a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d08330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d084b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d08640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d087c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d08950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d08ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d08c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b1c41d0fe00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b1c41d0fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d0e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d0e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d0e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0e640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0e950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b1c41ce0e00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b1c41ce0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf1330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf1640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf1950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b1c41cf8e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b1c41cf8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf72e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf7470"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf75f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf7780"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf7908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf7a90"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf7c18"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b1c41cfe020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b1c41cfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cfe370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cfe4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cfe680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cfe808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cfe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cfeb18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cfeca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cfee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b1c41d18af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b1c41d18af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d18e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d17020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d171a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d17330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d174b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d17640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d177c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d17950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b1c41cfc348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b1c41cfc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cfc898"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cfca20"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cfcba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cfcd30"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cfb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cfb1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cfb330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cfb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b1c41d14658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b1c41d14658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d149a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d14b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d14cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d14e40"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d13020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d131a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d13330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b1c41d1d348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b1c41d1d348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d1d698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d1d820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d1d9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d1db30"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d1dcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d1de40"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d1c020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b1c41d24968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b1c41d24968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d24cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d24e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d23020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d231a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d23330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d234b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d23640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b1c41cee348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b1c41cee348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cee698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cee820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cee9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ceeb30"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ceecb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ceee40"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ced020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ced1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b1c41cf44d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b1c41cf44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf4820"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf49a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf4b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf4cb8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf4e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf3020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b1c41d0d020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b1c41d0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d0d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d0d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d0d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0d808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0db18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b1c41cf27e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b1c41cf27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf2b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf2cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf2e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d03020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d03330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d034b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d03640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b1c41d0baf0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b1c41d0baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d0be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d0a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d0a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d0a330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d0a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d0a640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d0a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d0a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b1c41d11af0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b1c41d11af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d11e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d10020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d101a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d10330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d104b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d10640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d107c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d10950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b1c41d1a7e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b1c41d1a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d1ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d1acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d1ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d19020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d19330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d194b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d19640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b1c41cdea70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b1c41cdea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cdedc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ce1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ce11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ce1330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ce14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ce1640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ce17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ce1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b1c41ce9af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b1c41ce9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ce9e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf9330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf9640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b1c41d01c78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b1c41d01c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d00020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d001a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d00330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d004b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d00640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d007c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d00950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d00ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b1c41d07020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b1c41d07020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d07370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d074f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d07680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d07808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d07990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d07b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d07ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d07e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b1c41d26658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b1c41d26658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d269a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d26b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d26cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d26e40"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d25020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d251a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d25330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d254b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b1c41d05348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b1c41d05348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d05698"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d05820"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d059a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d05b30"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d05cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d05e40"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d04020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b1c41cfd1a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b1c41cfd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cfd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cfd678"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cfd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cfd988"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cfdb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cfdc98"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cfde20"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cfc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b1c41cf0020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b1c41cf0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf0808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf0b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b1c41cf6100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b1c41cf6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41cf6450"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41cf65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41cf6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41cf68e8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41cf6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41cf6bf8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41cf6d80"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41cf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41d70120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41d70120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d70470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d705f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d70780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d70908"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d70a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d70c18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d70da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41d6c5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41d6c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d6c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d6ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d6cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d6cda0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d6b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d6b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d6b330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d6b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41d73dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41d73dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d72170"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d722f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d72480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d72608"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d72790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d72918"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d72aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d72c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41d6f2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41d6f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d6f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d6f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d6f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d6fa90"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d6fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d6fda0"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d6e020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41d6b740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41d6b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d6ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d6bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d6bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d6a020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d6a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d6a330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d6a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41d71020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41d71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d71370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d714f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d71680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d71808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d71990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d71b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d71ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d71e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41d6e430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41d6e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d6e780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d6e908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d6ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d6ec18"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d6eda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d6c020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41d6a8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41d6a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d6ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d6ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d7d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d7d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d7d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d7d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d7d640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c433b23e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c433b23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c433b2730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c433b28b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c433b2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c433b2bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c433b2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c433b1020"/>
        <function-ref name="set" scoped="" ref="0x2b1c433b11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c433b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43426480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43426480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434267d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43426958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43426ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43426c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43426df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43425020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434251a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43425330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43423480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43423480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434237d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43423958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43423ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43423c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43423df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43422020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434221a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43422330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43420480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43420480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434207d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43420958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43420ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43420c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43420df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4341f020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4341f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4341f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4341d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4341d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4341d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4341d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4341dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4341dc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4341ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4341c020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4341c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4341c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4341a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4341a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4341a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4341a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4341aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4341ac68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4341adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43419020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43419330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43417480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43417480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434177d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43417958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43417ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43417c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43417df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43416020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434161a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43416330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43414480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43414480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434147d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43414958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43414ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43414c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43414df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43413020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434131a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43413330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41d75bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41d75bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d74020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d741a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d74330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d744b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d74640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d747c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d74950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d74ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41d85020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41d85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d85370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d854f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d85680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d85808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d85990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d85b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d85ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d85e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41d78930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41d78930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d78c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d78e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d77020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d771a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d77330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d774b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d77640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d777c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41d74d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41d74d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d870d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d87260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d873e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d87570"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d876f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d87880"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d87a08"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d87b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41d84120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41d84120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d84470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d845f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d84780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d84908"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d84a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d84c18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d84da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41d77a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41d77a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d77da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d75020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d751a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d75330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d754b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d75640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d757c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d75950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41d87e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41d87e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d861a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d86330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d864b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d86640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d867c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d86950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d86ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d86c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41d832a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41d832a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d835f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d83780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d83908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d83a90"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d83c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d83da0"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d82020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d821a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c434313e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c434313e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c43431730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c434318b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43431a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43431bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c43431d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4342f020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4342f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4342f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4342d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4342d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4342d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4342d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4342dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4342dc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4342ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4342c020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4342c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4342c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4342a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4342a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4342a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4342a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4342aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4342ac68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4342adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43429020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434291a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43429330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43496480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43496480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434967d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43496958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43496ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43496c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43496df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43495020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434951a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43495330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43493480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43493480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434937d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43493958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43493ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43493c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43493df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43492020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434921a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43492330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43490480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43490480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434907d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43490958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43490ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43490c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43490df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4348f020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4348f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4348f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4348d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4348d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4348d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4348d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4348dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4348dc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4348ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4348c020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4348c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4348c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4348a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4348a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4348a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4348a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4348aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4348ac68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4348adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43489020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434891a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43489330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41d8e740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41d8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d8ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d8ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d8eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d8d020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d8d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8d330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41d8bbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41d8bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d8a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d8a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d8a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d8a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d8a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8a950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41d90500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41d90500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d90850"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d909d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d90b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d90ce8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d90e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8f020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41d8d8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41d8d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d8dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d8dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d8c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d8c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8c640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41d8ad60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41d8ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d890d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d89260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d893e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d89570"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d896f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d89880"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d89a08"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d89b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41d8f5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41d8f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d8f908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d8fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d8fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d8fda0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8e330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41d8ca50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41d8ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d8cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d8b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d8b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d8b330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d8b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d8b640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d8b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d8b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41d89e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41d89e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d881a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d88330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d884b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d88640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d887c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d88950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d88ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d88c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c434a93e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c434a93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434a9730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c434a98b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c434a9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c434a9bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c434a9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c434a7020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434a71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c434a7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c434a5480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c434a5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434a57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c434a5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c434a5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c434a5c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c434a5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c434a4020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c434a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c434a2480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c434a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434a27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c434a2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c434a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c434a2c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c434a2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c434a1020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434a11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c434a1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4349f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4349f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4349f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4349f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4349fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4349fc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4349fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4349e020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4349e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4349e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4349c480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4349c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4349c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4349c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4349cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4349cc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4349cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4349b020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4349b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4349b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43499480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43499480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c434997d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43499958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43499ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43499c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43499df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43498020"/>
        <function-ref name="set" scoped="" ref="0x2b1c434981a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43498330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43507480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43507480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435077d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43507958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43507ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43507c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43507df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43506020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435061a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43506330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43504480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43504480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435047d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43504958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43504ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43504c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43504df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43503020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435031a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43503330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41d93120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41d93120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d93470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d935f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d93780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d93908"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d93a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d93c18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d93da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41da45b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41da45b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da4908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da4a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da4c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da4da0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da31a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da3330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41d96e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41d96e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d951c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d95348"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d954d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d95658"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d957e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d95968"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d95af0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d95c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41d922a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41d922a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d925f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d92780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d92908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d92a90"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d92c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d92da0"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da5020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41da3740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41da3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da3a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da3c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da1020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da1330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41d94020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41d94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41d94370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41d944f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41d94680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41d94808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41d94990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41d94b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41d94ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41d94e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41da5430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41da5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da5780"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da5908"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da5a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da5c18"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da5da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da4020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41da18c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41da18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da01a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da04b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da0640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c435253e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c435253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c43525730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c435258b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43525a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43525bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c43525d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43524020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435241a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43524330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43522480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43522480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435227d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43522958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43522ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43522c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43522df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43520020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435201a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43520330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4351e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4351e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4351e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4351e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4351eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4351ec68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4351edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4351d020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4351d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4351d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4351b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4351b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4351b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4351b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4351bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4351bc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4351bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4351a020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4351a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4351a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43518480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43518480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435187d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43518958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43518ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43518c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43518df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43517020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435171a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43517330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43515480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43515480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435157d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43515958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43515ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43515c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43515df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43514020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43514330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43512480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43512480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435127d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43512958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43512ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43512c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43512df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43511020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435111a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43511330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4350f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4350f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4350f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4350f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4350fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4350fc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4350fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4350e020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4350e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4350e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41dadbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41dadbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dac020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dac1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dac330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dac4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dac640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dac7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dac950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dacad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41da8020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41da8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da8808"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da8b18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41daf930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41daf930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dafc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dafe08"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dae020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dae1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dae330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dae4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dae640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41dacd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41dacd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41daa0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41daa260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41daa3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41daa570"/>
        <function-ref name="get" scoped="" ref="0x2b1c41daa6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41daa880"/>
        <function-ref name="set" scoped="" ref="0x2b1c41daaa08"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41daab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41da7120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41da7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da7470"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da75f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da7780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da7908"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da7c18"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41daea50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41daea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41daeda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dad020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dad1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dad330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dad4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dad640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dad7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dad950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41daae18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41daae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da9640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da9950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41da9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41da9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41da62a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41da62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41da65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41da6780"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41da6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41da6a90"/>
        <function-ref name="get" scoped="" ref="0x2b1c41da6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41da6da0"/>
        <function-ref name="set" scoped="" ref="0x2b1c41db9020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41db91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c435a53e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c435a53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435a5730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c435a58b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c435a5a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c435a5bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c435a5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c435a4020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435a41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c435a4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c435a2480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c435a2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435a27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c435a2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c435a2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c435a2c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c435a2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c435a0020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435a01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c435a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4359e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4359e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4359e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4359e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4359eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4359ec68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4359edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4359d020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4359d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4359d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4359b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4359b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4359b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4359b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4359bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4359bc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4359bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4359a020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4359a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4359a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43598480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43598480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435987d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43598958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43598ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43598c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43598df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43597020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43597330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43595480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43595480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435957d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43595958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43595ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43595c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43595df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43594020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435941a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43594330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43592480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43592480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c435927d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43592958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43592ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43592c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43592df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43591020"/>
        <function-ref name="set" scoped="" ref="0x2b1c435911a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43591330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4358f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4358f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4358f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4358f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4358fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4358fc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4358fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4358e020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4358e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4358e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b1c41db1740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b1c41db1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41db1a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41db1c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41db1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41db0020"/>
        <function-ref name="get" scoped="" ref="0x2b1c41db01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41db0330"/>
        <function-ref name="set" scoped="" ref="0x2b1c41db04b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41db0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b1c41dc2bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b1c41dc2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dc1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dc11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dc1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dc14b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dc1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dc17c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dc1950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dc1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b1c41db4500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b1c41db4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41db4850"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41db49d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41db4b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41db4ce8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41db4e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41db2020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41db21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41db2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b1c41db08c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b1c41db08c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41db0c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41db0da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dc3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dc31a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dc3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dc34b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dc3640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dc37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b1c41dc1d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b1c41dc1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dc00d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dc0260"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dc03e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dc0570"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dc06f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dc0880"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dc0a08"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dc0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b1c41db25b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b1c41db25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41db2908"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41db2a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41db2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41db2da0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41db1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41db11a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41db1330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41db14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b1c41dc3a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b1c41dc3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dc3da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dc2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dc21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dc2330"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dc24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dc2640"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dc27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dc2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b1c41dc0e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b1c41dc0e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dbf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dbf330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dbf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dbf640"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dbf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dbf950"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dbfad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dbfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c436273e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c436273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c43627730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c436278b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43627a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43627bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c43627d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43626020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436261a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43626330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43624480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43624480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c436247d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43624958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43624ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43624c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43624df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43623020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436231a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43623330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43621480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43621480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c436217d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43621958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43621ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43621c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43621df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4361f020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4361f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4361f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4361d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4361d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4361d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4361d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4361dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4361dc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4361ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4361c020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4361c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4361c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c4361a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c4361a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4361a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4361a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4361aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4361ac68"/>
        <function-ref name="get" scoped="" ref="0x2b1c4361adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43619020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43619330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43617480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43617480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c436177d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43617958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43617ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43617c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43617df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43616020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436161a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43616330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43614480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43614480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c436147d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43614958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43614ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43614c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43614df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43613020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436131a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43613330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c43611480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c43611480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c436117d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43611958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43611ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43611c68"/>
        <function-ref name="get" scoped="" ref="0x2b1c43611df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43610020"/>
        <function-ref name="set" scoped="" ref="0x2b1c436101a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43610330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41dcc3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41dcc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dcc730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dcc8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dcca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dccbc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dccd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41de1020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41de11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41de1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41dddc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41dddc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ddc020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ddc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41ddc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41ddc4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41ddc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41ddc7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ddc950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41ddcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41ded3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41ded3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41ded730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41ded8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41deda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dedbc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dedd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dec020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41de9c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41de9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41de8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41de81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41de8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41de84b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41de8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41de87c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41de8950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41de8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41df93e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41df93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41df9730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41df98b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41df9a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41df9bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41df9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41df8020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41df81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41df8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41df4c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41df4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41df3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41df31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41df3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41df34b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41df3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41df37c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41df3950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41df3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41def480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41def480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41def7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41def958"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41defae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41defc68"/>
        <function-ref name="get" scoped="" ref="0x2b1c41defdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e04020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e00c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e00c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dff020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dff4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41dff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41dff7c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41dff950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41dffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41dfa520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41dfa520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41dfa870"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41dfa9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41dfab80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41dfad08"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e0f1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e0f330"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e0f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e0ccd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e0ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41e0b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41e0b228"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41e0b3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41e0b538"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e0b6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e0b848"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e0b9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e0bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e063e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e063e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41e06730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41e068b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41e06a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41e06bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e06d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e05020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e051a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e05330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e17c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e17c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41e16020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41e161a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41e16330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41e164b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e16640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e167c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e16950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e16ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e123e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e123e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41e12730"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41e128b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41e12a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41e12bc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e12d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e11020"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e111a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e11330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b1c41e23c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b1c41e23c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c41e22020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c41e221a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c41e22330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c41e224b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41e22640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c41e227c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41e22950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c41e22ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c41e564b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c41e564b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41e56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b1c41e56ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c41e56ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1c41e56e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1c41e55020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1c41e551a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1c41e55330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1c41e554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b1c41e7e418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c41e7e418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41e7e768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b1c41ccdc38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c41ccdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c41e80020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b1c41e80ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1c41e80ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41e7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b1c41e80308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1c41e80308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41e80658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1c41e807e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1c41e80968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b1c41afa1c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41afa1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c41afa518"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c41afa6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b1c41b215c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1c41b215c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41b21918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1c41b21aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1c41b21c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b1c41bcbc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b1c41bcbc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c41bd8020"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c41bd81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b1c41bd5168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b1c41bd5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b1c41bd54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b1c41bccd88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b1c41bccd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41bcb170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b1c41bcb2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b1c41bcb480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b1c41bf0988" loc="88:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1c41bf0988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b1c41bf0cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b1c41b20e30" loc="84:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b1c41b20e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b1c41bf41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b1c41bf13c8" loc="85:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1c41bf13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1c41bf1718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b1c41ec5c48" loc="66:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b1c41ec5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b1c41ec8020"/>
        <function-ref name="setRoot" scoped="" ref="0x2b1c41ec81a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b1c41ec8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x2b1c41f096d8" loc="75:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f096d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c41f09a28"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b1c41f09bb0"/>
        <function-ref name="setType" scoped="" ref="0x2b1c41f09d38"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b1c41ef9020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c41ef91a8"/>
        <function-ref name="getType" scoped="" ref="0x2b1c41ef9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b1c41eb3818" loc="61:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c41eb3818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c41eb3b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c41ed0020" loc="69:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c41ed0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c41ed0370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c41ed04f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41ed0680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41ed0808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c41ed0990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b1c41f047e0" loc="80:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c41f047e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c41f083a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoDebugReporting" ref="0x2b1c41f05020" loc="87:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b1c41f05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f05370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b1c41ec96f0" loc="64:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b1c41ec96f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c41ec9a40"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c41ec9bc8"/>
        <function-ref name="start" scoped="" ref="0x2b1c41ec9d50"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41eb6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b1c41ecf1c8" loc="70:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c41ecf1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c41ecf518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41ecf6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41ecf828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoRouting" ref="0x2b1c41ee54b0" loc="68:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRouting" scoped="" ref="0x2b1c41ee54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingClient"/>
      </instance>
      <interface-functions>
        <function-ref name="noMorePacketNotification" scoped="" ref="0x2b1c41ee5800"/>
        <function-ref name="confirmCommandExecution" scoped="" ref="0x2b1c41ee5988"/>
        <function-ref name="newCommandNotification" scoped="" ref="0x2b1c41ee5b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b1c41efa648" loc="74:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c41efa648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41efaa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1c41f06ae8" loc="77:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c41f06ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c41f06e38"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c41ef7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoStatsReporting" ref="0x2b1c41f08900" loc="84:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b1c41f08900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f08c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c41edd080" loc="71:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c41edd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c41edd3d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c41edd558"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c41edd6e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c41edd868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c41edd9f0"/>
        <function-ref name="get" scoped="" ref="0x2b1c41eddb78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c41eddd00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c41ef14b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c41ef1020"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c41ef11a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c41ef1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BootTimer" ref="0x2b1c41ebc680" loc="63:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BootTimer" scoped="" ref="0x2b1c41ebc680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c41eb88f0"/>
        <function-ref name="fired" scoped="" ref="0x2b1c41eb9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c41eb9d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c41eb98c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c41eb71c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c41eb8d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c41eb9470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c41ebb1f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c41eb8320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c41ebb698"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41ebbb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingControl" ref="0x2b1c41ec7b28" loc="65:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b1c41ec7b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c41ec7e78"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41ecd030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Value" ref="0x2b1c41efcce0" loc="73:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b1c41efcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:65" alignment="I:1"><nx_struct-ref name="CloudCoverMAX" ref="0x2b1c41ea6198"/>
            <typename><typedef-ref name="CloudCoverMAX" ref="0x2b1c41ea5438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b1c41efb2a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c41eff8f0"/>
        <function-ref name="set" scoped="" ref="0x2b1c41effd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c41ebf4f8" loc="62:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c41ebf4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c41ebd768"/>
        <function-ref name="fired" scoped="" ref="0x2b1c41eb1e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c41ebeb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c41ebe728"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c41ebc088"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c41ebdbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c41ebe2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c41eb1088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c41ebd198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c41eb1528"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41eb19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoConfig" ref="0x2b1c41ed1a08" loc="67:TestC.nc">
      <component-ref qname="TestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c41ed1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c41ed1d58"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c41ec6020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c41ec61a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c41ec6330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c41ec64b8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c41ec6640"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c41ec67c8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c41ec6950"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c41ec6ad8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c41ec6c60"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c41ec6de8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c41ec2020"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c41ec21a8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c41ec2430"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c41ec25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b1c41f3cd60" loc="54:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b1c41f3cd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b1c41f390d8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b1c41f39260"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b1c41f393e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingRoot" ref="0x2b1c41f4b410" loc="58:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c41f4b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
      </instance>
      <interface-functions>
        <function-ref name="setCommand" scoped="" ref="0x2b1c41f4b760"/>
        <function-ref name="resetAndAddDestination" scoped="" ref="0x2b1c41f4b8e8"/>
        <function-ref name="addDestination" scoped="" ref="0x2b1c41f4ba70"/>
        <function-ref name="resetBloomFilter" scoped="" ref="0x2b1c41f4bbf8"/>
        <function-ref name="setBroadcast" scoped="" ref="0x2b1c41f4bd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b1c41f48310" loc="68:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f48310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c41f48660"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b1c41f487e8"/>
        <function-ref name="setType" scoped="" ref="0x2b1c41f48970"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b1c41f48af8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c41f48c80"/>
        <function-ref name="getType" scoped="" ref="0x2b1c41f48e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingClient" ref="0x2b1c41f38b20" loc="57:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c41f38b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingClient"/>
      </instance>
      <interface-functions>
        <function-ref name="noMorePacketNotification" scoped="" ref="0x2b1c41f38e70"/>
        <function-ref name="confirmCommandExecution" scoped="" ref="0x2b1c41f37020"/>
        <function-ref name="newCommandNotification" scoped="" ref="0x2b1c41f371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b1c41f49020" loc="64:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b1c41f49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b1c41f49370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c41f4a1c8" loc="63:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c41f4a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f4a518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x2b1c41f38020" loc="56:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b1c41f38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c41f38370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c41f384f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c41f38680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41f38808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c41f36630" loc="61:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c41f36630"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c41f36980"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f36b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f36c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c41f49618" loc="67:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c41f49618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c41f49968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c41f49af0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f49c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f49e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c41f48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b1c41f5ab08" loc="69:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c41f5ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b1c41f43bc8"/>
        <function-ref name="init" scoped="" ref="0x2b1c41f436f0"/>
        <function-ref name="creationTime" scoped="" ref="0x2b1c41f5d0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c41f4f4e8" loc="62:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c41f4f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f4f838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoTrafficStatistics" ref="0x2b1c41f57020" loc="73:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b1c41f57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c41f57370"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c41f574f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c41f57680"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c41f57808"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c41f57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingControl" ref="0x2b1c41f39788" loc="55:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b1c41f39788"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c41f39ad8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41f39c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b1c41f5d600" loc="72:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c41f5d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c41f5da50"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c41f5dbd8"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c41f5dd60"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c41f59020"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c41f591a8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c41f59330"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c41f594b8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c41f59640"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c41f597c8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c41f59950"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c41f59ad8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c41f59c60"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c41f59de8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c41f58120"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c41f582a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b1c41f67db0" loc="48:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b1c41f67db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b1c41f66170"/>
        <function-ref name="setRoot" scoped="" ref="0x2b1c41f662f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b1c41f66480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c41f80a60" loc="76:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c41f80a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c41f80db0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f6f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f6f1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c41f6f330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c41f6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b1c41f617a8" loc="58:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b1c41f617a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c41f61af8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b1c41f61c80"/>
        <function-ref name="setType" scoped="" ref="0x2b1c41f61e08"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b1c41f60020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c41f601a8"/>
        <function-ref name="getType" scoped="" ref="0x2b1c41f60330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c41f6f7f0" loc="77:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c41f6f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f6fb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="selfReceiveTask" ref="0x2b1c41f96d58" loc="107:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="selfReceiveTask" scoped="" ref="0x2b1c41f96d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c41fb00d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c41fb0260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatus" ref="0x2b1c41f79a40" loc="61:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b1c41f79a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b1c41f79d90"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b1c41f5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b1c41f62418" loc="54:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b1c41f62418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b1c41f62768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c41f62a10" loc="57:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c41f62a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c41f62d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c41f61020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f611a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f61330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c41f614b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c41f63868" loc="53:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c41f63868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f63bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c41f66cf8" loc="51:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c41f66cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c41f640a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f64228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f643b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b1c41fa0020" loc="85:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c41fa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b1c41f9f088"/>
        <function-ref name="init" scoped="" ref="0x2b1c41fa0b68"/>
        <function-ref name="creationTime" scoped="" ref="0x2b1c41f9f560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2b1c41f94460" loc="80:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2b1c41f94460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41e9aa28"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b1c41e9ad80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b1c41f81d10"/>
        <function-ref name="enqueue" scoped="" ref="0x2b1c41f7fa30"/>
        <function-ref name="element" scoped="" ref="0x2b1c41f7b088"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c41f818c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c41f7f3d0"/>
        <function-ref name="empty" scoped="" ref="0x2b1c41f81020"/>
        <function-ref name="size" scoped="" ref="0x2b1c41f81470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c41f9e9b0" loc="91:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c41f9e9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c41f9ed00"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c41f9d020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c41f9d1a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c41f9d330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c41f9d4b8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c41f9d640"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c41f9d7c8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c41f9d950"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c41f9dad8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c41f9dc60"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c41f9dde8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c41f98020"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c41f981a8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c41f98430"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c41f985b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c41f759b0" loc="75:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c41f759b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c41f75d00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c41f72020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c41f721a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c41f72330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c41f724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c41f67020" loc="46:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c41f67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c41f67370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CacheCompare" ref="0x2b1c41f76ab8" loc="64:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b1c41f76ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41e9bbf0"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b1c41e9a0d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b1c41f5e658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c41f64b80" loc="52:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c41f64b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c41f63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingStateInternal" ref="0x2b1c41f73768" loc="67:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingStateInternal" scoped="" ref="0x2b1c41f73768"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingStateInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacketRoutingInformationVersion" scoped="" ref="0x2b1c41f73ab8"/>
        <function-ref name="setRoutingInformationVersion" scoped="" ref="0x2b1c41f73c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b1c41fa6368" loc="160:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b1c41fa6368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c41fa66b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c41fa6840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x2b1c41f8a6c0" loc="81:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x2b1c41f8a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
            <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c41f90730"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c41f91c10"/>
        <function-ref name="empty" scoped="" ref="0x2b1c41f91370"/>
        <function-ref name="put" scoped="" ref="0x2b1c41f90088"/>
        <function-ref name="size" scoped="" ref="0x2b1c41f917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1c41f67620" loc="47:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1c41f67620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c41f67970"/>
        <function-ref name="stop" scoped="" ref="0x2b1c41f67af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b1c41f99b48" loc="88:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c41f99b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b1c41f9e020"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b1c41f9e1a8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b1c41f9e330"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b1c41f9e4b8"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b1c41f9e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatistics" ref="0x2b1c41f70788" loc="70:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatistics" scoped="" ref="0x2b1c41f70788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b1c41f502a8"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41f56e10"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c41f75458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHistory" ref="0x2b1c41fa13b0" loc="83:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHistory" scoped="" ref="0x2b1c41fa13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41e9bbf0"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b1c41e9a0d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b1c41f88020"/>
        <function-ref name="flush" scoped="" ref="0x2b1c41f88960"/>
        <function-ref name="lookup" scoped="" ref="0x2b1c41f884c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c4200a808" loc="44:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c4200a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c4200ab58"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c4200ace0"/>
        <function-ref name="start" scoped="" ref="0x2b1c4200ae68"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42025020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingRoot" ref="0x2b1c42023320" loc="50:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42023320"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
      </instance>
      <interface-functions>
        <function-ref name="setCommand" scoped="" ref="0x2b1c42023670"/>
        <function-ref name="resetAndAddDestination" scoped="" ref="0x2b1c420237f8"/>
        <function-ref name="addDestination" scoped="" ref="0x2b1c42023980"/>
        <function-ref name="resetBloomFilter" scoped="" ref="0x2b1c42023b08"/>
        <function-ref name="setBroadcast" scoped="" ref="0x2b1c42023c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b1c42020720" loc="61:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b1c42020720"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b1c42020a70"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b1c42020bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c420252a8" loc="46:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c420252a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c420255f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42025780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42025908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42025a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42025c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42024020" loc="47:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42024020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42024370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c420244f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42024680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42024808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42024990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingClient" ref="0x2b1c42022020" loc="51:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42022020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingClient"/>
      </instance>
      <interface-functions>
        <function-ref name="noMorePacketNotification" scoped="" ref="0x2b1c42022370"/>
        <function-ref name="confirmCommandExecution" scoped="" ref="0x2b1c420224f8"/>
        <function-ref name="newCommandNotification" scoped="" ref="0x2b1c42022680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b1c42022c08" loc="58:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42022c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b1c42021cc0"/>
        <function-ref name="init" scoped="" ref="0x2b1c420217e8"/>
        <function-ref name="creationTime" scoped="" ref="0x2b1c420201d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoPathCost" ref="0x2b1c4201a360" loc="62:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c4201a360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b1c4201a6b0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b1c4201a838"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b1c4201a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42024c20" loc="48:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42024c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42023020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStatistics" ref="0x2b1c4201dbc0" loc="64:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStatistics" scoped="" ref="0x2b1c4201dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c4201c020"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c4201c1a8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c4201c330"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c4201c4b8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c4201c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingState" ref="0x2b1c4201ca58" loc="65:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingState" scoped="" ref="0x2b1c4201ca58"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingStateInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacketRoutingInformationVersion" scoped="" ref="0x2b1c4201cda8"/>
        <function-ref name="setRoutingInformationVersion" scoped="" ref="0x2b1c42019020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b1c4201adb0" loc="63:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c4201adb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b1c4201d170"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b1c4201d2f8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b1c4201d480"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b1c4201d608"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b1c4201d790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c4202be70" loc="56:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c4202be70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c4202a1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c4202a370"/>
        <function-ref name="start" scoped="" ref="0x2b1c4202a4f8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4202a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b1c42051020" loc="77:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b1c42051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b1c42051370"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b1c420514f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c4202a908" loc="58:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c4202a908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4202ac58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4202ade0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42029020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c420291a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42029330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b1c42052020" loc="74:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c42052020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42052ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b1c4205c060" loc="86:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b1c4205c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4205c3b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4205c538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4205c6c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4205c848"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4205c9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1c42069e60" loc="99:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c42069e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c420681e8"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c42068370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c420295a8" loc="59:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c420295a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c420298f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42029a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42029c08"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42029d90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42028020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b1c42066020" loc="103:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b1c42066020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c42066370"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c420664f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c42066680"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c42066808"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c42066990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c4206a1c8" loc="98:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c4206a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c4206a518"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c4206a6a0"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c4206a828"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c4206a9b0"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c4206ab38"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c4206acc0"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c4206ae48"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c42069020"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c420691a8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c42069330"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c420694b8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c42069640"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c420697c8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c42069a50"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c42069bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42051840" loc="80:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42051840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42051b90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42051d18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42050020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c420501a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42050330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x2b1c420ae830" loc="391:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x2b1c420ae830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c420aeb80"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c420aed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BackoffConfig" ref="0x2b1c420436e0" loc="62:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffConfig" scoped="" ref="0x2b1c420436e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b1c42043a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b1c4203b128" loc="70:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b1c4203b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c4203b478"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c4203b600"/>
        <function-ref name="start" scoped="" ref="0x2b1c4203b788"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4203b910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketStatistics" ref="0x2b1c42044020" loc="66:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStatistics" scoped="" ref="0x2b1c42044020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b1c41f68b10"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b1c41f68188"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42044b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b1c4205d1c0" loc="81:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2b1c4205d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c4205d610"/>
        <function-ref name="source" scoped="" ref="0x2b1c4205d798"/>
        <function-ref name="address" scoped="" ref="0x2b1c4205d920"/>
        <function-ref name="destination" scoped="" ref="0x2b1c4205daa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c4205dc30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c4205ddb8"/>
        <function-ref name="type" scoped="" ref="0x2b1c4204f020"/>
        <function-ref name="setType" scoped="" ref="0x2b1c4204f1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c4204f330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c4204f4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c4204f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b1c42071360" loc="85:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b1c42071360"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c420716b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42071838"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c420719c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42071b48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42071cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c420282b0" loc="60:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c420282b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42028600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VerSize" ref="0x2b1c42082720" loc="106:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VerSize" scoped="" ref="0x2b1c42082720"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDataSizeInterface"/>
      </instance>
      <interface-functions>
        <function-ref name="getVersionSize" scoped="" ref="0x2b1c42082a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoDI" ref="0x2b1c4203ca78" loc="63:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDI" scoped="" ref="0x2b1c4203ca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDataInterface"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedBeacon" scoped="" ref="0x2b1c4203cdc8"/>
        <function-ref name="receivedData" scoped="" ref="0x2b1c42045020"/>
        <function-ref name="appendDataVer" scoped="" ref="0x2b1c420451a8"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2b1c42045330"/>
        <function-ref name="aboutToSendData" scoped="" ref="0x2b1c420454b8"/>
        <function-ref name="aboutToSendBeacon" scoped="" ref="0x2b1c42045640"/>
        <function-ref name="getDataPayload" scoped="" ref="0x2b1c420457c8"/>
        <function-ref name="appendBeacon" scoped="" ref="0x2b1c42045950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSnoop" ref="0x2b1c4204e790" loc="84:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSnoop" scoped="" ref="0x2b1c4204e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4204eae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c420685e8" loc="101:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c420685e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42068b38"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42068cc0"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42068e48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42067020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c420671a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42067330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c420674b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42067ad8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42067640"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c420677c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42067950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingState" ref="0x2b1c42070950" loc="95:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingState" scoped="" ref="0x2b1c42070950"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingStateInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getPacketRoutingInformationVersion" scoped="" ref="0x2b1c42070ca0"/>
        <function-ref name="setRoutingInformationVersion" scoped="" ref="0x2b1c42070e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b1c4204e0f0" loc="83:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b1c4204e0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4204e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b1c4204f9b8" loc="82:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b1c4204f9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4204fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PathCost" ref="0x2b1c4205cd68" loc="89:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathCost" scoped="" ref="0x2b1c4205cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b1c4205b0f0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b1c4205b278"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b1c4205b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b1c42066d80" loc="104:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b1c42066d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b1c42065170"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b1c420652f8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b1c42065480"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b1c42065608"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b1c42065790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b1c4206fd20" loc="90:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c4206fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c420720a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c4203bcd8" loc="71:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c4203bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42054088"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42038688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c42037470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c42037020"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c42054928"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c420544d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42038ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c420398b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c42037a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c42039d58"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42038238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Routing" ref="0x2b1c4206bd08" loc="94:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x2b1c4206bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getCurrentBloomFilter" scoped="" ref="0x2b1c420700a0"/>
        <function-ref name="packetAvailableForUs" scoped="" ref="0x2b1c42070228"/>
        <function-ref name="updateBloomFilter" scoped="" ref="0x2b1c420703b0"/>
        <function-ref name="getRoutingVersionNumber" scoped="" ref="0x2b1c42070538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42131538" loc="46:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42131538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42131888"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42131a10"/>
        <function-ref name="start" scoped="" ref="0x2b1c42131b98"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42131d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1c42145850" loc="65:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42145850"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c42145ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c42149680" loc="51:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c42149680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c421499d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c4212e4d0" loc="48:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c4212e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4212e820"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4212e9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4212eb30"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4212ecb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4212ee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c4212c1c8" loc="50:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c4212c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4212c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c42149c58" loc="53:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42149c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4212b020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4212b1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4212b330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4212b4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4212b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b1c4213b260" loc="67:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b1c4213b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c4215d700"/>
        <function-ref name="clear" scoped="" ref="0x2b1c4215dde0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c4215d020"/>
        <function-ref name="set" scoped="" ref="0x2b1c421554f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1c42154130" loc="68:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c42154130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c42153588"/>
        <function-ref name="clear" scoped="" ref="0x2b1c42153c68"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c42154e80"/>
        <function-ref name="set" scoped="" ref="0x2b1c42151380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c4212d5f8" loc="49:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c4212d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4212d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1c4213d418" loc="58:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1c4213d418"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1c4213d768"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1c4213d8f0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1c4213da78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1c4213dc00"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1c4213dd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c4212b8e0" loc="54:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c4212b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c4212bc30"/>
        <function-ref name="source" scoped="" ref="0x2b1c4212bdb8"/>
        <function-ref name="address" scoped="" ref="0x2b1c4212a020"/>
        <function-ref name="destination" scoped="" ref="0x2b1c4212a1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c4212a330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c4212a4b8"/>
        <function-ref name="type" scoped="" ref="0x2b1c4212a640"/>
        <function-ref name="setType" scoped="" ref="0x2b1c4212a7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c4212a950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c4212aad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c4212ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b1c4213ce48" loc="59:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4213ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b1c421451c0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c42145348"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c421454d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42150548" loc="46:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42150548"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42150898"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42150a20"/>
        <function-ref name="start" scoped="" ref="0x2b1c42150ba8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42150d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b1c42160988" loc="67:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c42160988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42181020"/>
        <function-ref name="get" scoped="" ref="0x2b1c4215ea70"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c4215e560"/>
        <function-ref name="set" scoped="" ref="0x2b1c42181530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c4216fcd0" loc="51:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4216fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c4216d0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c4216d388" loc="57:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c4216d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4216d6d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4216d860"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4216d9e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4216db70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4216dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c4214d4d0" loc="48:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c4214d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4214d820"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4214d9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4214db30"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4214dcb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4214de40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c4216f1c8" loc="50:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c4216f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4216f518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b1c42162658" loc="66:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c42162658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42161c40"/>
        <function-ref name="get" scoped="" ref="0x2b1c42161730"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42161220"/>
        <function-ref name="set" scoped="" ref="0x2b1c42160190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c4214c5f8" loc="49:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c4214c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4214c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b1c4217e8b0" loc="71:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c4217e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c4217dd40"/>
        <function-ref name="clear" scoped="" ref="0x2b1c4217c458"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c4217d660"/>
        <function-ref name="set" scoped="" ref="0x2b1c4217cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b1c4217f4e0" loc="70:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4217f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4217e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b1c421692c0" loc="65:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c421692c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42168898"/>
        <function-ref name="get" scoped="" ref="0x2b1c42168388"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42169e40"/>
        <function-ref name="set" scoped="" ref="0x2b1c42168da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1c4216b620" loc="62:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1c4216b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1c4216b970"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1c4216baf8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1c4216bc80"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1c4216be08"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1c4216a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c4216c020" loc="58:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c4216c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c4216c370"/>
        <function-ref name="source" scoped="" ref="0x2b1c4216c4f8"/>
        <function-ref name="address" scoped="" ref="0x2b1c4216c680"/>
        <function-ref name="destination" scoped="" ref="0x2b1c4216c808"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c4216c990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c4216cb18"/>
        <function-ref name="type" scoped="" ref="0x2b1c4216cca0"/>
        <function-ref name="setType" scoped="" ref="0x2b1c4216ce28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c4216b020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c4216b1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c4216b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b1c4216a2e8" loc="63:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4216a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b1c4216a638"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c4216a7c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c4216a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1c42181b78" loc="68:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42181b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c4217f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1c4217a758" loc="72:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c4217a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c42179c58"/>
        <function-ref name="clear" scoped="" ref="0x2b1c42178380"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c42179578"/>
        <function-ref name="set" scoped="" ref="0x2b1c42178a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42176b78" loc="42:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42176b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42173020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c421731a8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42173330"/>
        <function-ref name="stop" scoped="" ref="0x2b1c421734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b1c421b3d28" loc="81:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c421b3d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c421b0388"/>
        <function-ref name="get" scoped="" ref="0x2b1c421b2e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c421b28f0"/>
        <function-ref name="set" scoped="" ref="0x2b1c421b0898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b1c4218e710" loc="61:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b1c4218e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c4218ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b1c4218d4b8" loc="63:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b1c4218d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c4218d908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c4218da90"/>
        <function-ref name="request" scoped="" ref="0x2b1c4218dc18"/>
        <function-ref name="granted" scoped="" ref="0x2b1c4218dda0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42186020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c42170498" loc="48:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c42170498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c421707e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42173c30" loc="45:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42173c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42172020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c421721a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42172330"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c421724b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42172640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c42171968" loc="47:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c42171968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42171cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b1c4219c308" loc="65:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c4219c308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b1c4219c658"/>
        <function-ref name="address" scoped="" ref="0x2b1c4219c7e0"/>
        <function-ref name="destination" scoped="" ref="0x2b1c4219c968"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c4219caf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c4219cc78"/>
        <function-ref name="pan" scoped="" ref="0x2b1c4219ce00"/>
        <function-ref name="setPan" scoped="" ref="0x2b1c421a5020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c421a51a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c421a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b1c421a56e0" loc="66:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b1c421a56e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c421a5a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c421a5bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c421a5d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c421a4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c421a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b1c421b6870" loc="80:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c421b6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c421b3020"/>
        <function-ref name="get" scoped="" ref="0x2b1c421b59a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c421b5490"/>
        <function-ref name="set" scoped="" ref="0x2b1c421b3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1c421941d8" loc="70:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c421941d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b1c42194528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b1c421946b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b1c42194838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b1c421949c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b1c421909e8" loc="55:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b1c421909e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42190d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4218f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4218f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4218f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4218f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42172dc0" loc="46:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42172dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42171170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b1c421aec38" loc="85:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c421aec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c421ab0f8"/>
        <function-ref name="clear" scoped="" ref="0x2b1c421ab7d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c421ac9f0"/>
        <function-ref name="set" scoped="" ref="0x2b1c421aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b1c421af830" loc="84:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c421af830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c421ae410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b1c4219a518" loc="79:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c4219a518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c421b7ae0"/>
        <function-ref name="get" scoped="" ref="0x2b1c421b75d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c421b70c0"/>
        <function-ref name="set" scoped="" ref="0x2b1c421b6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b1c42187250" loc="59:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c42187250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c421875a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42187728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c421878b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42187a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42187bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b1c421921c8" loc="51:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c421921c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42192518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1c42194c70" loc="71:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1c42194c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1c4219b020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1c4219b1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1c4219b330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1c4219b4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1c4219b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b1c4219b968" loc="77:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b1c4219b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b1c4219bcb8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c4219be40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c4219a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c42191378" loc="54:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c42191378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c421916c8"/>
        <function-ref name="source" scoped="" ref="0x2b1c42191850"/>
        <function-ref name="address" scoped="" ref="0x2b1c421919d8"/>
        <function-ref name="destination" scoped="" ref="0x2b1c42191b60"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42191ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42191e70"/>
        <function-ref name="type" scoped="" ref="0x2b1c42190020"/>
        <function-ref name="setType" scoped="" ref="0x2b1c421901a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c42190330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c421904b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c42190640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1c421aabf0" loc="86:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c421aabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c421a7300"/>
        <function-ref name="clear" scoped="" ref="0x2b1c421a79e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c421a8be8"/>
        <function-ref name="set" scoped="" ref="0x2b1c421a60f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b1c4218e020" loc="60:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c4218e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4218e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1c421af020" loc="82:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c421af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c421af370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b1c42192d58" loc="52:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c42192d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c421910d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b1c421d0c00" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b1c421d0c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b1c421cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b1c421d57b0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b1c421d57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b1c421d5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b1c421e8130" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b1c421e8130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c421e8480"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b1c421e8608"/>
        <function-ref name="source" scoped="" ref="0x2b1c421e8790"/>
        <function-ref name="destination" scoped="" ref="0x2b1c421e8918"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c421e8aa0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c421e8c28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c421e8db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b1c421d3020" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b1c421d3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b1c421d3370"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b1c421d34f8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b1c421d3680"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b1c421d3808"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b1c421d3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b1c42213bd8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42213bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1c421f1020"/>
        <function-ref name="wait" scoped="" ref="0x2b1c421f11a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c421f1330"/>
        <function-ref name="isFree" scoped="" ref="0x2b1c421f14b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b1c421f1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b1c4220de08" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b1c4220de08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c421f01a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c421f0330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c421f04b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c421f0640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c421f07c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c421f0950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b1c42212020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42212020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c4220c578"/>
        <function-ref name="clear" scoped="" ref="0x2b1c4220cc58"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c42212e70"/>
        <function-ref name="set" scoped="" ref="0x2b1c4220a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b1c421c1928" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c421c1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c421c1c78"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c421c1e00"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c421c6020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b1c421c61a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b1c421c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b1c421d6220" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b1c421d6220"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b1c421d6570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b1c421b8670" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b1c421b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b1c421b89c0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b1c421b8b48"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b1c421b8cd0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b1c421b8e58"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b1c421c5020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b1c421c51a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b1c421c5330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b1c421c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b1c421f4d58" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c421f4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b1c421e70d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b1c421e7260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b1c421e73e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b1c421e7570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b1c421e76f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b1c421e7880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b1c421e7a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b1c421e7b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b1c421e7d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b1c421e6020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b1c421e61a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b1c421e6330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b1c421e64b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b1c421e6740"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c421e68c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b1c421e6a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b1c421e6bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b1c421e6d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b1c421f3020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c421f31a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b1c421f3330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b1c421f34b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b1c421f3640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b1c421f37c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b1c421f3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b1c421d86c0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b1c421d86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c421d8a10"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b1c421d8b98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c421d8d20"/>
        <function-ref name="getSender" scoped="" ref="0x2b1c421c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b1c421d1b40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b1c421d1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b1c421d7020"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b1c421d71a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b1c421d7330"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b1c421d74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b1c42274c50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42274c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1c42292020"/>
        <function-ref name="wait" scoped="" ref="0x2b1c422921a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42292330"/>
        <function-ref name="isFree" scoped="" ref="0x2b1c422924b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b1c42292640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b1c42292c68" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c42292c68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c422ad410"/>
        <function-ref name="fired" scoped="" ref="0x2b1c422ae4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c422aedb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c422ae930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c422ad898"/>
        <function-ref name="start" scoped="" ref="0x2b1c422af9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c422ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b1c4370ce68" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c4370ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1c4370a208"/>
        <function-ref name="wait" scoped="" ref="0x2b1c4370a390"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4370a518"/>
        <function-ref name="isFree" scoped="" ref="0x2b1c4370a6a0"/>
        <function-ref name="getNow" scoped="" ref="0x2b1c4370a828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b1c4370ace0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c4370ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c43706410"/>
        <function-ref name="fired" scoped="" ref="0x2b1c437074a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c43707db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c43707930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c43706898"/>
        <function-ref name="start" scoped="" ref="0x2b1c43708ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43707020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b1c43706c70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b1c43706c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b1c43705020"/>
        <function-ref name="suspend" scoped="" ref="0x2b1c437051a8"/>
        <function-ref name="resume" scoped="" ref="0x2b1c43705330"/>
        <function-ref name="run" scoped="" ref="0x2b1c437054b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b1c422945b8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b1c422945b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b1c42294908"/>
        <function-ref name="suspend" scoped="" ref="0x2b1c42294a90"/>
        <function-ref name="resume" scoped="" ref="0x2b1c42294c18"/>
        <function-ref name="run" scoped="" ref="0x2b1c42294da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c42349430" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c42349430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42349780"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42349908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42349a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42349d18" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42349d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c423480a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c4234c1a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c4234c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c4234c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c4234f700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c4234f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4234fa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4234fbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4234fd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4234e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4234e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c4234e510" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c4234e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4234e880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4234ea08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4234eb90"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4234ed18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4234d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c4234daa0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c4234daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4234de10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c4234a678" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c4234a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4234a9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4234ab50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4234acd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4234ae60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42349020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c423491a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c42348328" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c42348328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c42348678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b1c42348800"/>
        <function-ref name="source" scoped="" ref="0x2b1c42348988"/>
        <function-ref name="destination" scoped="" ref="0x2b1c42348b10"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42348c98"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42348e20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c42347020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c4234d388" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c4234d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4234d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b1c4234c8b8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c4234c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4234cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c423501f0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c423501f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c42350540"/>
        <function-ref name="source" scoped="" ref="0x2b1c423506c8"/>
        <function-ref name="address" scoped="" ref="0x2b1c42350850"/>
        <function-ref name="destination" scoped="" ref="0x2b1c423509d8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42350b60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42350ce8"/>
        <function-ref name="type" scoped="" ref="0x2b1c42350e70"/>
        <function-ref name="setType" scoped="" ref="0x2b1c4234f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c4234f1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c4234f330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c4234f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b1c4234a020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c4234a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4234a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c437632a8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c437632a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c437635f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c436e78c8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c436e78c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c436e7c18"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c436e7da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43763020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c436e94d8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c436e94d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c436e9848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c436eda10" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c436eda10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c436edd60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c436ec020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c436ec1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c436ec330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c436ec4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c436ec820" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c436ec820"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c436ecb90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c436ecd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c436eb020"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c436eb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c436eb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b1c436ebdb0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b1c436ebdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c436e9170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c436ef600" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c436ef600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c436ef950"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c436efad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c436efc60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c436efde8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c436ee020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c436ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c43763880" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c43763880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c43763cd0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b1c43763e58"/>
        <function-ref name="source" scoped="" ref="0x2b1c43762020"/>
        <function-ref name="destination" scoped="" ref="0x2b1c437621a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c43762330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c437624b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c43762640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b1c43762888" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c43762888"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1c43762bd8"/>
        <function-ref name="changed" scoped="" ref="0x2b1c43762d60"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1c43761020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1c437611a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c436e8a20" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c436e8a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c436e8d70"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c436e7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c436e71a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c436e7330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c436e74b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c436e7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c436eb698" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c436eb698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c436eba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b1c436e9bf0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b1c436e9bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c436e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c436ee3f0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c436ee3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c436ee740"/>
        <function-ref name="source" scoped="" ref="0x2b1c436ee8c8"/>
        <function-ref name="address" scoped="" ref="0x2b1c436eea50"/>
        <function-ref name="destination" scoped="" ref="0x2b1c436eebd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c436eed60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c436ed020"/>
        <function-ref name="type" scoped="" ref="0x2b1c436ed1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b1c436ed330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c436ed4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c436ed640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c436ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b1c436e83c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b1c436e83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c436e8738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b1c4233ec60" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c4233ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1c4233b020"/>
        <function-ref name="changed" scoped="" ref="0x2b1c4233b1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1c4233b330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1c4233b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c4236ca48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c4236ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4236cd98"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4235d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4235d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b1c4235d3f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c4235d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c4235d740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c4235d8c8"/>
        <function-ref name="request" scoped="" ref="0x2b1c4235da50"/>
        <function-ref name="granted" scoped="" ref="0x2b1c4235dbd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c4235dd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b1c4236c100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b1c4236c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4236c450"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4236c5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4236c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1c423d6020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c423d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1c423d6390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1c423d6518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1c423d5020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c423d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1c423d5390"/>
        <function-ref name="configure" scoped="" ref="0x2b1c423d5518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c423d7200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c423d7200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c423d7570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c423d76f8"/>
        <function-ref name="request" scoped="" ref="0x2b1c423d7880"/>
        <function-ref name="granted" scoped="" ref="0x2b1c423d7a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c423d7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1c423d6760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c423d6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1c423d6ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b1c423d6c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c4378c398" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4378c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4378c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b1c4378c970" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b1c4378c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1c4378ccc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1c4378ce48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1c4378b020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c4378b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1c43788510" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c43788510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1c43788880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1c43788a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1c43787570" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c43787570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1c437878e0"/>
        <function-ref name="configure" scoped="" ref="0x2b1c43787a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b1c43787cf0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1c43787cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1c437860a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1c43786228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1c437863b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c43786538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c43789720" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c43789720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c43789a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c43789c18"/>
        <function-ref name="request" scoped="" ref="0x2b1c43789da0"/>
        <function-ref name="granted" scoped="" ref="0x2b1c43788020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c437881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1c43788c50" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c43788c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1c43787020"/>
        <function-ref name="userId" scoped="" ref="0x2b1c437871a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b1c43786800" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b1c43786800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c43786b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c43786cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c423faba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c423faba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c423f9020"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c423f91a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c423f9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c423f95b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c423f95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c423f9908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b1c423fe840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b1c423fe840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b1c423feb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c423d1980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c423d1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c423d1cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c423d1e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c423ff020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c423ff1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c423ff330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b1c423fbd98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c423fbd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c423fa170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c423fa2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c423fa480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c423fa608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c423fa790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c423fa918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b1c423fee38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c423fee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b1c423fd1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b1c423fd348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b1c423fd4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b1c423fd658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b1c423fd7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b1c423fd968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b1c423fdaf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b1c423fdc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b1c423fde00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b1c423fc020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b1c423fc1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b1c423fc330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b1c423fc4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b1c423fc740"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c423fc8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b1c423fca50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b1c423fcbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b1c423fcd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b1c423fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c423fb1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b1c423fb330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b1c423fb4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b1c423fb640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b1c423fb7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b1c423fb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b1c423ff578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c423ff578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c423ff8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c423ffa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c423ffbd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c423ffd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c423fe020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b1c423fe2a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c423fe2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c423fe5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c42448490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c42448490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c424487e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42448968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42448af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42448d78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42448d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c424470f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b1c4244c880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c4244c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4244cbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4244cd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4244b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4244b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c4244b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c4244b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b1c42449060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b1c42449060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c424493b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42447378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42447378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c424476c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42447850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c424479d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42447b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42447ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42447e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b1c4244b740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b1c4244b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4244ba90"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4244bc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4244bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b1c42420838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b1c42420838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42420b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42420d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4244c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b1c4244c2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b1c4244c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4244c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b1c42449638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b1c42449638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42449988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42449b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42449c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42449e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42448020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c424481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b1c424d8900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c424d8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b1c424d8c50"/>
        <function-ref name="address" scoped="" ref="0x2b1c424d8dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b1c424d7020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c424d71a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c424d7330"/>
        <function-ref name="pan" scoped="" ref="0x2b1c424d74b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b1c424d7640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c424d77c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c424d7950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c424d7b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c424d7b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c424d5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c424d51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c424d5330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c424d54b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c424d5640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c424d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b1c424db980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c424db980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b1c424dbcd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b1c424dbe58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b1c424da020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b1c424da1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b1c424da330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b1c424da4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b1c424da640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b1c424da7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b1c424da950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b1c424daad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b1c424dac60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b1c424dade8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b1c424d9020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b1c424d92a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c424d9430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b1c424d95b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b1c424d9740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b1c424d98c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b1c424d9a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c424d9bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b1c424d9d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b1c424d8020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b1c424d81a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b1c424d8330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b1c424d84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c424d5ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c424d5ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c424d5e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c424d4020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c424d41a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c424d4330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c424d44b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c424d4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b1c43819d98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b1c43819d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b1c43818170"/>
        <function-ref name="address" scoped="" ref="0x2b1c438182f8"/>
        <function-ref name="destination" scoped="" ref="0x2b1c43818480"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c43818608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c43818790"/>
        <function-ref name="pan" scoped="" ref="0x2b1c43818918"/>
        <function-ref name="setPan" scoped="" ref="0x2b1c43818aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c43818c28"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c43818db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c43817020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c43817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c43817370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c438174f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c43817680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c43817808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c43817990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c43817b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b1c437a3d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b1c437a3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b1c4381b0d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b1c4381b260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b1c4381b3e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b1c4381b570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b1c4381b6f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b1c4381b880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b1c4381ba08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b1c4381bb90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b1c4381bd18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b1c4381a020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b1c4381a1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b1c4381a330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b1c4381a4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b1c4381a740"/>
        <function-ref name="localPan" scoped="" ref="0x2b1c4381a8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b1c4381aa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b1c4381abd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b1c4381ad60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b1c43819020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c438191a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b1c43819330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b1c438194b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b1c43819640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b1c438197c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b1c43819950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b1c43817dc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b1c43817dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1c43816170"/>
        <function-ref name="changed" scoped="" ref="0x2b1c438162f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1c43816480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1c43816608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c43816890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c43816890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c43816be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c43816d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c43815020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c438151a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c43815330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c438154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c42536510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c42536510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42536860"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c425369e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42536b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42536df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42536df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42535170"/>
        <function-ref name="header" scoped="" ref="0x2b1c425352f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42537470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42537470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c425377c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42537948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42537ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c42535580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c42535580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c425358d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b1c42535a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c42535be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b1c42535d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b1c42537d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42537d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c425360a0"/>
        <function-ref name="header" scoped="" ref="0x2b1c42536228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c43847458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c43847458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c438477a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c43847930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43847ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c43847d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c43847d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c438460d8"/>
        <function-ref name="header" scoped="" ref="0x2b1c43846260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b1c43845bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c43845bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c43843020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b1c438431a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c43843330"/>
        <function-ref name="set" scoped="" ref="0x2b1c438434b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c4384cda0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c4384cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c43848170"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c438482f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43848480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b1c43845020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b1c43845020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b1c43845370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b1c438454f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b1c43845680"/>
        <function-ref name="evicted" scoped="" ref="0x2b1c43845808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b1c43845990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b1c438486c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c438486c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c43848a18"/>
        <function-ref name="header" scoped="" ref="0x2b1c43848ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c43848de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c43848de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c43847170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b1c438464a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b1c438464a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b1c438467f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b1c43846980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b1c43846b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b1c43846c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b1c42506d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b1c42506d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b1c425030d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b1c42503260"/>
        <function-ref name="getNode" scoped="" ref="0x2b1c425033e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b1c42503570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b1c425036f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b1c424ffb18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c424ffb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c424ffe68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b1c424fe020"/>
        <function-ref name="get" scoped="" ref="0x2b1c424fe1a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c424fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b1c42500850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b1c42500850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b1c42500ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b1c42500d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b1c424ff020"/>
        <function-ref name="evicted" scoped="" ref="0x2b1c424ff1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b1c424ff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42500238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42500238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42500588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b1c43841140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b1c43841140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c43841490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b1c43841618"/>
        <function-ref name="get" scoped="" ref="0x2b1c438417a0"/>
        <function-ref name="set" scoped="" ref="0x2b1c43841928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c425517a0" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c425517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42551af0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42551c78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42551e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c425500c0" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c425500c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42550410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b1c4254d988" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b1c4254d988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1c4254dcd8"/>
        <function-ref name="noAck" scoped="" ref="0x2b1c4254de60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1c4254c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42531bb0" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42531bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42553020"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c425531a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42553330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c42552888" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c42552888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42552bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42552d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42551020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c425511a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42551330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c425514b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42550698" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42550698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c425509e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42550b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42550cf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42550e80"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c4254e030"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c4254e1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b1c4254ed28" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b1c4254ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1c4254d0a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1c4254d228"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1c4254d3b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1c4254d538"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1c4254d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c425535b8" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c425535b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42553908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b1c4254e400" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c4254e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1c4254e750"/>
        <function-ref name="noAck" scoped="" ref="0x2b1c4254e8d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1c4254ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b1c42553b50" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b1c42553b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b1c42552020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b1c425521a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b1c42552330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b1c425524b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b1c42552640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42567020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42567020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42567370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c425674f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42567680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42567808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c42563020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c42563020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42563370"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c425634f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42563680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42563908" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42563908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42563c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42567a90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42567a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42567de0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42566020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c425661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c425669c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c425669c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42566d18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42565020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c425651a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42565330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c425654b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42565640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1c42565888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c42565888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b1c42565bd8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b1c42565d60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b1c42564020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b1c425641a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b1c42564490" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b1c42564490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c425647e0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42564968"/>
        <function-ref name="start" scoped="" ref="0x2b1c42564af0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42564c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42566430" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42566430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42566780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42562020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42562370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c425624f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42562680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42562808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42562990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42562b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b1c4389d5e8" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b1c4389d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b1c4389d938"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b1c4389dac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b1c4389dc48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b1c4389ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c425c7708" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c425c7708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c425c7a58"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c425c7be0"/>
        <function-ref name="start" scoped="" ref="0x2b1c425c7d68"/>
        <function-ref name="stop" scoped="" ref="0x2b1c425c6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b1c425fab70" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b1c425fab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b1c425f9020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b1c425f91a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c425f9330"/>
        <function-ref name="done" scoped="" ref="0x2b1c425f94b8"/>
        <function-ref name="standby" scoped="" ref="0x2b1c425f9640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c425f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c425c62a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c425c62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c425c65f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c425c6780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c425c6908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b1c425f73f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c425f73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c425f7740"/>
        <function-ref name="header" scoped="" ref="0x2b1c425f78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c425c6b90" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c425c6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c425fa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b1c425f9a10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b1c425f9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c425f9d60"/>
        <function-ref name="ready" scoped="" ref="0x2b1c425f7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c425f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b1c425fa268" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b1c425fa268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b1c425fa5b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c425fa740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c425fa8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c43896870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c43896870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c43896bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c43896d48"/>
        <function-ref name="start" scoped="" ref="0x2b1c43895020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c438951a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b1c43895430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c43895430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c43895780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b1c43892450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b1c43892450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b1c438927a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b1c43892928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c43892ab0"/>
        <function-ref name="done" scoped="" ref="0x2b1c43892c38"/>
        <function-ref name="standby" scoped="" ref="0x2b1c43892dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c43891020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c43895a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c43895a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c43895d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c43894020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c438941a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b1c4388f4f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b1c4388f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c4388f840"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c4388f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b1c43890578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c43890578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c438908c8"/>
        <function-ref name="header" scoped="" ref="0x2b1c43890a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b1c4388fc90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b1c4388fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c4388e020"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c4388e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c43894430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c43894430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c43894780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b1c43890d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b1c43890d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c4388f0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c4388f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b1c43891c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b1c43891c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c43890020"/>
        <function-ref name="ready" scoped="" ref="0x2b1c438901a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43890330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b1c438949c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b1c438949c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b1c43894d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c43892020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c438921a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b1c43891268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b1c43891268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b1c438915b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b1c43891740"/>
        <function-ref name="resume" scoped="" ref="0x2b1c438918c8"/>
        <function-ref name="run" scoped="" ref="0x2b1c43891a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b1c4281e8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b1c4281e8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4281ec18"/>
        <function-ref name="get" scoped="" ref="0x2b1c4281eda0"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c4281d020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4281d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c427e49f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c427e49f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c427e4d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c427e2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c427e21a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c427e2330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c427e24b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c427e2640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c4281f9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c4281f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4281fd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4281e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4281e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4281e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c4281e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c4281e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b1c427e6020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c427e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c427e5478"/>
        <function-ref name="clear" scoped="" ref="0x2b1c427e5b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c427e6d70"/>
        <function-ref name="set" scoped="" ref="0x2b1c427e4278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b1c427e2a30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c427e2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4281f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1c427ea270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c427ea270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c427e9700"/>
        <function-ref name="clear" scoped="" ref="0x2b1c427e9de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c427e9020"/>
        <function-ref name="set" scoped="" ref="0x2b1c427e74f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b1c438cf618" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b1c438cf618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c438cf968"/>
        <function-ref name="get" scoped="" ref="0x2b1c438cfaf0"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c438cfc78"/>
        <function-ref name="set" scoped="" ref="0x2b1c438cfe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c438d07a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c438d07a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c438d0af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c438d0c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c438d0e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c438cf020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c438cf1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c438cf330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c438cb2a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c438cb2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c438cb5f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c438cb778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c438cb900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c438cba88"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c438cbc10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c438cbd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b1c438d4c48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b1c438d4c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c438d10f8"/>
        <function-ref name="clear" scoped="" ref="0x2b1c438d17d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c438d29f0"/>
        <function-ref name="set" scoped="" ref="0x2b1c438d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b1c438ce1c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c438ce1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c438ced48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b1c438cc290" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c438cc290"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c438cce10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b1c438d6020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b1c438d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c438d5478"/>
        <function-ref name="clear" scoped="" ref="0x2b1c438d5b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c438d6d70"/>
        <function-ref name="set" scoped="" ref="0x2b1c438d4278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1c42645790" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c42645790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c426423a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b1c4263e020" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b1c4263e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4263a2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4263d978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c4263b6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c4263b278"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c4263ab58"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c4263a708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4263ddc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c4263eb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c4263bc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c4263d088"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4263d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1c42638150" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c42638150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42638cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c4263f1f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4263f1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4263f548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b1c4265d7c0" loc="31:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b1c4265d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4265f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b1c426653b8" loc="30:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b1c426653b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42664130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42664a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c426645b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42660020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c426367a0" loc="28:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c426367a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42636af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b1c42633140" loc="29:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b1c42633140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42667918"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42632980"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c42667310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42632e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c42667da0"/>
        <function-ref name="start" scoped="" ref="0x2b1c42632020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c426324f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b1c4275a168" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b1c4275a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4275ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c42760020" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c42760020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4275e690"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4275f6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c4275e088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4275fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c4275eb18"/>
        <function-ref name="start" scoped="" ref="0x2b1c42760d70"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4275f270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c427627d8" loc="60:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c427627d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1c41aff388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1c41aff388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42762b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c4275c128" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c4275c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4275ce78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c4275b7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c4275b330"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4275bc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b1c4389eb60" loc="68:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c4389eb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c4391e020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c4391e1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c4391e330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c4391e4b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c4391e640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c4391e7c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c4391e950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c4391ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b1c438a4af8" loc="64:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b1c438a4af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c438a36a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c438aa7c8" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c438aa7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c438a7020"/>
        <function-ref name="fired" scoped="" ref="0x2b1c438a8020"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c438a8930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c438a84a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c438a74a8"/>
        <function-ref name="start" scoped="" ref="0x2b1c438a9578"/>
        <function-ref name="stop" scoped="" ref="0x2b1c438a9a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c438aa020" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c438aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c438aa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c438a7a90" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c438a7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c438a5828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c438a4190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c438a5cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c438a4618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b1c43919060" loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1c43919060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b1c439193b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b1c43919538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b1c439196c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b1c43919848"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1c439199d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b1c43919b58"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1c43919ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1c43919e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b1c4391ee68" loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1c4391ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c4391a798"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4391b4f8"/>
        <function-ref name="get" scoped="" ref="0x2b1c4391da18"/>
        <function-ref name="reset" scoped="" ref="0x2b1c4391b980"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c4391ac20"/>
        <function-ref name="set" scoped="" ref="0x2b1c4391b020"/>
        <function-ref name="start" scoped="" ref="0x2b1c4391be08"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4391a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c438a3c28" loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c438a3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c4389fdb8"/>
        <function-ref name="test" scoped="" ref="0x2b1c4389f4a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c438a2820"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c4389e270"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c4389e748"/>
        <function-ref name="reset" scoped="" ref="0x2b1c438a1658"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c438a11d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c4389f930"/>
        <function-ref name="set" scoped="" ref="0x2b1c438a2ca8"/>
        <function-ref name="start" scoped="" ref="0x2b1c438a1ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4389f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c426e6828" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c426e6828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c426e6b78"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c426e6d00"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c426e5020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c426e51a8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c426e5330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c426e54b8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c426e5640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c426e57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b1c426e1e70" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1c426e1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b1c426e01e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b1c426e0370"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b1c426e04f8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b1c426e0680"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1c426e0808"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b1c426e0990"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1c426e0b18"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1c426e0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1c426e5c90" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1c426e5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c426e14a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c426e2238"/>
        <function-ref name="get" scoped="" ref="0x2b1c426e4858"/>
        <function-ref name="reset" scoped="" ref="0x2b1c426e26c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c426e1930"/>
        <function-ref name="set" scoped="" ref="0x2b1c426e4ce0"/>
        <function-ref name="start" scoped="" ref="0x2b1c426e2b48"/>
        <function-ref name="stop" scoped="" ref="0x2b1c426e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c426ed810" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c426ed810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c426e7930"/>
        <function-ref name="test" scoped="" ref="0x2b1c426e7020"/>
        <function-ref name="get" scoped="" ref="0x2b1c426ea3c8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c426e7db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c426e62f0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c426e91f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c426ead28"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c426e74a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c426ea850"/>
        <function-ref name="start" scoped="" ref="0x2b1c426e9680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c426e9b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c42711160" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42711160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c427114b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c42711638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c427117c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c42711948"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c42711ad0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c42711c58"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c42711de0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c42710020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b1c4270c6f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b1c4270c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b1c4270ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b1c4270cdf0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b1c4270cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b1c4270b170"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b1c4270b2f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b1c4270b480"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b1c4270b608"/>
        <function-ref name="countBusy" scoped="" ref="0x2b1c4270b790"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b1c4270b918"/>
        <function-ref name="getAssr" scoped="" ref="0x2b1c4270baa0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b1c4270bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1c427104e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1c427104e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c4270ddb8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4270ea20"/>
        <function-ref name="get" scoped="" ref="0x2b1c4270e0c0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c4270d020"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c4270c270"/>
        <function-ref name="set" scoped="" ref="0x2b1c4270e548"/>
        <function-ref name="start" scoped="" ref="0x2b1c4270d4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4270d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c426dc180" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c426dc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c426d8270"/>
        <function-ref name="test" scoped="" ref="0x2b1c426d9930"/>
        <function-ref name="get" scoped="" ref="0x2b1c426dcd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c426d86f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c426d8bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c426dbb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c426db6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c426d9db8"/>
        <function-ref name="set" scoped="" ref="0x2b1c426db1f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c426d9020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c426d94a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b1c427a1cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b1c427a1cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c427a00a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c427a0228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b1c427a5c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c427a5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c427a1410"/>
        <function-ref name="fired" scoped="" ref="0x2b1c427a34a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c427a3db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c427a3930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c427a1898"/>
        <function-ref name="start" scoped="" ref="0x2b1c427a49f0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c427a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c4276eab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c4276eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4276bd60"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4276c470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c4276b1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c4276cd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c427a5648"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c427a51f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4276c8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c4276d620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c4276b790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c4276dac0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4276c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b1c427cb930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b1c427cb930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c427cbc80"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c427cbe08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b1c427d0858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b1c427d0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c427ccbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b1c427ce1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c427cc020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c427cea60"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c427cb4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c427cb088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c427ce610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c427cf3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c427cc5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c427cf878"/>
        <function-ref name="stop" scoped="" ref="0x2b1c427cfd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c427d65e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c427d65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c427d2988"/>
        <function-ref name="fired" scoped="" ref="0x2b1c427d4020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c427d4d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c427d4900"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c427d02d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c427d2df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c427d4490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c427d5198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c427d2398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c427d5658"/>
        <function-ref name="stop" scoped="" ref="0x2b1c427d5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1c427c7128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c427c7128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c427c7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1c427fb330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c427fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c427fa0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c427fa9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c427fa548"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c427fae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b1c427f21c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b1c427f21c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c427ee5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b1c427f1af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c427f08c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c427f0470"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c427ed020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c427eea40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c427f0020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c427f2d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c427ee020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c427f1200"/>
        <function-ref name="stop" scoped="" ref="0x2b1c427f16a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c428380e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c428380e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42838430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c428385b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42838740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c428388c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42838a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42838bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42837020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42837020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42837370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c428374f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42837680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42837808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42837990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42837b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b1c42818660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b1c42818660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c428189d0"/>
        <function-ref name="get" scoped="" ref="0x2b1c42818b58"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42818ce0"/>
        <function-ref name="set" scoped="" ref="0x2b1c42818e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b1c4282de48" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b1c4282de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b1c4282f1c0"/>
        <function-ref name="request" scoped="" ref="0x2b1c4282f348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b1c4282ab20" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c4282ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42828190"/>
        <function-ref name="get" scoped="" ref="0x2b1c42829c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42829728"/>
        <function-ref name="set" scoped="" ref="0x2b1c428286a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b1c42853b50" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b1c42853b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42852020"/>
        <function-ref name="get" scoped="" ref="0x2b1c428521a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42852330"/>
        <function-ref name="set" scoped="" ref="0x2b1c428524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b1c42857400" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42857400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c42856870"/>
        <function-ref name="clear" scoped="" ref="0x2b1c42854020"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c42856190"/>
        <function-ref name="set" scoped="" ref="0x2b1c42854700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b1c42834810" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b1c42834810"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b1c42834b60"/>
        <function-ref name="turnOn" scoped="" ref="0x2b1c42834ce8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c42834e70"/>
        <function-ref name="done" scoped="" ref="0x2b1c42831020"/>
        <function-ref name="standby" scoped="" ref="0x2b1c428311a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c42831330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b1c42851458" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c42851458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1c428517a8"/>
        <function-ref name="wait" scoped="" ref="0x2b1c42851930"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42851ab8"/>
        <function-ref name="isFree" scoped="" ref="0x2b1c42851c40"/>
        <function-ref name="getNow" scoped="" ref="0x2b1c42851dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b1c4282e6b0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c4282e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4282cdc8"/>
        <function-ref name="get" scoped="" ref="0x2b1c4282c8b8"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c4282c3a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c4282a328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c4282f600" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c4282f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4282f950"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4282fad8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4282fc60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4282fde8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c4282e020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c4282e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c42858390" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c42858390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c428587e0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42858968"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42858af0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b1c42858c78"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b1c42858e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b1c42830020" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42830020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42830370"/>
        <function-ref name="header" scoped="" ref="0x2b1c428304f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c4285c150" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c4285c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42859918"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4285b980"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c42859310"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4285be08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c42859da0"/>
        <function-ref name="start" scoped="" ref="0x2b1c4285b020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4285b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b1c42826020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1c42826020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42825608"/>
        <function-ref name="get" scoped="" ref="0x2b1c428250f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42826ba0"/>
        <function-ref name="set" scoped="" ref="0x2b1c42825b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b1c42821e78" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c42821e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4285da28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b1c428315d8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b1c428315d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42831928"/>
        <function-ref name="ready" scoped="" ref="0x2b1c42831ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42831c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b1c42823390" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c42823390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42822a40"/>
        <function-ref name="get" scoped="" ref="0x2b1c42822530"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42822020"/>
        <function-ref name="set" scoped="" ref="0x2b1c42821020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b1c42852828" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b1c42852828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42852b78"/>
        <function-ref name="get" scoped="" ref="0x2b1c42852d00"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42851020"/>
        <function-ref name="set" scoped="" ref="0x2b1c428511a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b1c42853020" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b1c42853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42853370"/>
        <function-ref name="get" scoped="" ref="0x2b1c428534f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42853680"/>
        <function-ref name="set" scoped="" ref="0x2b1c42853808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1c42821668" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42821668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c428219b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b1c42847118" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b1c42847118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b1c42847468"/>
        <function-ref name="request" scoped="" ref="0x2b1c428475f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b1c42867748" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b1c42867748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b1c4286d578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b1c42843d28" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b1c42843d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42840388"/>
        <function-ref name="get" scoped="" ref="0x2b1c42842e00"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c428428f0"/>
        <function-ref name="set" scoped="" ref="0x2b1c42840898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b1c42864678" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b1c42864678"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c428649c8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42864b50"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42864cd8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42864e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b1c4284aad8" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b1c4284aad8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4284ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b1c42862020" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b1c42862020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b1c42861700"/>
        <function-ref name="clear" scoped="" ref="0x2b1c42861de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b1c42861020"/>
        <function-ref name="set" scoped="" ref="0x2b1c4285f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b1c42874958" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b1c42874958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42874ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42874e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4286f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4286f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c4286f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4286f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b1c4286f640"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4286f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b1c4285e7e8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b1c4285e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b1c4285eb38"/>
        <function-ref name="wait" scoped="" ref="0x2b1c4285ecc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c4285ee48"/>
        <function-ref name="isFree" scoped="" ref="0x2b1c4289d020"/>
        <function-ref name="getNow" scoped="" ref="0x2b1c4289d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b1c42849128" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b1c42849128"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b1c42849478"/>
        <function-ref name="turnOn" scoped="" ref="0x2b1c42849600"/>
        <function-ref name="setChannel" scoped="" ref="0x2b1c42849788"/>
        <function-ref name="done" scoped="" ref="0x2b1c42849910"/>
        <function-ref name="standby" scoped="" ref="0x2b1c42849a98"/>
        <function-ref name="getChannel" scoped="" ref="0x2b1c42849c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b1c4286db48" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c4286db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42869728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b1c428469c0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b1c428469c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42843020"/>
        <function-ref name="get" scoped="" ref="0x2b1c42845aa8"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c42845598"/>
        <function-ref name="set" scoped="" ref="0x2b1c42843530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b1c428478a8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b1c428478a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42847bf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42847d80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42846020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c428461a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42846330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c428464b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b1c428757e0" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b1c428757e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42875b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42875cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c42875e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42874020"/>
        <function-ref name="get" scoped="" ref="0x2b1c428741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42874330"/>
        <function-ref name="set" scoped="" ref="0x2b1c428744b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42874640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c42869c30" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c42869c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42865020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c428651a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42865330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b1c428654b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b1c42865640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b1c42848948" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b1c42848948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42848c98"/>
        <function-ref name="header" scoped="" ref="0x2b1c42848e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b1c42915d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b1c42915d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42914170"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c429142f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b1c4283f130" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b1c4283f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4287d718"/>
        <function-ref name="get" scoped="" ref="0x2b1c4287d208"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c4283fcb0"/>
        <function-ref name="set" scoped="" ref="0x2b1c4287dc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1c4284a020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1c4284a020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b1c41aff6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4284a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b1c42876020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1c42876020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c42876370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c428764f8"/>
        <function-ref name="request" scoped="" ref="0x2b1c42876680"/>
        <function-ref name="granted" scoped="" ref="0x2b1c42876808"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42876990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b1c42878d70" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b1c42878d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c428771e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42877370"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c428774f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42877680"/>
        <function-ref name="get" scoped="" ref="0x2b1c42877808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42877990"/>
        <function-ref name="set" scoped="" ref="0x2b1c42877b18"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42877ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b1c4287b4b0" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b1c4287b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4287aaa8"/>
        <function-ref name="get" scoped="" ref="0x2b1c4287a598"/>
        <function-ref name="isSet" scoped="" ref="0x2b1c4287a088"/>
        <function-ref name="set" scoped="" ref="0x2b1c42878020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b1c42848020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b1c42848020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42848370"/>
        <function-ref name="ready" scoped="" ref="0x2b1c428484f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42848680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b1c4286e100" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b1c4286e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1c4286e450"/>
        <function-ref name="disable" scoped="" ref="0x2b1c4286e5d8"/>
        <function-ref name="captured" scoped="" ref="0x2b1c4286e760"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1c4286e8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b1c42871c18" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c42871c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b1c42875020"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b1c428751a8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b1c42875330"/>
        <function-ref name="write" scoped="" ref="0x2b1c428754b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b1c42863208" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b1c42863208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42863558"/>
        <function-ref name="get" scoped="" ref="0x2b1c428636e0"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c42863868"/>
        <function-ref name="set" scoped="" ref="0x2b1c428639f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b1c428659e0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b1c428659e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42865d30"/>
        <function-ref name="get" scoped="" ref="0x2b1c42864020"/>
        <function-ref name="setValue" scoped="" ref="0x2b1c428641a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42864330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b1c42878668" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c42878668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c428789b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b1c4285fcc0" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b1c4285fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b1c4285e0a0"/>
        <function-ref name="suspend" scoped="" ref="0x2b1c4285e228"/>
        <function-ref name="resume" scoped="" ref="0x2b1c4285e3b0"/>
        <function-ref name="run" scoped="" ref="0x2b1c4285e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b1c42955338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b1c42955338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42955688"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42955810"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c42955998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42955b20"/>
        <function-ref name="get" scoped="" ref="0x2b1c42955ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42955e30"/>
        <function-ref name="set" scoped="" ref="0x2b1c42954020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c429541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b1c42956140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b1c42956140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42956490"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42956618"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c429567a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42956928"/>
        <function-ref name="get" scoped="" ref="0x2b1c42956ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42956c38"/>
        <function-ref name="set" scoped="" ref="0x2b1c42956dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42955020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c429532e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c429532e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42950928"/>
        <function-ref name="fired" scoped="" ref="0x2b1c429529e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c42950320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42952e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c42950db0"/>
        <function-ref name="start" scoped="" ref="0x2b1c42952088"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42952560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b1c42958990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b1c42958990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c42958ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c42958e68"/>
        <function-ref name="request" scoped="" ref="0x2b1c42957020"/>
        <function-ref name="granted" scoped="" ref="0x2b1c429571a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42957330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b1c4295b710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b1c4295b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4295ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4295bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4295bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42958020"/>
        <function-ref name="get" scoped="" ref="0x2b1c429581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42958330"/>
        <function-ref name="set" scoped="" ref="0x2b1c429584b8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42958640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b1c429544c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b1c429544c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1c42954810"/>
        <function-ref name="disable" scoped="" ref="0x2b1c42954998"/>
        <function-ref name="captured" scoped="" ref="0x2b1c42954b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1c42954ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b1c429575e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c429575e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b1c42957938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b1c42957ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b1c42957c48"/>
        <function-ref name="write" scoped="" ref="0x2b1c42957dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b1c4294f438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b1c4294f438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b1c41c8c140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4294e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b1c42982c18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b1c42982c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42981020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c429811a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c42981330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c429814b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42981640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c429817c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42981950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42981ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b1c42941540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1c42941540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1c429826f8"/>
        <function-ref name="test" scoped="" ref="0x2b1c42948db8"/>
        <function-ref name="get" scoped="" ref="0x2b1c429490f8"/>
        <function-ref name="captured" scoped="" ref="0x2b1c42949a58"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42948020"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42982270"/>
        <function-ref name="set" scoped="" ref="0x2b1c42949580"/>
        <function-ref name="start" scoped="" ref="0x2b1c429484a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42948930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b1c42981e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b1c42981e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c429801a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42980330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c429804b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42980640"/>
        <function-ref name="get" scoped="" ref="0x2b1c429807c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42980950"/>
        <function-ref name="set" scoped="" ref="0x2b1c42980ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42980c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b1c4294b870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b1c4294b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4294bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b1c4294ecd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b1c4294ecd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b1c4294b0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b1c4294b228"/>
        <function-ref name="captured" scoped="" ref="0x2b1c4294b3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b1c4294b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b1c429661d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1c429661d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42966528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c429666b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b1c4296e388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1c4296e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1c4296e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c4294ccd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4294ccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c429720a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b1c4296e9d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c4296e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b1c4296ed20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b1c42971020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b1c429711a8"/>
        <function-ref name="write" scoped="" ref="0x2b1c42971330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c42966e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c42966e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c429701f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c42970380"/>
        <function-ref name="request" scoped="" ref="0x2b1c42970508"/>
        <function-ref name="granted" scoped="" ref="0x2b1c42970690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42970818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b1c429acb58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b1c429acb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c429ab020"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c429ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b1c42962120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b1c42962120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42962470"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c429625f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b1c429893c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b1c429893c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c42989718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c429898a0"/>
        <function-ref name="request" scoped="" ref="0x2b1c42989a28"/>
        <function-ref name="granted" scoped="" ref="0x2b1c42989bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42989d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b1c42963020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b1c42963020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b1c42963370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c4296da18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4296da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4296dd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b1c4298a150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b1c4298a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1c4298a4a0"/>
        <function-ref name="sleep" scoped="" ref="0x2b1c429a3950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1c4298a7b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1c429a3ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1c4298aac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1c4298ac48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1c4298add0"/>
        <function-ref name="read" scoped="" ref="0x2b1c429a4020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1c429a41a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1c429a4330"/>
        <function-ref name="setClock" scoped="" ref="0x2b1c429a44b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1c429a4640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1c429a47c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1c429a4a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1c429a4bd8"/>
        <function-ref name="write" scoped="" ref="0x2b1c429a4d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1c429a3020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1c429a31a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1c429a3330"/>
        <function-ref name="getClock" scoped="" ref="0x2b1c429a34b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1c429a3640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1c4298a628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1c4298a938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1c429a37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b1c42963628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b1c42963628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b1c42963978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b1c42963b00"/>
        <function-ref name="splitRead" scoped="" ref="0x2b1c42963c88"/>
        <function-ref name="write" scoped="" ref="0x2b1c42963e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c42962d88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c42962d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c429a5170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c429a52f8"/>
        <function-ref name="request" scoped="" ref="0x2b1c429a5480"/>
        <function-ref name="granted" scoped="" ref="0x2b1c429a5608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c429a5790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b1c42988020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c42988020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1c42988370"/>
        <function-ref name="userId" scoped="" ref="0x2b1c429884f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b1c429887c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1c429887c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1c42988b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b1c42a0c020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b1c42a0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1c42a0c370"/>
        <function-ref name="sleep" scoped="" ref="0x2b1c42a0a7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1c42a0c680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1c42a0a950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1c42a0c990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1c42a0cb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1c42a0cca0"/>
        <function-ref name="read" scoped="" ref="0x2b1c42a0ce28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1c42a0b020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1c42a0b1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b1c42a0b330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1c42a0b4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1c42a0b640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1c42a0b8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1c42a0ba50"/>
        <function-ref name="write" scoped="" ref="0x2b1c42a0bbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1c42a0bd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1c42a0a020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1c42a0a1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b1c42a0a330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1c42a0a4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1c42a0c4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1c42a0c808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1c42a0a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b1c429fd190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b1c429fd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c429fd4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c429fd668"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c429fd7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c429fd978"/>
        <function-ref name="get" scoped="" ref="0x2b1c429fdb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c429fdc88"/>
        <function-ref name="set" scoped="" ref="0x2b1c429fde10"/>
        <function-ref name="clr" scoped="" ref="0x2b1c429fc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b1c42a03de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b1c42a03de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42a02170"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42a022f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c42a02480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42a02608"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a02790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42a02918"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a02aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42a02c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b1c429ffc70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b1c429ffc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c42a03020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c42a031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c42a03330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c42a034b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a03640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c42a037c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a03950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c42a03ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b1c429ff438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b1c429ff438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c429ff788"/>
        <function-ref name="stop" scoped="" ref="0x2b1c429ff910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b1c429fc350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b1c429fc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1c429fc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b1c42a09dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b1c42a09dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b1c42a06170"/>
        <function-ref name="sleep" scoped="" ref="0x2b1c42a04640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b1c42a06480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b1c42a047c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b1c42a06790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b1c42a06918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b1c42a06aa0"/>
        <function-ref name="read" scoped="" ref="0x2b1c42a06c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b1c42a06db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b1c42a05020"/>
        <function-ref name="setClock" scoped="" ref="0x2b1c42a051a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b1c42a05330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b1c42a054b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b1c42a05740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b1c42a058c8"/>
        <function-ref name="write" scoped="" ref="0x2b1c42a05a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b1c42a05bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b1c42a05d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b1c42a04020"/>
        <function-ref name="getClock" scoped="" ref="0x2b1c42a041a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b1c42a04330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b1c42a062f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b1c42a06608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b1c42a044b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b1c429fe020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b1c429fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c429fe370"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c429fe4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c429fe680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c429fe808"/>
        <function-ref name="get" scoped="" ref="0x2b1c429fe990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c429feb18"/>
        <function-ref name="set" scoped="" ref="0x2b1c429feca0"/>
        <function-ref name="clr" scoped="" ref="0x2b1c429fee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1c42a40510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c42a40510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1c42a40880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1c42a40a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1c42a3f550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c42a3f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1c42a3f8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b1c42a3fa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c42a41748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c42a41748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c42a41ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c42a41c40"/>
        <function-ref name="request" scoped="" ref="0x2b1c42a41dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b1c42a40020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c42a401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1c42a40c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c42a40c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1c42a3f020"/>
        <function-ref name="userId" scoped="" ref="0x2b1c42a3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c439af8f8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c439af8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c439afc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b1c439ae020" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b1c439ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1c439ae370"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1c439ae4f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1c439ae680"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c439ae808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b1c439abaf8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b1c439abaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b1c439abe68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b1c439aa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b1c439aab08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b1c439aab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b1c439aae78"/>
        <function-ref name="configure" scoped="" ref="0x2b1c439a9030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b1c439a92b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1c439a92b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b1c439a9608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b1c439a9790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b1c439a9918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c439a9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b1c439acd78" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b1c439acd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b1c439ab170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b1c439ab2f8"/>
        <function-ref name="request" scoped="" ref="0x2b1c439ab480"/>
        <function-ref name="granted" scoped="" ref="0x2b1c439ab608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b1c439ab790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b1c439aa268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b1c439aa268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b1c439aa5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b1c439aa740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b1c439a9d68" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b1c439a9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c439a80f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c439a8278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c42a6d5e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42a6d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b1c42a6d938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c42a6dac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c42a6dc48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c42a6ddd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c42a76020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c42a761a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c42a76330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c42a764b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b1c42a76640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c42a767c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1c42a76ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1c42a76ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1c42a6be20"/>
        <function-ref name="test" scoped="" ref="0x2b1c42a6b510"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a75858"/>
        <function-ref name="captured" scoped="" ref="0x2b1c42a6c238"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a6c710"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a6b998"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a75ce0"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a6cb98"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a6b088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1c42a69a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1c42a69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c42a65270"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42a67020"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a685d8"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a674a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a656f8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a68a60"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a67930"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a67db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c42a376e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42a376e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c42a31930"/>
        <function-ref name="test" scoped="" ref="0x2b1c42a31020"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a343a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c42a31db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c42a772f0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a321f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42a34d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a314a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a34830"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a32680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a32b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c42a5dc90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c42a5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b1c42a5c020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c42a5c1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c42a5c330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c42a5c4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c42a5c640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c42a5c7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c42a5c950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c42a5cad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b1c42a5cc60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c42a5cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b1c42a57c48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b1c42a57c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c42a9b4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42a541d0"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a55820"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a54658"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a9b930"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a55ca8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a54ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1c42a5b350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1c42a5b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1c42a57580"/>
        <function-ref name="test" scoped="" ref="0x2b1c42a58c20"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a59020"/>
        <function-ref name="captured" scoped="" ref="0x2b1c42a59980"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a59e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a570f8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a594a8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a58310"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a58798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b1c42a9a020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b1c42a9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c42a977a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42a98560"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a9aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a989e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a97c30"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a98088"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a98e70"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a97320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b1c42a96360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b1c42a96360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c42a93c20"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42a95980"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a95020"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a95e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a920f8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a954a8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a93310"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a93798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c42a64be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42a64be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c42a5edb8"/>
        <function-ref name="test" scoped="" ref="0x2b1c42a5e4a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42a617a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c42a5d270"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c42a5d748"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42a5f5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42a5f130"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42a5e930"/>
        <function-ref name="set" scoped="" ref="0x2b1c42a61c28"/>
        <function-ref name="start" scoped="" ref="0x2b1c42a5fa40"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42a5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c42b3bb68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c42b3bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42b38238"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42b392b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c42b39bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42b39738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c42b386c0"/>
        <function-ref name="start" scoped="" ref="0x2b1c42b3a8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42b3add0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42aeedc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42aeedc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1c41aff388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1c41aff388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42aed170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c42aed540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42aed540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c42b286f8"/>
        <function-ref name="test" scoped="" ref="0x2b1c42b29db8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42b2a0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c42b28b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c42b26088"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42b29020"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b2aa58"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42b28270"/>
        <function-ref name="set" scoped="" ref="0x2b1c42b2a580"/>
        <function-ref name="start" scoped="" ref="0x2b1c42b294a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42b29930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b1c4397fbc8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b1c4397fbc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b1c41aff020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b1c41aff020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4397c270"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4397d310"/>
        <function-ref name="startAt" scoped="" ref="0x2b1c4397dc20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4397d798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b1c4397c6f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c4397e948"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4397ee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b1c43977c68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b1c43977c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c439734a8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c439741d0"/>
        <function-ref name="get" scoped="" ref="0x2b1c43976820"/>
        <function-ref name="reset" scoped="" ref="0x2b1c43974658"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c43973930"/>
        <function-ref name="set" scoped="" ref="0x2b1c43976ca8"/>
        <function-ref name="start" scoped="" ref="0x2b1c43974ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43973020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b1c4397cc18" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b1c4397cc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c43978db8"/>
        <function-ref name="test" scoped="" ref="0x2b1c439784a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c4397b820"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c43977270"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c43977748"/>
        <function-ref name="reset" scoped="" ref="0x2b1c4397a658"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4397a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c43978930"/>
        <function-ref name="set" scoped="" ref="0x2b1c4397bca8"/>
        <function-ref name="start" scoped="" ref="0x2b1c4397aae0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43978020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1c42b34400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c42b34400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c42b2f108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c42b2f108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b2fe58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42b2e798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c42b2e310"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b2ec20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c42b77e08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c42b77e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TOne" ref="0x2b1c41bd19f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b75be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42b63548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c42b630c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b639d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c42b61020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42b61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c42b5d0f8"/>
        <function-ref name="test" scoped="" ref="0x2b1c42b5f7a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42b61ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c42b5d580"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c42b5da58"/>
        <function-ref name="reset" scoped="" ref="0x2b1c42b609e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b60560"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c42b5fc30"/>
        <function-ref name="set" scoped="" ref="0x2b1c42b60088"/>
        <function-ref name="start" scoped="" ref="0x2b1c42b60e70"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42b5f320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b1c42b89450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b1c42b89450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b881d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42b88ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c42b88658"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c42b59270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c42b59270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b8a020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42b8a930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c42b8a4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b8adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b1c42b85c38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c42b85c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b84820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1c42b84e48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c42b84e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42b83be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c42b81548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c42b810c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c42b819d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b1c42b793c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b1c42b793c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b1c42bc4150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b1c42bb3bd8" loc="43:../../chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c42bb3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42bb0020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42bb01a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42bb0330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b1c42bb04b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b1c42bb0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b1c42bad208" loc="43:../../chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b1c42bad208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42bad558"/>
        <function-ref name="headerLength" scoped="" ref="0x2b1c42bad6e0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b1c42bad868"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b1c42bad9f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b1c42badb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b1c42c0c140" loc="46:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b1c42c0c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b1c42c0c490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendData" ref="0x2b1c42c0d3d8" loc="45:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendData" scoped="" ref="0x2b1c42c0d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c0d728"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c0d8b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c0da38"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c0dbc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c0dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendData" ref="0x2b1c42c10660" loc="42:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x2b1c42c10660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c109b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c10b38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c10cc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c10e48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c0d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b1c42c09d98" loc="45:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b1c42c09d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c08170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c082f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c08480"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c08608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c08790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42c09080" loc="42:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42c09080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c093d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c09558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c096e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c09868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c099f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1c42c070c0" loc="47:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c42c070c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c42c07410"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c42c07598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneTask" ref="0x2b1c42bfde68" loc="70:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneTask" scoped="" ref="0x2b1c42bfde68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42bfc1e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42bfc370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoBackoffConfig" ref="0x2b1c42c08aa8" loc="46:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b1c42c08aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b1c42c08df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c42c079d8" loc="48:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42c079d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42c03d60"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42c05470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c42c031c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c42c05d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c42c02648"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c42c021f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42c058c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c42c06560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c42c03790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c42c06a00"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42c05020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b1c42c30818" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c42c30818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c42c30b68"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c42c30cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b1c42c2e6f0" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b1c42c2e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42c30370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42c349e0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42c349e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42c34d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b1c42c2a568" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c42c2a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c42c2a8b8"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c42c2aa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b1c42c2b528" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b1c42c2b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42c2a0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42c2fca0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42c2fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42c2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c42c1ce28" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoForwardLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42c1ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42c5f0c0"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42c62798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c42c604d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c42c60088"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c42c5f960"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c42c5f510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42c62be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c42c639e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c42c60aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c42c63e80"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42c62348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42c557f0" loc="49:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42c557f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42c55b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42c5dd18" loc="42:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42c5dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c5a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c5a228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c5a3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c5a538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c5a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c42c59020" loc="44:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42c59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42c59370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42c594f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c59680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c59808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42c59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b1c42c59e78" loc="45:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42c59e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b1c42c56020"/>
        <function-ref name="init" scoped="" ref="0x2b1c42c589f0"/>
        <function-ref name="creationTime" scoped="" ref="0x2b1c42c564f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSubSend" ref="0x2b1c42c56ab8" loc="48:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSubSend" scoped="" ref="0x2b1c42c56ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c56e08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c55020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c551a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c55330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c554b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42c55e68" loc="50:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42c55e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42c541e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42c54370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c544f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c54680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42c54808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42c5a950" loc="43:../../lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42c5a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42c5aca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b1c42c4c020" loc="48:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b1c42c4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c4c370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c4c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c4c680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c4c808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c4c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42c4ccc8" loc="49:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42c4ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42c4b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42c53438" loc="42:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42c53438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42c53788"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c53910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c53a98"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42c53c20"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42c53da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c42c50658" loc="44:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42c50658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42c509a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42c50b30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c50cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c50e40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42c4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b1c42c4f508" loc="45:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b1c42c4f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b1c42c4e560"/>
        <function-ref name="init" scoped="" ref="0x2b1c42c4e088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b1c42c4ea38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b1c42c4b3c8" loc="50:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b1c42c4b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42c4b718"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42c4b8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42c4ba28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42c4bbb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42c4bd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42c50080" loc="43:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42c50080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42c503d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b1c42c4a220" loc="51:../../lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c42c4a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42c4ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c42c68350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoRadioC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c42c68350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c42cb46c8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c42c67db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c42cb6ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c42cb6688"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c42cb3020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c42cb4b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c42cb6238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c42c67020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c42cb40f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c42c674c0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42c67960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b1c42cb2740" loc="44:../../lib/net/orinoco/OrinocoConfigC.nc">
      <component-ref qname="OrinocoConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cb2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c42cb2a90"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c42cb2c18"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c42cb2da0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c42caf020"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c42caf1a8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c42caf330"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c42caf4b8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c42caf640"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c42caf7c8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c42caf950"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c42cafad8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c42cafc60"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c42cafde8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c42cae120"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c42cae2a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42caede8" loc="44:../../lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42caede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42cab170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b1c42cab440" loc="45:../../lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b1c42cab440"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b1c42cab790"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b1c42cab918"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b1c42cabaa0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b1c42cabc28"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b1c42cabdb0"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b1c42caa020"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b1c42caa1a8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b1c42caa330"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b1c42caa4b8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b1c42caa640"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b1c42caa7c8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b1c42caa950"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b1c42caaad8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b1c42caad60"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b1c42ca9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingRoot" ref="0x2b1c42cb06a8" loc="44:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <component-ref qname="OrinocoRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42cb06a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
      </instance>
      <interface-functions>
        <function-ref name="setCommand" scoped="" ref="0x2b1c42cb09f8"/>
        <function-ref name="resetAndAddDestination" scoped="" ref="0x2b1c42cb0b80"/>
        <function-ref name="addDestination" scoped="" ref="0x2b1c42cb0d08"/>
        <function-ref name="resetBloomFilter" scoped="" ref="0x2b1c42cd4020"/>
        <function-ref name="setBroadcast" scoped="" ref="0x2b1c42cd41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingClient" ref="0x2b1c42cd44c0" loc="45:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <component-ref qname="OrinocoRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42cd44c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingClient"/>
      </instance>
      <interface-functions>
        <function-ref name="noMorePacketNotification" scoped="" ref="0x2b1c42cd4810"/>
        <function-ref name="confirmCommandExecution" scoped="" ref="0x2b1c42cd4998"/>
        <function-ref name="newCommandNotification" scoped="" ref="0x2b1c42cd4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingInternal" ref="0x2b1c42cd4e48" loc="46:../../lib/net/orinoco/OrinocoRoutingC.nc">
      <component-ref qname="OrinocoRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingInternal" scoped="" ref="0x2b1c42cd4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getCurrentBloomFilter" scoped="" ref="0x2b1c42cd31c0"/>
        <function-ref name="packetAvailableForUs" scoped="" ref="0x2b1c42cd3348"/>
        <function-ref name="updateBloomFilter" scoped="" ref="0x2b1c42cd34d0"/>
        <function-ref name="getRoutingVersionNumber" scoped="" ref="0x2b1c42cd3658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingRoot" ref="0x2b1c42cca178" loc="58:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingRoot" scoped="" ref="0x2b1c42cca178"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
      </instance>
      <interface-functions>
        <function-ref name="setCommand" scoped="" ref="0x2b1c42cca4c8"/>
        <function-ref name="resetAndAddDestination" scoped="" ref="0x2b1c42cca650"/>
        <function-ref name="addDestination" scoped="" ref="0x2b1c42cca7d8"/>
        <function-ref name="resetBloomFilter" scoped="" ref="0x2b1c42cca960"/>
        <function-ref name="setBroadcast" scoped="" ref="0x2b1c42ccaae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b1c42cd0220" loc="46:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c42cd0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c42cd0570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c42ccc5b8" loc="52:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42ccc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42ccc908"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42ccca90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42cccc18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42cccda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42ccb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMA" ref="0x2b1c42cd08e8" loc="48:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMA" scoped="" ref="0x2b1c42cd08e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b1c42cd0c38"/>
        <function-ref name="changed" scoped="" ref="0x2b1c42cd0dc0"/>
        <function-ref name="amGroup" scoped="" ref="0x2b1c42cce020"/>
        <function-ref name="setAddress" scoped="" ref="0x2b1c42cce1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b1c42ccdb80" loc="51:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42ccdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42ccc020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42ccc1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42ccc330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b1c42ccb2a8" loc="53:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b1c42ccb2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b1c42ccb5f8"/>
        <function-ref name="rand32" scoped="" ref="0x2b1c42ccb780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42ccba78" loc="56:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42ccba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42ccbdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingClient" ref="0x2b1c42ccae00" loc="59:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingClient" scoped="" ref="0x2b1c42ccae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingClient"/>
      </instance>
      <interface-functions>
        <function-ref name="noMorePacketNotification" scoped="" ref="0x2b1c42cc91a8"/>
        <function-ref name="confirmCommandExecution" scoped="" ref="0x2b1c42cc9330"/>
        <function-ref name="newCommandNotification" scoped="" ref="0x2b1c42cc94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Clock" ref="0x2b1c42cce610" loc="49:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Clock" scoped="" ref="0x2b1c42cce610"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42ccd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoRoutingInternal" ref="0x2b1c42cc97e0" loc="60:../../lib/net/orinoco/OrinocoRoutingP.nc">
      <component-ref qname="OrinocoRoutingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoRoutingInternal" scoped="" ref="0x2b1c42cc97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
      </instance>
      <interface-functions>
        <function-ref name="getCurrentBloomFilter" scoped="" ref="0x2b1c42cc9b30"/>
        <function-ref name="packetAvailableForUs" scoped="" ref="0x2b1c42cc9cb8"/>
        <function-ref name="updateBloomFilter" scoped="" ref="0x2b1c42cc9e40"/>
        <function-ref name="getRoutingVersionNumber" scoped="" ref="0x2b1c42cc8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Orinoco" ref="0x2b1c42d14c68" loc="10:../../lib/net/orinoco/RadioTestAppC.nc">
      <component-ref qname="RadioTestAppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Orinoco" scoped="" ref="0x2b1c42d14c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDataInterface"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedBeacon" scoped="" ref="0x2b1c42d11020"/>
        <function-ref name="receivedData" scoped="" ref="0x2b1c42d111a8"/>
        <function-ref name="appendDataVer" scoped="" ref="0x2b1c42d11330"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2b1c42d114b8"/>
        <function-ref name="aboutToSendData" scoped="" ref="0x2b1c42d11640"/>
        <function-ref name="aboutToSendBeacon" scoped="" ref="0x2b1c42d117c8"/>
        <function-ref name="getDataPayload" scoped="" ref="0x2b1c42d11950"/>
        <function-ref name="appendBeacon" scoped="" ref="0x2b1c42d11ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b1c42d0a6c8" loc="14:../../lib/net/orinoco/RadioTestAppC.nc">
      <component-ref qname="RadioTestAppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b1c42d0a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:65" alignment="I:1"><nx_struct-ref name="CloudCoverMAX" ref="0x2b1c41ea6198"/>
            <typename><typedef-ref name="CloudCoverMAX" ref="0x2b1c41ea5438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b1c42d0d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b1c42d10098" loc="13:../../lib/net/orinoco/RadioTestAppC.nc">
      <component-ref qname="RadioTestAppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b1c42d10098"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:65" alignment="I:1"><nx_struct-ref name="CloudCoverMAX" ref="0x2b1c41ea6198"/>
            <typename><typedef-ref name="CloudCoverMAX" ref="0x2b1c41ea5438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b1c42d0f5c8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42d10c18"/>
        <function-ref name="set" scoped="" ref="0x2b1c42d0f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x2b1c42d3de70" loc="113:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x2b1c42d3de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42d3b1e8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42d3b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Orinoco" ref="0x2b1c42d5b898" loc="16:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Orinoco" scoped="" ref="0x2b1c42d5b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDataInterface"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedBeacon" scoped="" ref="0x2b1c42d5bbe8"/>
        <function-ref name="receivedData" scoped="" ref="0x2b1c42d5bd70"/>
        <function-ref name="appendDataVer" scoped="" ref="0x2b1c42d5a020"/>
        <function-ref name="getBeaconPayload" scoped="" ref="0x2b1c42d5a1a8"/>
        <function-ref name="aboutToSendData" scoped="" ref="0x2b1c42d5a330"/>
        <function-ref name="aboutToSendBeacon" scoped="" ref="0x2b1c42d5a4b8"/>
        <function-ref name="getDataPayload" scoped="" ref="0x2b1c42d5a640"/>
        <function-ref name="appendBeacon" scoped="" ref="0x2b1c42d5a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b1c42d52418" loc="22:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b1c42d52418"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:65" alignment="I:1"><nx_struct-ref name="CloudCoverMAX" ref="0x2b1c41ea6198"/>
            <typename><typedef-ref name="CloudCoverMAX" ref="0x2b1c41ea5438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b1c42d50020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Decoder" ref="0x2b1c42d5b020" loc="15:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Decoder" scoped="" ref="0x2b1c42d5b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Decoder"/>
      </instance>
      <interface-functions>
        <function-ref name="upScale" scoped="" ref="0x2b1c42d5b370"/>
        <function-ref name="decode" scoped="" ref="0x2b1c42d5b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VerSize" ref="0x2b1c42d55e30" loc="20:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VerSize" scoped="" ref="0x2b1c42d55e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDataSizeInterface"/>
      </instance>
      <interface-functions>
        <function-ref name="getVersionSize" scoped="" ref="0x2b1c42d541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b1c42d5ac88" loc="17:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b1c42d5ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c42d55858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b1c42d546b0" loc="21:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b1c42d546b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:65" alignment="I:1"><nx_struct-ref name="CloudCoverMAX" ref="0x2b1c41ea6198"/>
            <typename><typedef-ref name="CloudCoverMAX" ref="0x2b1c41ea5438"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b1c42d53d00"/>
        <function-ref name="get" scoped="" ref="0x2b1c42d533a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42d53830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="decodingTask" ref="0x2b1c42d479a8" loc="63:../../lib/net/orinoco/RadioTestC.nc">
      <component-ref qname="RadioTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="decodingTask" scoped="" ref="0x2b1c42d479a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42d47cf8"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42d47e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Decoder" ref="0x2b1c42d5f1d0" loc="5:../../lib/net/orinoco/DecodeC.nc">
      <component-ref qname="DecodeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Decoder" scoped="" ref="0x2b1c42d5f1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Decoder"/>
      </instance>
      <interface-functions>
        <function-ref name="upScale" scoped="" ref="0x2b1c42d5f520"/>
        <function-ref name="decode" scoped="" ref="0x2b1c42d5f6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c431c6398" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c431c6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c431c66e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c431c6870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c431c69f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c431c6b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c431c6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c431c5020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c431c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c431c5370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c431c54f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c431c5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c431c5808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c431c5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c431c5bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c431c5bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c431c4020"/>
        <function-ref name="source" scoped="" ref="0x2b1c431c41a8"/>
        <function-ref name="address" scoped="" ref="0x2b1c431c4330"/>
        <function-ref name="destination" scoped="" ref="0x2b1c431c44b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c431c4640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c431c47c8"/>
        <function-ref name="type" scoped="" ref="0x2b1c431c4950"/>
        <function-ref name="setType" scoped="" ref="0x2b1c431c4ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c431c4c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c431c4de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c431c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b1c431c32a8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b1c431c32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1c431c35f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b1c431c3780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1c431c3908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c439bb5c8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c439bb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c439bb918"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c439bbaa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c439bbc28"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c439bbdb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c439ba020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b1c439ba2c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c439ba2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c439ba618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c439ba7a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c439ba928"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c439baab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c439bac38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1c439bae80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c439bae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c439b91f8"/>
        <function-ref name="source" scoped="" ref="0x2b1c439b9380"/>
        <function-ref name="address" scoped="" ref="0x2b1c439b9508"/>
        <function-ref name="destination" scoped="" ref="0x2b1c439b9690"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c439b9818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c439b99a0"/>
        <function-ref name="type" scoped="" ref="0x2b1c439b9b28"/>
        <function-ref name="setType" scoped="" ref="0x2b1c439b9cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c439b9e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c439b8020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c439b81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42dcba60" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42dcba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42dcbdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42dc7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42dc71a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42dc7330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42dc74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b1c42e2bbd0" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42e2bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e29020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e291a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e29330"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e294b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e29640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42e2ce40" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42e2ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e2b1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e2b370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e2b4f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e2b680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e2b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c42e27020" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42e27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42e27370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42e274f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e27680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e27808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42e27990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b1c42e27c58" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b1c42e27c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42e26020"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42e261a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b1c42e26470" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b1c42e26470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42e267c0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42e26948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b1c42e29888" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e29888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c42e29bd8"/>
        <function-ref name="source" scoped="" ref="0x2b1c42e29d60"/>
        <function-ref name="address" scoped="" ref="0x2b1c42e28020"/>
        <function-ref name="destination" scoped="" ref="0x2b1c42e281a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42e28330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42e284b8"/>
        <function-ref name="type" scoped="" ref="0x2b1c42e28640"/>
        <function-ref name="setType" scoped="" ref="0x2b1c42e287c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c42e28950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c42e28ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c42e28c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42e245e8" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e245e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42e24938"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42e24ac0"/>
        <function-ref name="start" scoped="" ref="0x2b1c42e24c48"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42e24dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42e21570" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42e21570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e218c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e21a48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e21bd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e21d58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c42e20d78" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42e20d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42e1f0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42e1f278"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e1f400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e1f588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42e1f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42e207a0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42e207a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42e20af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c42e1dad8" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c42e1dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42e1de28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42e1b020"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42e1b1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42e1b330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c42e1b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42e1b640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c42e1b7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42e1bde8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42e1b950"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c42e1bad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42e1bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1c42e1d1a0" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c42e1d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1c42e1d4f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b1c42e1d678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1c42e1d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c42e1f9b0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e1f9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c42e1fd00"/>
        <function-ref name="source" scoped="" ref="0x2b1c42e1e020"/>
        <function-ref name="address" scoped="" ref="0x2b1c42e1e1a8"/>
        <function-ref name="destination" scoped="" ref="0x2b1c42e1e330"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42e1e4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42e1e640"/>
        <function-ref name="type" scoped="" ref="0x2b1c42e1e7c8"/>
        <function-ref name="setType" scoped="" ref="0x2b1c42e1e950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c42e1ead8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c42e1ec60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c42e1ede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b1c42e70308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b1c42e70308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e70658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e707e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e70968"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e70af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e70c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b1c42e6f020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b1c42e6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42e6f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b1c42e18460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c42e18460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e187d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e18958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e18ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e18c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e18df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b1c42e72d20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c42e72d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c42e710a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c42e71228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e713b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e71538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c42e716c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42e73180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42e73180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42e734f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b1c42e71908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b1c42e71908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b1c42e71c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b1c42e71de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b1c42e70020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b1c42e73738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b1c42e73738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b1c42e73a88"/>
        <function-ref name="source" scoped="" ref="0x2b1c42e73c10"/>
        <function-ref name="address" scoped="" ref="0x2b1c42e73d98"/>
        <function-ref name="destination" scoped="" ref="0x2b1c42e72020"/>
        <function-ref name="setSource" scoped="" ref="0x2b1c42e721a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b1c42e72330"/>
        <function-ref name="type" scoped="" ref="0x2b1c42e724b8"/>
        <function-ref name="setType" scoped="" ref="0x2b1c42e72640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b1c42e727c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b1c42e72950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b1c42e72ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42e6b728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e6b728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42e6ba78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42e6bc00"/>
        <function-ref name="start" scoped="" ref="0x2b1c42e6bd88"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42e6a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42e69208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42e69208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42e69558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42e696e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42e69868"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42e699f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42e69b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42e6b110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42e6b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42e6b460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42e6a760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42e6a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42e6aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c42e668f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c42e668f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42e66c48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42e66dd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42e62020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42e621a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c42e62330"/>
        <function-ref name="get" scoped="" ref="0x2b1c42e624b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c42e62640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42e62c60"/>
        <function-ref name="set" scoped="" ref="0x2b1c42e627c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c42e62950"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42e62ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b1c42e66020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b1c42e66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1c42e66370"/>
        <function-ref name="offset" scoped="" ref="0x2b1c42e664f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1c42e66680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b1c42e9cda8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b1c42e9cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c42e9a170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c42e9a2f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c42e9a480"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42e9a608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b1c42eea830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b1c42eea830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42eeab80"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42eead08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b1c42e8a398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b1c42e8a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c42e8a6e8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42e8a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b1c42ec7d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b1c42ec7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42ec60f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42ec6278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c42e9c790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c42e9c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c42e9cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b1c42e87e40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b1c42e87e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b1c42e891c0"/>
        <function-ref name="flush" scoped="" ref="0x2b1c42e89348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b1c42eec020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b1c42eec020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42eec370"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42eec4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b1c42e8bb38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1c42e8bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b1c42e94020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b1c42e941a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b1c42e94330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b1c42e944b8"/>
        <function-ref name="putData" scoped="" ref="0x2b1c42e94640"/>
        <function-ref name="putDone" scoped="" ref="0x2b1c42e947c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b1c42e94950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c42e94bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c42e94bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42e90020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42e901a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42e90330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42e904b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c42e90640"/>
        <function-ref name="get" scoped="" ref="0x2b1c42e907c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c42e90950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42e8a020"/>
        <function-ref name="set" scoped="" ref="0x2b1c42e90ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c42e90c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42e90de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b1c42ee6918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b1c42ee6918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42ee6c68"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42ee6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b1c42e95950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b1c42e95950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b1c42e95ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b1c42e95e28"/>
        <function-ref name="startSend" scoped="" ref="0x2b1c42e99020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b1c42e991a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b1c42e91b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1c42e91b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b1c42e98020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b1c42e981a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b1c42e98330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b1c42fe9100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b1c42fe9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42fe9450"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42fe95d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b1c42fed020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b1c42fed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42fed390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c42fed518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c42fed6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c42fed828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42fed9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b1c42fe98a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b1c42fe98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c42fe9bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c42fe9d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c42fee868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c42fee868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c42feebd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b1c42feddb8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b1c42feddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b1c41cb34b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1c42fec170"/>
        <function-ref name="offset" scoped="" ref="0x2b1c42fec2f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1c42fec480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c42feba50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c42feba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42febda0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42fea020"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42fea1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42fea330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c42fea4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c42fea640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c42fea7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42feade8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42feaad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42fea950"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c42feac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b1c42feb020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b1c42feb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b1c42feb370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b1c42feb4f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b1c42feb680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b1c42feb808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b1c42fec6c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b1c42fec6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b1c42feca18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b1c42fecba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b1c42fecd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b1c42fd6448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1c42fd6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c42fd6798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1c42fd6920"/>
        <function-ref name="receive" scoped="" ref="0x2b1c42fd6aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1c42fd6c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1c42fd6db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1c42fe3020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c42fe31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b1c42fe7b30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b1c42fe7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b1c42fe7e80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b1c42fe4030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b1c42fe41b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b1c42fe4340"/>
        <function-ref name="putData" scoped="" ref="0x2b1c42fe44c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b1c42fe4650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b1c42fe47d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c42fe3420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c42fe3420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c42fe3770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c42fe38f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c42fe3a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c42fe3c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c42fe3d90"/>
        <function-ref name="get" scoped="" ref="0x2b1c42fe2020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c42fe21a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c42fe27c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c42fe2330"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c42fe24b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c42fe2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1c43014290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1c43014290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c430145e0"/>
        <function-ref name="receive" scoped="" ref="0x2b1c43014768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1c4301a0c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1c4301a0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4301a410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1c4301a598"/>
        <function-ref name="receive" scoped="" ref="0x2b1c4301a720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1c4301a8a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1c4301aa30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1c4301abb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c4301ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1c42fe68b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1c42fe68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c42fe6c00"/>
        <function-ref name="stop" scoped="" ref="0x2b1c42fe6d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1c43018af0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1c43018af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c43018e40"/>
        <function-ref name="receive" scoped="" ref="0x2b1c43013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1c43013310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1c43013310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c43013660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1c430137e8"/>
        <function-ref name="receive" scoped="" ref="0x2b1c43013970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1c43013af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1c43013c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1c43013e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43012020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1c43012598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c43012598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c430103a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c43010cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c43010830"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4300f190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1c43018338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1c43018338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43018688"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43018810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b1c4300de58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b1c4300de58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4302a1e8"/>
        <function-ref name="receive" scoped="" ref="0x2b1c4302a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b1c430285f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b1c430285f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43028948"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43028ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c4300d120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4300d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4300d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b1c4302a5f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b1c4302a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c4302a948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b1c4302aad0"/>
        <function-ref name="receive" scoped="" ref="0x2b1c4302ac58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b1c4302ade0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b1c43028020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b1c430281a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c43028330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b1c43026c60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c43026c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c430259f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c43024330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c43025e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c430247b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b1c430275c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b1c430275c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1c43027910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1c43027a98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1c43027c20"/>
        <function-ref name="txDone" scoped="" ref="0x2b1c43027da8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1c43026020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1c430261a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1c43026330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1c430264b8"/>
        <function-ref name="tx" scoped="" ref="0x2b1c43026640"/>
        <function-ref name="rx" scoped="" ref="0x2b1c430267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b1c4300d6f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b1c4300d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c4300da48"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4300dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b1c43028d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b1c43028d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43027170"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430272f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b1c43067860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b1c43067860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1c43067bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1c43067d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1c43066020"/>
        <function-ref name="txDone" scoped="" ref="0x2b1c430661a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1c43066330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1c430664b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1c43066640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1c430667c8"/>
        <function-ref name="tx" scoped="" ref="0x2b1c43066950"/>
        <function-ref name="rx" scoped="" ref="0x2b1c43066ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b1c43063020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b1c43063020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1c43063370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1c430634f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1c43063680"/>
        <function-ref name="txDone" scoped="" ref="0x2b1c43063808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1c43063990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1c43063b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1c43063ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1c43063e28"/>
        <function-ref name="tx" scoped="" ref="0x2b1c43062020"/>
        <function-ref name="rx" scoped="" ref="0x2b1c430621a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b1c43067020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1c43067020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43067370"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430674f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b1c43066e58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1c43066e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c430651e8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43065370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b1c430656f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1c430656f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43065a40"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43065bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b1c43068700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1c43068700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c43068a50"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43068bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b1c4305f020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b1c4305f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4305f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b1c4305e8a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b1c4305e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1c4305ebf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1c4305ed78"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1c4305d020"/>
        <function-ref name="txDone" scoped="" ref="0x2b1c4305d1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1c4305d330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1c4305d4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1c4305d640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1c4305d7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b1c4305d950"/>
        <function-ref name="rx" scoped="" ref="0x2b1c4305dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b1c4305de30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b1c4305de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4305c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b1c4305b6d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b1c4305b6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b1c4305ba28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b1c4305bbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b1c4305bd38"/>
        <function-ref name="txDone" scoped="" ref="0x2b1c4305a020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b1c4305a1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b1c4305a330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b1c4305a4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b1c4305a640"/>
        <function-ref name="tx" scoped="" ref="0x2b1c4305a7c8"/>
        <function-ref name="rx" scoped="" ref="0x2b1c4305a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b1c4305e020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b1c4305e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c4305e370"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4305e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b1c4305c568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b1c4305c568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c4305c8b8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4305ca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b1c4305ce00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b1c4305ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c4305b1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4305b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b1c4305ac70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b1c4305ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b1c43059020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b1c430591a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b1c43059330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b1c430594b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b1c43059640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b1c43059950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b1c43059950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b1c43059ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b1c4305f730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b1c4305f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b1c4305fa80"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4305fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c430ba188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c430ba188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c430b9020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c430b9930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c430b94a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c430b9db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c430b4020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c430b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TThree" ref="0x2b1c41bd1d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c430b4d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c430b36b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c430b3230"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c430b3b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c4310cc90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c4310cc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b1c4310b020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c4310b1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c4310b330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c4310b4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c4310b640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c4310b7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c4310b950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c4310bad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b1c4310bc60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c4310bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1c43109350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1c43109350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1c43106580"/>
        <function-ref name="test" scoped="" ref="0x2b1c43107c20"/>
        <function-ref name="get" scoped="" ref="0x2b1c43108020"/>
        <function-ref name="captured" scoped="" ref="0x2b1c43108980"/>
        <function-ref name="reset" scoped="" ref="0x2b1c43108e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c431060f8"/>
        <function-ref name="set" scoped="" ref="0x2b1c431084a8"/>
        <function-ref name="start" scoped="" ref="0x2b1c43107310"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43107798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b1c431041c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b1c431041c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c43102930"/>
        <function-ref name="fired" scoped="" ref="0x2b1c431036d0"/>
        <function-ref name="get" scoped="" ref="0x2b1c43104d48"/>
        <function-ref name="reset" scoped="" ref="0x2b1c43103b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c43102db8"/>
        <function-ref name="set" scoped="" ref="0x2b1c431031f8"/>
        <function-ref name="start" scoped="" ref="0x2b1c43102020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c431024a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c430b2c30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c430b2c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c4310ddb8"/>
        <function-ref name="test" scoped="" ref="0x2b1c4310d4a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c430af820"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c4310c270"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c4310c748"/>
        <function-ref name="reset" scoped="" ref="0x2b1c4310e658"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4310e1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c4310d930"/>
        <function-ref name="set" scoped="" ref="0x2b1c430afca8"/>
        <function-ref name="start" scoped="" ref="0x2b1c4310eae0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4310d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b1c430f83d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b1c430f83d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b1c430f8720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b1c430f88a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b1c430f8a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b1c430f8bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b1c430f8d40"/>
        <function-ref name="setControlB" scoped="" ref="0x2b1c430f7020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b1c430f71a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b1c430f7330"/>
        <function-ref name="setControlC" scoped="" ref="0x2b1c430f74b8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b1c430f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b1c430f24e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b1c430f24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c430efc30"/>
        <function-ref name="fired" scoped="" ref="0x2b1c430f19e8"/>
        <function-ref name="get" scoped="" ref="0x2b1c430f1088"/>
        <function-ref name="reset" scoped="" ref="0x2b1c430f1e70"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c430ee0f8"/>
        <function-ref name="set" scoped="" ref="0x2b1c430f1510"/>
        <function-ref name="start" scoped="" ref="0x2b1c430ef320"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430ef7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b1c430f7b18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b1c430f7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b1c430f3db8"/>
        <function-ref name="test" scoped="" ref="0x2b1c430f34a8"/>
        <function-ref name="get" scoped="" ref="0x2b1c430f6728"/>
        <function-ref name="captured" scoped="" ref="0x2b1c430f50c0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c430f5598"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c430f3930"/>
        <function-ref name="set" scoped="" ref="0x2b1c430f6bb0"/>
        <function-ref name="start" scoped="" ref="0x2b1c430f5a20"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b1c430ee770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b1c430ee770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c430ea020"/>
        <function-ref name="fired" scoped="" ref="0x2b1c430edd08"/>
        <function-ref name="get" scoped="" ref="0x2b1c430ed3a8"/>
        <function-ref name="reset" scoped="" ref="0x2b1c430eb1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c430ea4a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c430ed830"/>
        <function-ref name="start" scoped="" ref="0x2b1c430eb680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430ebb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b1c430eab20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b1c430eab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b1c430e6310"/>
        <function-ref name="fired" scoped="" ref="0x2b1c430e80c0"/>
        <function-ref name="get" scoped="" ref="0x2b1c430e9728"/>
        <function-ref name="reset" scoped="" ref="0x2b1c430e8548"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c430e6798"/>
        <function-ref name="set" scoped="" ref="0x2b1c430e9bb0"/>
        <function-ref name="start" scoped="" ref="0x2b1c430e89d0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430e8e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c430fd298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c430fd298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c430f94a8"/>
        <function-ref name="test" scoped="" ref="0x2b1c430fba40"/>
        <function-ref name="get" scoped="" ref="0x2b1c430fde18"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c430f9930"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c430f9e08"/>
        <function-ref name="reset" scoped="" ref="0x2b1c430fcc70"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c430fc7e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c430f9020"/>
        <function-ref name="set" scoped="" ref="0x2b1c430fc310"/>
        <function-ref name="start" scoped="" ref="0x2b1c430fb130"/>
        <function-ref name="stop" scoped="" ref="0x2b1c430fb5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c43197020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c43197020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b1c41aff388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b1c41aff388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c43197370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c43197740" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c43197740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c43193930"/>
        <function-ref name="test" scoped="" ref="0x2b1c43193020"/>
        <function-ref name="get" scoped="" ref="0x2b1c431963a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c43193db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c431922f0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c431951f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c43196d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c431934a8"/>
        <function-ref name="set" scoped="" ref="0x2b1c43196830"/>
        <function-ref name="start" scoped="" ref="0x2b1c43195680"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43195b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c4318f020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c4318f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TThree" ref="0x2b1c41bd1d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c4318fd70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c4318e6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c4318e230"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4318eb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b1c4318d0e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c4318d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b1c43189270"/>
        <function-ref name="test" scoped="" ref="0x2b1c4318a930"/>
        <function-ref name="get" scoped="" ref="0x2b1c4318dc60"/>
        <function-ref name="setScale" scoped="" ref="0x2b1c431896f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b1c43189bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b1c4318ca90"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c4318c608"/>
        <function-ref name="isOn" scoped="" ref="0x2b1c4318adb8"/>
        <function-ref name="set" scoped="" ref="0x2b1c4318c130"/>
        <function-ref name="start" scoped="" ref="0x2b1c4318a020"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4318a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b1c43183e20" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b1c43183e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TThree" ref="0x2b1c41bd1d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c43181be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c43180548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c431800c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c431809d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b1c43185c50" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b1c43185c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8c430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b1c41b8c788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c431849f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b1c43183330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b1c43184e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b1c431837b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b1c431786e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b1c431786e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b1c43178a30"/>
        <function-ref name="offset" scoped="" ref="0x2b1c43178bb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b1c43178d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b1c431c0808" loc="43:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1c431c0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b1c432070c0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b1c43207960"/>
        <function-ref name="element" scoped="" ref="0x2b1c43207e00"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c431bfc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c43207510"/>
        <function-ref name="empty" scoped="" ref="0x2b1c431bf390"/>
        <function-ref name="size" scoped="" ref="0x2b1c431bf7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b1c43201508" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1c43201508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b1c43200d78"/>
        <function-ref name="enqueue" scoped="" ref="0x2b1c431fe648"/>
        <function-ref name="element" scoped="" ref="0x2b1c431feae8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c43200928"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c431fe1f8"/>
        <function-ref name="empty" scoped="" ref="0x2b1c43200088"/>
        <function-ref name="size" scoped="" ref="0x2b1c432004d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b1c431fc020" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b1c431fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b1c431fc370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c431fc4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c431fc680"/>
        <function-ref name="cancel" scoped="" ref="0x2b1c431fc808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b1c431fc990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c431fcc18" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c431fcc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c431fb020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c431fb1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c431fb330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c431fb4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c431fb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b1c431f6c78" loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b1c431f6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c431f5020"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c431f51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c43202480" loc="89:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c43202480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c432027d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b1c431fb8b8" loc="96:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c431fb8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c431fbc08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c431fbd90"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c431fa020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c431fa1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c431fa330"/>
        <function-ref name="get" scoped="" ref="0x2b1c431fa4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c431fa640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c431fac60"/>
        <function-ref name="set" scoped="" ref="0x2b1c431fa7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c431fa950"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c431faad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b1c431ffc08" loc="90:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b1c431ffc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b1c43201020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b1c431df250" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c431df250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c431df5a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c431df728"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c431df8b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c431dfa38"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c431dfbc0"/>
        <function-ref name="get" scoped="" ref="0x2b1c431dfd48"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c431de020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c431de640"/>
        <function-ref name="set" scoped="" ref="0x2b1c431de1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c431de330"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c431de4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b1c431d91b0" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b1c431d91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c431d9500"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c431d9688"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c431d9810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c431d9998"/>
        <function-ref name="get" scoped="" ref="0x2b1c431d9b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c431d9ca8"/>
        <function-ref name="set" scoped="" ref="0x2b1c431d9e30"/>
        <function-ref name="clr" scoped="" ref="0x2b1c431d8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c431db4f0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c431db4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c431db840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b1c431d8338" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b1c431d8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c431d8688"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c431d8810"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c431d8998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c431d8b20"/>
        <function-ref name="get" scoped="" ref="0x2b1c431d8ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c431d8e30"/>
        <function-ref name="set" scoped="" ref="0x2b1c431d7020"/>
        <function-ref name="clr" scoped="" ref="0x2b1c431d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b1c431dbab8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b1c431dbab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b1c431dbe08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b1c431da020"/>
        <function-ref name="led1On" scoped="" ref="0x2b1c431da1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b1c431da330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b1c431da4b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c431da640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b1c431da7c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b1c431dade8"/>
        <function-ref name="set" scoped="" ref="0x2b1c431da950"/>
        <function-ref name="led0On" scoped="" ref="0x2b1c431daad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b1c431dac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b1c431d74c0" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b1c431d74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c431d7810"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c431d7998"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c431d7b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c431d7ca8"/>
        <function-ref name="get" scoped="" ref="0x2b1c431d7e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c431d6020"/>
        <function-ref name="set" scoped="" ref="0x2b1c431d61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c431d6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b1c431dcb08" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b1c431dcb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c431dce58"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c43221020"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c432211a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c43221330"/>
        <function-ref name="get" scoped="" ref="0x2b1c432214b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c43221640"/>
        <function-ref name="set" scoped="" ref="0x2b1c432217c8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43221950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b1c43221ca8" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b1c43221ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c43220020"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c432201a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c43220330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c432204b8"/>
        <function-ref name="get" scoped="" ref="0x2b1c43220640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c432207c8"/>
        <function-ref name="set" scoped="" ref="0x2b1c43220950"/>
        <function-ref name="clr" scoped="" ref="0x2b1c43220ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b1c4321e020" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c4321e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c4321e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b1c43220e30" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b1c43220e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b1c4321f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b1c4321f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b1c4321f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b1c4321f640"/>
        <function-ref name="get" scoped="" ref="0x2b1c4321f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b1c4321f950"/>
        <function-ref name="set" scoped="" ref="0x2b1c4321fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b1c4321fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b1c43219b58" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b1c43219b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b1c43216020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c43210708" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c43210708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c43210a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b1c43210d28" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b1c43210d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b1c4320f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b1c43209c08" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c43209c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c4326c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b1c4326c3b0" loc="40:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b1c4326c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b1c4326c700"/>
        <function-ref name="stopDone" scoped="" ref="0x2b1c4326c888"/>
        <function-ref name="start" scoped="" ref="0x2b1c4326ca10"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4326cb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b1c43256e28" loc="45:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b1c43256e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b1c432531a8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b1c43253330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b1c432534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b1c43256490" loc="42:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c43256490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b1c432567e0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b1c43256968"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b1c43256af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b1c43250af0" loc="45:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b1c43250af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b1c43250e40"/>
        <function-ref name="setRoot" scoped="" ref="0x2b1c4324f020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b1c4324f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b1c43250158" loc="42:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b1c43250158"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b1c432504a8"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b1c43250630"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b1c432507b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b1c4324f4a8" loc="46:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b1c4324f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b1c4324f7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b1c432416e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="OrinocoP.SendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b1c432416e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41e9aa28"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b1c41e9ad80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b1c43290088"/>
        <function-ref name="enqueue" scoped="" ref="0x2b1c43290d48"/>
        <function-ref name="element" scoped="" ref="0x2b1c4328f3a8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c43291c10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b1c432906e8"/>
        <function-ref name="empty" scoped="" ref="0x2b1c43291370"/>
        <function-ref name="size" scoped="" ref="0x2b1c432917c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b1c4328b478" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="OrinocoP.MsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b1c4328b478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
            <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c432ce3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c432d08c0"/>
        <function-ref name="empty" scoped="" ref="0x2b1c432d0020"/>
        <function-ref name="put" scoped="" ref="0x2b1c432d0d10"/>
        <function-ref name="size" scoped="" ref="0x2b1c432d0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b1c43ad9db8" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b1c43ad9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
            <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c43ad6cf0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b1c43ad61f8"/>
        <function-ref name="empty" scoped="" ref="0x2b1c43ad8930"/>
        <function-ref name="put" scoped="" ref="0x2b1c43ad6648"/>
        <function-ref name="size" scoped="" ref="0x2b1c43ad8d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b1c43ad9718" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b1c43ad9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b1c43ad9a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2b1c432ccd78" loc="46:../../lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2b1c432ccd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41e9bbf0"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b1c41e9a0d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b1c432cb8f0"/>
        <function-ref name="flush" scoped="" ref="0x2b1c432ba278"/>
        <function-ref name="lookup" scoped="" ref="0x2b1c432cbd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CacheCompare" ref="0x2b1c432ba7b8" loc="49:../../lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b1c432ba7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41e9bbf0"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b1c41e9a0d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b1c432b9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b1c432b4d78" loc="46:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b1c432b4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b1c432b30f0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b1c432b3278"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b1c432b3400"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b1c432b3588"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b1c432b3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b1c432b4060" loc="45:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b1c432b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c432b43b0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c432b4538"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c432b46c0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c432b4848"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c432b49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b1c432af240" loc="48:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b1c432af240"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b1c432af590"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b1c432af718"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b1c432af8a0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b1c432afa28"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b1c432afbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b1c432ad490" loc="52:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b1c432ad490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c432ac088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PktRateJobConfig" ref="0x2b1c432aec58" loc="49:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b1c432aec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c432ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PktRateJob" ref="0x2b1c432a8700" loc="53:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJob" scoped="" ref="0x2b1c432a8700"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c432a8a50"/>
        <function-ref name="done" scoped="" ref="0x2b1c432a8bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b1c432b0500" loc="47:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b1c432b0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c432b0850"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c432b09d8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c432b0b60"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c432b0ce8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c432b0e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b1c432e9820" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c432e9820"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c432e9b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b1c432e9060" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b1c432e9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c432e93b0"/>
        <function-ref name="done" scoped="" ref="0x2b1c432e9538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b1c432df020" loc="42:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b1c432df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b1c432df370"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b1c432df4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b1c432dfc88" loc="43:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b1c432dfc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="jobid_t" ref="0x2b1c432e8020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c432de020"/>
        <function-ref name="done" scoped="" ref="0x2b1c432de1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchTimer" ref="0x2b1c432d8738" loc="50:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DispatchTimer" scoped="" ref="0x2b1c432d8738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c43341a18"/>
        <function-ref name="fired" scoped="" ref="0x2b1c43342158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c43342e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c433429f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c4333f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c43341e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c433425a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c43343370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c43341448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c43343810"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43343cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b1c432da0c0" loc="46:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b1c432da0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b1c432da410"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b1c432da598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dispatch" ref="0x2b1c43338830" loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dispatch" scoped="" ref="0x2b1c43338830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b1c43338b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b1c43338d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b1c432dad28" loc="47:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b1c432dad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c432d80a0"/>
        <function-ref name="done" scoped="" ref="0x2b1c432d8228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c4331f350" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="EASchedulerC.DispatchTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c4331f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4331c6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4331edb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c4331dad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c4331d688"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c4331a020"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c4331cb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4331d238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c4331e020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c4331c0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c4331e4c0"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4331e960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b1c432e0e48" loc="42:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <component-ref qname="EAEnergyManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c432e0e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c433161c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b1c433130c0" loc="44:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b1c433130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b1c43313410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b1c43313bd8" loc="45:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b1c43313bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c43312020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAScheduler" ref="0x2b1c433122d8" loc="46:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b1c433122d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b1c43312628"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b1c433127b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b1c43371478" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c43371478"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c433717c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b1c43371ab0" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c43371ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c43371e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c4335dab8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c4335dab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c4335ad60"/>
        <function-ref name="fired" scoped="" ref="0x2b1c4335b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c4335a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c4335bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c43359648"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c433591f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c4335b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c4335c658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c4335a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c4335caf8"/>
        <function-ref name="stop" scoped="" ref="0x2b1c4335b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b1c43356020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="TestAppC.BootTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b1c43356020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b1c41b8e020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b1c41b8e378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b1c433532b8"/>
        <function-ref name="fired" scoped="" ref="0x2b1c43355978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b1c433546c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b1c43354278"/>
        <function-ref name="getdt" scoped="" ref="0x2b1c43353b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b1c43353708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b1c43355dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b1c43356b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b1c43354c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b1c43355088"/>
        <function-ref name="stop" scoped="" ref="0x2b1c43355528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c4334ddf0" loc="45:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c4334ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4334a170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4334a2f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4334a480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4334a608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4334a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c4334d798" loc="42:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c4334d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4334dae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c433458e0" loc="47:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c433458e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c43345c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c43345db8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c43344020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c433441a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c43344330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b1c433af020" loc="49:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b1c433af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b1c433af370"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b1c433af4f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b1c433af680"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b1c433af808"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b1c433af990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c43345288" loc="44:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c43345288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c433455d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b1c433445b0" loc="48:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b1c433445b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c43344900"/>
        <function-ref name="done" scoped="" ref="0x2b1c43344a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b1c433a6308" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c433a6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b1c433479b8" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b1c433479b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c43347d08"/>
        <function-ref name="done" scoped="" ref="0x2b1c433a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b1c433a5dd8" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c433a4170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b1c433a4458" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c433a4458"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c433a47a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b1c433a3ca8" loc="42:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c433a3ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c433a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c4339a4c8" loc="45:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c4339a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c4339a818"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c4339a9a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c4339ab28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c4339acb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c4339ae38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c4339de48" loc="42:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c4339de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c4339a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b1c43396180" loc="47:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b1c43396180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b1c433964d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b1c43396658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b1c433967e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b1c43396968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b1c43396af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStats" ref="0x2b1c43395808" loc="49:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStats" scoped="" ref="0x2b1c43395808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b1c41f502a8"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b1c41f56e10"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c43394390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b1c43399b00" loc="44:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b1c43399b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b1c43399e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketStats" ref="0x2b1c43394ac0" loc="50:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStats" scoped="" ref="0x2b1c43394ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b1c41f68b10"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b1c41f68188"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b1c43393658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b1c43396d70" loc="48:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b1c43396d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c433950f0"/>
        <function-ref name="done" scoped="" ref="0x2b1c43395278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b1c43384020" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c43384020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c43384370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b1c43397708" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b1c43397708"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b1c43397a58"/>
        <function-ref name="done" scoped="" ref="0x2b1c43397be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b1c43383b28" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c43383b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b1c43383e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b1c43382190" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b1c43382190"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c433824e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b1c43381a00" loc="44:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b1c43381a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b1c43381d50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b1c41cbf7d8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b1c41cbd4d0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b1c41cc6810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b1c41cc65a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b1c41cc9020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b1c41cc9a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b1c41cc97a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b1c41cc84d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b1c41cc8260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b1c41cc8d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b1c41cd8dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b1c41ce84c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b1c41cd8070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b1c41ce7290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c41cd8710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b1c41ce8b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c41cd9328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b1c41cd9998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b1c41b16378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b1c41b21258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b1c41b16a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b1c41b23070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b1c41b23860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b1c41bd8e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b1c41bf04f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b1c41b5d940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b1c41bf1020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2b1c41ec59b0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2b1c41ecdc10" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2b1c41ec5328" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b1c41f09440" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0ae40" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2b1c41f091c0" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2b1c41f0d718" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0d160" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c41f0d498" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b1c41f0bd60" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0b788" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2b1c41f0bae0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2b1c41f0ea98" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0e828" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b1c41f0a758" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0a4e8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2b1c41f0b108" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2b1c41e83858"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f0de30" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b1c41ee4968" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41ee46f8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b1c41ee2950" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41ee26e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1c41edfca0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41edf6d8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41edf9e8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c41ee3cf8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b1c41ee1d30" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41ee17a0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41ee1ab0" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c41ef7a18" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c41ef7a18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1c41f04328" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b1c41ef89c8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
              <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41ef80c8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b1c41ef83f0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41ef8700" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b1c41eccdc0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1c41eccb50" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b1c41ec9290" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1c41ec9020" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1c41ecc1d8" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c41eca620" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueSend" loc="48:../../interfaces/QueueSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c41edbb80" loc="66:../../interfaces/QueueSend.nc">
        <documentation loc="50:../../interfaces/QueueSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; messages was successfully stored in the sending queue and will&#10; be eventually sent/forwarded.&#10; There is no event signaled after packet sending.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted, EBUSY if&#10;                  the component cannot accept the request now but&#10;                  will be able to later, FAIL if the stack is in&#10;                  a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41edb5f0" loc="66:../../interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41edb900" loc="66:../../interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1c41ef3c18" loc="91:../../interfaces/QueueSend.nc">
        <documentation loc="81:../../interfaces/QueueSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41ef3650" loc="91:../../interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41ef3960" loc="91:../../interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c41ef4db0" loc="78:../../interfaces/QueueSend.nc">
        <documentation loc="68:../../interfaces/QueueSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoRoutingClient" loc="42:../../interfaces/OrinocoRoutingClient.nc">
      <documentation loc="35:../../interfaces/OrinocoRoutingClient.nc">
        <short>&#10; Bloom filter-based routing abstraction.</short>
        <long>&#10; Bloom filter-based routing abstraction.&#10;&#10; @author Andreas Reinhardt&#10; @date August 28, 2013&#10;</long>
      </documentation>
      <function event="" provided="0" name="noMorePacketNotification" ref="0x2b1c41ee7098" loc="48:../../interfaces/OrinocoRoutingClient.nc">
        <interfacedef-ref qname="OrinocoRoutingClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="confirmCommandExecution" ref="0x2b1c41ee5128" loc="51:../../interfaces/OrinocoRoutingClient.nc">
        <interfacedef-ref qname="OrinocoRoutingClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b1c41ee7788" loc="51:../../interfaces/OrinocoRoutingClient.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
          <variable name="identifier" ref="0x2b1c41ee7af0" loc="51:../../interfaces/OrinocoRoutingClient.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
          <variable name="status" ref="0x2b1c41ee7e20" loc="51:../../interfaces/OrinocoRoutingClient.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newCommandNotification" ref="0x2b1c41ece8e0" loc="45:../../interfaces/OrinocoRoutingClient.nc">
        <interfacedef-ref qname="OrinocoRoutingClient"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b1c41ece2f8" loc="45:../../interfaces/OrinocoRoutingClient.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
          <variable name="identifier" ref="0x2b1c41ece660" loc="45:../../interfaces/OrinocoRoutingClient.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b1c41f067b8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b1c41f06020" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b1c41eec550" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b1c41eecc88" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b1c41eea420" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b1c41ee92a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b1c41ee88b0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c41f01070" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b1c41eeab38" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c41f01b70" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b1c41f01900" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b1c41eeddf8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b1c41ee9a18" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b1c41ee8178" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c41eb25a8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c41eb25a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b1c41ec0020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1c41ead9c8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b1c41eab660" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1c41eab0c8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b1c41eab3e0" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b1c41eac910" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b1c41ebf020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b1c41ec0740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b1c41eac178" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b1c41eae0a8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1c41eb2e08" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b1c41ec15b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1c41ec1020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b1c41ec1338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b1c41eaeae8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1c41eae878" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c41ead328" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b1c41eb6e20" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c41ec7600" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c41ef1cc8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41ef1cc8"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x2b1c41efc7b8" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c41efd5b0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41ef1cc8"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c41efc020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41ef1cc8"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b1c41efdd38" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41ef1cc8"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoConfig" loc="42:../../interfaces/OrinocoConfig.nc">
      <documentation loc="35:../../interfaces/OrinocoConfig.nc">
        <short>&#10; Orinoco Configuration&#10;&#10; </short>
        <long>&#10; Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getQueueLocalReserve" ref="0x2b1c41ed1770" loc="90:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpInterval" ref="0x2b1c41eda290" loc="44:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Ts" ref="0x2b1c41eda020" loc="44:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueueLocalReserve" ref="0x2b1c41ed1020" loc="87:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x2b1c41ed2d60" loc="87:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMaxDwellTime" ref="0x2b1c41ed6c30" loc="69:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b1c41ed69c0" loc="69:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinQueueSize" ref="0x2b1c41ed4e08" loc="81:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b1c41ed4b98" loc="81:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpDeviation" ref="0x2b1c41ed9ae8" loc="56:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinDwellTime" ref="0x2b1c41ed8bb0" loc="63:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b1c41ed8940" loc="63:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxDwellTime" ref="0x2b1c41ed5378" loc="72:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpDeviation" ref="0x2b1c41ed93b0" loc="53:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="alpha" ref="0x2b1c41ed9140" loc="53:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbsWakeUpDeviation" ref="0x2b1c41ed82a8" loc="60:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinQueueSize" ref="0x2b1c41ed2550" loc="84:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumWaitingIntervals" ref="0x2b1c41ed44c0" loc="78:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinDwellTime" ref="0x2b1c41ed6328" loc="66:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpInterval" ref="0x2b1c41eda9d0" loc="47:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNumWaitingIntervals" ref="0x2b1c41ed5cc0" loc="75:../../interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b1c41ed5a50" loc="75:../../interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoRoutingRoot" loc="42:../../interfaces/OrinocoRoutingRoot.nc">
      <documentation loc="35:../../interfaces/OrinocoRoutingRoot.nc">
        <short>&#10; Bloom filter-based routing abstraction.</short>
        <long>&#10; Bloom filter-based routing abstraction.&#10;&#10; @author Andreas Reinhardt&#10; @date August 28, 2013&#10;</long>
      </documentation>
      <function command="" provided="0" name="setCommand" ref="0x2b1c41f4d108" loc="51:../../interfaces/OrinocoRoutingRoot.nc">
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x2b1c41f4ee60" loc="51:../../interfaces/OrinocoRoutingRoot.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetAndAddDestination" ref="0x2b1c41f4e7f0" loc="48:../../interfaces/OrinocoRoutingRoot.nc">
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b1c41f4e580" loc="48:../../interfaces/OrinocoRoutingRoot.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addDestination" ref="0x2b1c41f4da50" loc="54:../../interfaces/OrinocoRoutingRoot.nc">
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2b1c41f4d7e0" loc="54:../../interfaces/OrinocoRoutingRoot.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetBloomFilter" ref="0x2b1c41f37e18" loc="45:../../interfaces/OrinocoRoutingRoot.nc">
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setBroadcast" ref="0x2b1c41f4b178" loc="57:../../interfaces/OrinocoRoutingRoot.nc">
        <interfacedef-ref qname="OrinocoRoutingRoot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2b1c41f47a08" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f47140" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b1c41f47468" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41f47778" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketDelay" loc="40:../../interfaces/PacketDelay.nc">
      <documentation loc="35:../../interfaces/PacketDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c41f455b8" loc="40:../../interfaces/PacketDelay.nc">
          <interfacedef-ref qname="PacketDelay"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c41f455b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="delay" ref="0x2b1c41f5ca50" loc="52:../../interfaces/PacketDelay.nc">
        <documentation loc="46:../../interfaces/PacketDelay.nc">
          <short> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; @return packet delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f5c7e0" loc="52:../../interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b1c41f5c0a8" loc="44:../../interfaces/PacketDelay.nc">
        <documentation loc="41:../../interfaces/PacketDelay.nc">
          <short>&#10; Initialize packet delay tracking by stamping packet with current time&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f45dc8" loc="44:../../interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="creationTime" ref="0x2b1c41f5a520" loc="60:../../interfaces/PacketDelay.nc">
        <documentation loc="54:../../interfaces/PacketDelay.nc">
          <short> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; </short>
          <long> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; @return locale time, at which the packet was created at its origin&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f5a2b0" loc="60:../../interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficStatistics" loc="43:../../interfaces/OrinocoTrafficStatistics.nc">
      <documentation loc="35:../../interfaces/OrinocoTrafficStatistics.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date February 9th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRxBurst" ref="0x2b1c41f53570" loc="52:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxBurst" ref="0x2b1c41f54e78" loc="50:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktCreationIntvl" ref="0x2b1c41f54070" loc="46:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktReceptionIntvl" ref="0x2b1c41f547b0" loc="48:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardDelay" ref="0x2b1c41f53c78" loc="54:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c41f6c658" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f6c0c8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41f6c3d8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1c41f83a68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f834a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c41f837b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c41f85c70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1c41f868c8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f86658" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c41f84cf8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f84750" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1c41f84a78" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueStatus" loc="41:../../lib/net/orinoco/QueueStatus.nc">
      <documentation loc="35:../../lib/net/orinoco/QueueStatus.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date September 2 2013&#10;</long>
      </documentation>
      <function event="" provided="0" name="dropped" ref="0x2b1c41f79728" loc="60:../../lib/net/orinoco/QueueStatus.nc">
        <documentation loc="56:../../lib/net/orinoco/QueueStatus.nc">
          <short>&#10; signaled, if a new (remote) packet cannot be stored in the queue&#10; this event must only be signaled from Receive.receive() !&#10;</short>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="acceptsRemote" ref="0x2b1c41f79020" loc="54:../../lib/net/orinoco/QueueStatus.nc">
        <documentation loc="49:../../lib/net/orinoco/QueueStatus.nc">
          <short>&#10; check if the queue accepts remote packets&#10;&#10; </short>
          <long>&#10; check if the queue accepts remote packets&#10;&#10; @return true, if accepting; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c41f6e2c8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b1c41f7c178" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b1c41f7aa38" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b1c41f7a7c8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b1c41224488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b1c41224488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b1c41f95978" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c41f95708" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b1c41f7e9e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b1c41f7cc98" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f6e2c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b1c41f6eaf0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b1c41f7e258" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CacheCompare" loc="41:../../lib/net/orinoco/CacheCompare.nc">
      <documentation loc="35:../../lib/net/orinoco/CacheCompare.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b1c41f5f768" loc="41:../../lib/net/orinoco/CacheCompare.nc">
          <interfacedef-ref qname="CacheCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c41f5f768"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="equal" ref="0x2b1c41f765b0" loc="50:../../lib/net/orinoco/CacheCompare.nc">
        <documentation loc="42:../../lib/net/orinoco/CacheCompare.nc">
          <short>&#10; compare a cached element ce with another element cmp&#10;&#10; </short>
          <long>&#10; compare a cached element ce with another element cmp&#10;&#10; @param ce  element in cache&#10; @param cmp element for comparison&#10;&#10; @return true, if a == b; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="CacheCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c41f5f768"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c41f5f768"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ce" ref="0x2b1c41f76020" loc="50:../../lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c41f5f768"/></type-var>
          </variable>
          <variable name="cmp" ref="0x2b1c41f76330" loc="50:../../lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b1c41f5f768"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoRoutingStateInternal" loc="42:../../interfaces/OrinocoRoutingStateInternal.nc">
      <documentation loc="35:../../interfaces/OrinocoRoutingStateInternal.nc">
        <short>&#10; Bloom filter-based routing abstraction.</short>
        <long>&#10; Bloom filter-based routing abstraction.&#10;&#10; @author Andreas Reinhardt&#10; @date August 28, 2013&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPacketRoutingInformationVersion" ref="0x2b1c41f74ab0" loc="45:../../interfaces/OrinocoRoutingStateInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingStateInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c41f74840" loc="45:../../interfaces/OrinocoRoutingStateInternal.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoutingInformationVersion" ref="0x2b1c41f734d0" loc="48:../../interfaces/OrinocoRoutingStateInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingStateInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="version" ref="0x2b1c41f73260" loc="48:../../interfaces/OrinocoRoutingStateInternal.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c41f7bd08" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f7bd08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1c41f8dd10" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f7bd08"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b1c41f8e678" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b1c41f8f578" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b1c41f8d0a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f7bd08"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b1c41f8edd0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f7bd08"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b1c41f8fd60" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficUpdates" loc="43:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="updateRxBurst" ref="0x2b1c41f9ae58" loc="56:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b1c41f9abe8" loc="56:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateForwardDelay" ref="0x2b1c41f997c0" loc="59:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="done" ref="0x2b1c41f99550" loc="59:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTxBurst" ref="0x2b1c41f9a550" loc="52:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b1c41f9a2e0" loc="52:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktReceptionIntvl" ref="0x2b1c41f9cbe0" loc="48:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktCreationIntvl" ref="0x2b1c41f9c4c0" loc="45:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b1c41f788b8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b1c41f788b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1c41f70110" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b1c41f788b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c41f89338" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f89338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2b1c41f89d50" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f89338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b1c41f89ae0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f89338"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b1c41fa2e40" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2b1c41fa2718" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f89338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b1c41fa24a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c41f89338"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoPathCost" loc="42:../../lib/net/orinoco/OrinocoPathCost.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCost" ref="0x2b1c4201e948" loc="45:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b1c41e82180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reviseCost" ref="0x2b1c4201b020" loc="48:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="inspectBeacon" ref="0x2b1c4201a0c8" loc="52:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b1c41e82180"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4201b750" loc="52:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cost" ref="0x2b1c4201bae0" loc="52:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b1c41e82180"/></typename>
            </type-int>
          </variable>
          <variable name="update" ref="0x2b1c4201bdf8" loc="52:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c42059020" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b1c4205a6c8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b1c4205aa28" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c4205ad38" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1c42073380" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42055d48" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c420730c8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c42055540" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1c420582d0" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42058060" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c42056708" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42056160" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1c42056488" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoBackoffConfig" loc="42:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
        <short>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; </short>
        <long>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; @author Christian Renner&#10; @date January 11 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMaximumBackoff" ref="0x2b1c42043360" loc="44:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b1c42060b08" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c42060898" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b1c4204bb80" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c4204b910" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b1c4204d110" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b1c4204db68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c4204d8f8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b1c42048450" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c4204ae60" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c420481d0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b1c4204a020" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c42049900" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c42049c38" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b1c42064768" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c420644f8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b1c420639d8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c42063458" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b1c42063758" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b1c41c9d848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b1c42046600" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c42046390" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b1c4205e020" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b1c4205f920" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b1c4205fc50" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b1c4205ed88" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoDataSizeInterface" loc="1:../../lib/net/orinoco/OrinocoDataSizeInterface.nc">
      <function command="" provided="0" name="getVersionSize" ref="0x2b1c420823e0" loc="2:../../lib/net/orinoco/OrinocoDataSizeInterface.nc">
        <interfacedef-ref qname="OrinocoDataSizeInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoDataInterface" loc="1:../../lib/net/orinoco/OrinocoDataInterface.nc">
      <function event="" provided="0" name="receivedBeacon" ref="0x2b1c4203d3e0" loc="8:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c4203fe18" loc="8:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c4203d160" loc="8:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedData" ref="0x2b1c420402a0" loc="3:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42041c80" loc="3:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42040020" loc="3:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="appendDataVer" ref="0x2b1c4203f0d8" loc="5:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getBeaconPayload" ref="0x2b1c4203c700" loc="10:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="len" ref="0x2b1c4203c458" loc="10:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToSendData" ref="0x2b1c42041618" loc="2:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="aboutToSendBeacon" ref="0x2b1c4203f7a0" loc="7:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDataPayload" ref="0x2b1c42040980" loc="4:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="appendBeacon" ref="0x2b1c4203dd20" loc="9:../../lib/net/orinoco/OrinocoDataInterface.nc">
        <interfacedef-ref qname="OrinocoDataInterface"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="laenge" ref="0x2b1c4203dab0" loc="9:../../lib/net/orinoco/OrinocoDataInterface.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b1c4206f3b0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4206f140" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoRoutingInternal" loc="42:../../interfaces/OrinocoRoutingInternal.nc">
      <documentation loc="35:../../interfaces/OrinocoRoutingInternal.nc">
        <short>&#10; Bloom filter-based routing abstraction.</short>
        <long>&#10; Bloom filter-based routing abstraction.&#10;&#10; @author Andreas Reinhardt&#10; @date August 28, 2013&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCurrentBloomFilter" ref="0x2b1c4206cac0" loc="48:../../interfaces/OrinocoRoutingInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_routing_t" ref="0x2b1c42030510"/></typename>
              <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="orinoco_routing_t" ref="0x2b1c42031858"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="packetAvailableForUs" ref="0x2b1c4206b9c8" loc="54:../../interfaces/OrinocoRoutingInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updateBloomFilter" ref="0x2b1c4206c290" loc="45:../../interfaces/OrinocoRoutingInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="orinoco_routing_t" ref="0x2b1c42030510"/></typename>
                <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="orinoco_routing_t" ref="0x2b1c42031858"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newFilter" ref="0x2b1c4206c020" loc="45:../../interfaces/OrinocoRoutingInternal.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="orinoco_routing_t" ref="0x2b1c42030510"/></typename>
                <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="orinoco_routing_t" ref="0x2b1c42031858"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRoutingVersionNumber" ref="0x2b1c4206b290" loc="51:../../interfaces/OrinocoRoutingInternal.nc">
        <interfacedef-ref qname="OrinocoRoutingInternal"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b1c4214b880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b1c4214b2a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b1c4214b600" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c4213e308" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c4213e308"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1c4213e538" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4213e538"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b1c4215a290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4213e538"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4215a020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b1c42159370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42159100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b1c4215c0a8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4213ede8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c421585e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4213e538"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42158020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b1c42158360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4213e538"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b1c42140c40" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421409d0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b1c4214ae08" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4214a820" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b1c4214ab88" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b1c42143cd8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42143a68" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b1c421432a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42144b48" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b1c42143020" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b1c4213fb70" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4213f900" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b1c4213c378" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b1c42147b88" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b1c42147918" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b1c4213cb50" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b1c42167068" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b1c42167068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b1c42164020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42166d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c421665b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b1c42167068"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42166348" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b1c42167b78" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42167908" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c42164cd8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b1c42167068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42164710" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b1c42164a58" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b1c42167068"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b1c421820d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b1c42184178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b1c42185848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b1c42184900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b1c42182ac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b1c421a1020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421a3cc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b1c42186bc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b1c421a35b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421a3348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b1c421a0988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421a0398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421a0708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b1c421a1cd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421a16e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421a1a58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b1c4219fc30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b1c41c994c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4219f9c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b1c4219d928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b1c41c994c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4219d348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b1c4219d6a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b1c41c994c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b1c4219f2d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4219f060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b1c4219c070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b1c41c994c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b1c42197860" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42197278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b1c421975e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b1c42195948" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421956d8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b1c42199a60" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b1c42199108" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b1c421a4e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c4218ca70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b1c4218c170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b1c4218c4d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c4218c7e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b1c42188df0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42188828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42188b38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c42188020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1c4218b7e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4218b578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c4218a6e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4218a140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1c4218a468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b1c421d0920" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b1c421d54e8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421d5278" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b1c421eb670" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421eb400" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b1c421e9ce0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e9a70" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b1c421ec020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421edd38" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b1c421ef910" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ef6a0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b1c421eccb0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ec6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421eca30" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b1c421ed618" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ed060" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421ed398" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b1c421e9348" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ebd40" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b1c421e90c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b1c421cf1d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b1c421cfad0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b1c421ccc28" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421cc9b8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b1c421cd5b8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421cd348" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b1c421cc0a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421cddd0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b1c42213110" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b1c42215290" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b1c42215020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1c422159c8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b1c421f2748" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b1c422138c0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b1c41c8c540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b1c4220da10" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4220d7a0" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b1c42210020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42211d48" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c4220e578" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b1c42210d88" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c422107d8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b1c42210b08" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b1c422114e8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42211278" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b1c4220d020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4220ed20" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b1c421c3640" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b1c421c7e50" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421c7be0" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b1c421c2290" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421c2020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b1c421c2ac8" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b1c421c1608" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421c1398" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b1c421c0e60" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421c0bf0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b1c421b8328" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b1c421b9b50" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c421b9570" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421b98d0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b1c421bd800" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421bd590" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b1c421bc2d0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421bc060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b1c421bb2a0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c421bcb50" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421bb020" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b1c421be020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b1c421beda0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421be828" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421beb20" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b1c421bbd90" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421bbb20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b1c421fda28" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421fd7b8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b1c421ff290" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ff020" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b1c421e3020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e5a08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b1c421e5d28" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b1c421e1020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e2d20" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b1c421f8748" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421f8198" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421f84c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b1c421e2520" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e22b0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b1c421fd040" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421ffa88" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b1c421ffd98" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b1c421df8b8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c421df2d8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421df638" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b1c421f9a20" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421f97b0" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b1c421e3a60" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e37f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b1c421dd290" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421dd020" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b1c421de720" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c421de140" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421de4a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b1c421f5d88" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b1c41c998b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b1c421f7290" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421f7020" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b1c421f55f8" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b1c41c994c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b1c421f9020" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421fb9d0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b1c421fbd00" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b1c421e1aa8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e1838" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b1c42200818" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42200278" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b1c42200598" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b1c421fc798" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421fc1f8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b1c421fc518" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b1c421f4790" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421f4520" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b1c42201020" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421dda30" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b1c421ddd28" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b1c421e5290" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421e5020" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b1c421f7d78" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421f7b08" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b1c421fb290" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421fb020" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b1c42201aa8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42201838" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b1c421d9b48" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421d9598" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b1c421d98c8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b1c421d8328" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b1c421db3b0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421db140" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b1c421dbdd0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421dbb60" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b1c421d25b8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421d2348" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b1c421dcab0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421dc840" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b1c421d2da0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b1c421d1828" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c421d15b8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c42272ca8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c42272ca8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1c4226f020" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b1c4226b958" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1c4226ea78" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b1c4226b020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b1c4226ca08" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b1c4226cd28" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b1c4226c258" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b1c4226a110" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1c4226fae0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1c4226f870" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4226f020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c4226e328" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b1c42284b28" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b1c42283428" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b1c42283d40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b1c42284438" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b1c4229fd90" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4229fb20" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b1c422c37a8" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c422c3538" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c422c4cd0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c422c4728" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b1c422c4a50" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b1c422bf2c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
              <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c422bf020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b1c422d5070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b1c422d3020" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b1c422d57d0" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b1c422d6868" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b1c422d62b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b1c41c9dbf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b1c422d65e8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b1c42380c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b1c4237d580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b1c42378bf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b1c42378440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b1c4237b360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b1c4237bb50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b1c4236fac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1c42379c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1c4236f858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1c42379c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b1c42374ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b1c423715e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1c42379c40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1c42371378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b1c42379c40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b1c4236f020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b1c42379c40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b1c424cce70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
              <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c424ccbc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b1c424cc290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c424cc020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b1c424ec020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424edce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b1c424ec790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c424f5cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424f5a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c424ed640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424ed3d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b1c424f2020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424f3d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b1c424f14e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1c424f1270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b1c424f2ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424f2840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b1c424ef020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c424f1ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b1c424f35b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b1c424f3340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b1c41c9c020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b1c425596d8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42559468" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b1c42558818" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c425585a8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b1c425568c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42556658" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b1c4258a328" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b1c42589378" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b1c42589d80" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b1c42589b10" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b1c42588538" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b1c4258ab58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b1c42588d68" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b1c4258c9f0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c4258c780" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b1c42584d88" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c42584580" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1c42584310" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b1c425e1468" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c425e11f8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c425e4408" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c425e4198" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b1c425e3118" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c425e4b58" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b1c425e4e68" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c425e3ab0" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c425e3840" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2b1c42660a18" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b1c42660a18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b1c4265d328" loc="51:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b1c42660a18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c42666a50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c42666a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1c42666c80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c42666c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b1c42663548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c42666c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b1c42661590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b1c42663d60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b1c42661c80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b1c4269fd28" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b1c42669c20" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b1c4266ea48" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b1c4269f5c8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b1c4269f358" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b1c426694c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1c42669250" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b1c4269e6e0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b1c4269e470" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b1c4266a1d8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b1c4266ab00" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1c4266a890" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b1c4268e328" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b1c426903a0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b1c42690ab8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b1c4268f328" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b1c4268ead8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b1c4268faf8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b1c426921d8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1c41ba3978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b1c41ba3d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b1c42692b90" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1c41ba3978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b1c41ba3d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b1c42692920" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b1c41ba3978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b1c41ba3d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b1c4269c1c8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4269c1c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b1c426987f0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b1c4269bb60" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c4269ca80" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4269c1c8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1c42699290" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1c42697020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c4269b420" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4269c1c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1c4269b1b0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4269c1c8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1c42699988" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c426980d8" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b1c42679418" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42679418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b1c42674900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b1c42675a40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c42679cb8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42679418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b1c42672290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b1c42672020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b1c42672a10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1c426764c0" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b1c42678d50" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1c426741d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c42678630" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42679418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1c426783c0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b1c42679418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1c42676bb8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c42675328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b1c4282da68" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1c4282d7f8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b1c4282d070" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b1c42868420" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b1c42868420"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b1c42868650" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c42868650"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b1c42867118" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c42868650"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b1c42868e78" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c42868650"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b1c4286bcb0" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b1c4286ad38" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b1c4286a600" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b1c4286a390" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b1c4286b4c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b1c42873ab8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42873848" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b1c42872dc0" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42872b50" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b1c42872328" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1c42871840" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c428715d0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b1c4294a4d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b1c42941020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b1c42943c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b1c42944e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b1c4294ad88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b1c42945108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1c42946e28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b1c42945848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b1c429435c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b1c429466f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b1c42946480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b1c4294a4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b1c42944020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c42944708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c4296cb88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b1c4296c278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b1c4296c5d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c4296c8f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c42968020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b1c4296b2b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b1c4296b610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c4296b930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1c4296bc78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b1c4296e020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b1c42972c18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b1c42999328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b1c42990c40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b1c429947a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b1c4298f610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b1c4298f3a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b1c4299bba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b1c42992338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b1c429920c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b1c42996020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b1c42997c88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b1c429981d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b1c4298bde0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b1c4298bb70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b1c42996758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b1c4298e690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b1c4298e420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b1c4298d538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b1c42990518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b1c429902a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b1c4298b4a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b1c42993290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b1c42993020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b1c42998b30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c429988c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b1c429940a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b1c42996df8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b1c42992b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b1c4298fd18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b1c4298ed80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b1c4298dc80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b1c429939a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b1c42999a40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b1c429974e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42997270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b1c42a01748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b1c429ff020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b1c42a721d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b1c42a70578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b1c42a74328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b1c42a6f780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b1c42a6f020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b1c42a70c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b1c42a714c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1c42a71250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b1c42a6d290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b1c42a6d020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b1c42a74a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b1c42a71de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1c42a71b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b1c42a72b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b1c42a72890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b1c42c315b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1c42c315b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b1c42c2e0a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1c42c315b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b1c42c31df0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b1c42c315b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c42d0b240" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c42d0b240"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x2b1c42d0a020" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c42d0b240"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b1c42d0bd50" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c42d0b240"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Decoder" loc="1:../../lib/net/orinoco/Decoder.nc">
      <function command="" provided="0" name="upScale" ref="0x2b1c42d57ce8" loc="3:../../lib/net/orinoco/Decoder.nc">
        <interfacedef-ref qname="Decoder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="resolution" ref="0x2b1c42d57378" loc="3:../../lib/net/orinoco/Decoder.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
          <variable name="arrSize" ref="0x2b1c42d576e8" loc="3:../../lib/net/orinoco/Decoder.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="output" ref="0x2b1c42d57a58" loc="3:../../lib/net/orinoco/Decoder.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="decode" ref="0x2b1c42d58ca0" loc="2:../../lib/net/orinoco/Decoder.nc">
        <interfacedef-ref qname="Decoder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x2b1c41a66d70"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42d58020" loc="2:../../lib/net/orinoco/Decoder.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
                <typename><typedef-ref name="nx_uint8_t" ref="0x2b1c41a66d70"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b1c42d58320" loc="2:../../lib/net/orinoco/Decoder.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
          <variable name="output" ref="0x2b1c42d58690" loc="2:../../lib/net/orinoco/Decoder.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="arrSize" ref="0x2b1c42d58a00" loc="2:../../lib/net/orinoco/Decoder.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b1c42e63640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42e63060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b1c42e633c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b1c42e67948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b1c42e64760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b1c42e64198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b1c41cb7510"/>
                <typename><typedef-ref name="message_t" ref="0x2b1c41cb5aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b1c42e644e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b1c42e87b60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b1c42e87450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b1c42e8f1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b1c42e8e528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b1c42e8b020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42e8dd60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b1c42e8ed40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b1c42e8fcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42e8fa58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b1c42e8b818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b1c42e8d5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b1c42e96110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b1c42e969c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b1c42e977b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b1c42e97548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b1c42e954e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b1c42e95278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b1c42e93020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b1c42e93bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c42e93958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b1c42e91640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b1c42e913d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c42fe19b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1c42fe1418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42fe1738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b1c42fdb4a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1c42fdb238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b1c42fda2a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1c42fdbc20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42fda020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b1c42fdd1d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b1c42fd9a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1c42fd9160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42fd9480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1c42fd97a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b1c42fdda50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b1c42fdf2b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b1c42fde880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b1c42fdeba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b1c42fdf020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b1c43019bb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1c43019940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b1c430169b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b1c430163f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b1c43016730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b1c43003578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b1c43004738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b1c43000c08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c43000998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b1c43002c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b1c430087f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b1c43004020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b1c43004e58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b1c43003c58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b1c43002578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b1c43002308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b1c43000328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b1c41229160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b1c431bc190" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b1c431b9020" loc="73:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b1c431b8290" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b1c41b1dae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b1c431b8020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b1c431b8c68" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b1c431b89f8" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b1c431bb8b0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b1c431b9778" loc="81:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b1c431bc190"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b1c431bc9b8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b1c41af89b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b1c431bb110" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b1c41229b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b1c431ff8d0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b1c431ff660" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAPeriodicJobConfig" loc="40:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPeriod" ref="0x2b1c432ae8b8" loc="41:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJob" loc="40:../../../EAJobs/interfaces/EAJob.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJob.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b1c432accd0" loc="43:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b1c432a83a0" loc="47:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJobConfig" loc="40:../../../EAJobs/interfaces/EAJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b1c432e57d8" loc="43:../../../EAJobs/interfaces/EAJobConfig.nc">
        <interfacedef-ref qname="EAJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="ea_generic_jobconfig_t" ref="0x2b1c432e8d38"/>
              <typename><typedef-ref name="ea_generic_jobconfig_t" ref="0x2b1c432e7388"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAScheduler" loc="42:../../../EAJobs/interfaces/EAScheduler.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAScheduler.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="jobStarted" ref="0x2b1c432ddd08" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b1c432e8020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b1c432dda98" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b1c432e8020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleJob" ref="0x2b1c432dd430" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b1c432e8020"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b1c432e3e68" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b1c432e8020"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b1c432dd1b0" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b1c4122a608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
