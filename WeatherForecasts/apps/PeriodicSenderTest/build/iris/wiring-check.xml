<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="58:periodicSenderC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b866662c238"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666658c48"/></to>
    </wire>
    <wire loc="61:periodicSenderC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b86665c2360"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b86663fc890"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b86663fc890"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b86663f9c38"/></to>
    </wire>
    <wire loc="62:periodicSenderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b86665cfd50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666654a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666654a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:periodicSenderC.nc">
      <from><interface-ref name="BootTimer" scoped="" ref="0x2b86665e3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666821020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666821020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:periodicSenderC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b86665ee6b8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b8666d1db60"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b8666d1db60"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b8666d5cdb0"/></to>
    </wire>
    <wire loc="67:periodicSenderC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b86665f02c0"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x2b8666d44020"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b8666d44020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666e08e70"/></to>
    </wire>
    <wire loc="68:periodicSenderC.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b86665ec8c8"/></from>
      <to><interface-ref name="ForwardingControl" scoped="" ref="0x2b8666d466d0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b8666d466d0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8666d5c620"/></to>
    </wire>
    <wire loc="69:periodicSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b86665ea1c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8666d431c8"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8666d431c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8666d5acf8"/></to>
    </wire>
    <wire loc="70:periodicSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b86665ed020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666d402c8"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666d402c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666d57a10"/></to>
    </wire>
    <wire loc="71:periodicSenderC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b8666607a78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666d42020"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8666d42020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666d59b80"/></to>
    </wire>
    <wire loc="72:periodicSenderC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666602bc0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666d3f020"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666d3f020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666d567a8"/></to>
    </wire>
    <wire loc="73:periodicSenderC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b866661ed68"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b8666d39380"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b8666d39380"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b86678b4a10"/></to>
    </wire>
    <wire loc="78:periodicSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8667a37760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666d402c8"/></to>
    </wire>
    <wire loc="79:periodicSenderC.nc">
      <from><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b8666630340"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667a37108"/></to>
    </wire>
    <wire loc="67:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8667a37108"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667a32bc0"/></to>
    </wire>
    <wire loc="86:periodicSenderC.nc">
      <from><interface-ref name="ForecastValue" scoped="" ref="0x2b86666185a0"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b86677b4e70"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b86677b4e70"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b8667826020"/></to>
    </wire>
    <wire loc="88:periodicSenderC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666609080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8666cf3cb0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666cf3cb0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8666ceb5e8"/></to>
    </wire>
    <wire loc="91:periodicSenderC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b866662e5c0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b86678514c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b86678514c8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b86678ac208"/></to>
    </wire>
    <wire loc="95:periodicSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8667a19180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666d402c8"/></to>
    </wire>
    <wire loc="96:periodicSenderC.nc">
      <from><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b8666630a38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667a1dad8"/></to>
    </wire>
    <wire loc="69:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8667a1dad8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667a18830"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86681f7a70"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86679134a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b866784d938"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86680f57b0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b8667430020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b8668073430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86672a4238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86680a6de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8667fde438"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666d5c020"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666d25a38"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b8666b23020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b8666b21e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666aaf120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666912b98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666caed80"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666660dd0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b86665b3308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b866624c5c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b866624c5c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b86662f7d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b86665b3ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b8667523870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b86665b3ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b8667431450"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b86665b3ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86663fdc10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b86663fdc10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86664014f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b86665b2418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b86663f79a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86676a5770"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b86663f79a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666c41bc8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8666404b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b866658aae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b86663ff398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b866658a4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b8666401b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666cfe2d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b8666401b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b8666403a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b8666403a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b866640a428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b866640d108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b86663f79a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b86664155f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b866641c1a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b866641c1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b866649d430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b86664097f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b866640d108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b8666456c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8666542520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b866643a7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664d7020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664d7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bff480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b86664417e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b86664dbd60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b86664dbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c77480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b866644a4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b86664f48c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b86664f48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c83480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b8666450af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8666555c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b866641a4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664af740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664af740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a88480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b866644c1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664e25b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664e25b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c89480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b866642a7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664a7930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664a7930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b153e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b8666431968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b86664be740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b86664be740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b84480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b8666437c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b86664d4430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b86664d4430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bf6480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b866643ec78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664eb120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664eb120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c6d480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b8666420c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664a0020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664a0020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a98480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b8666427c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b86664b8d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b86664b8d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b0c480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b866642de00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b86664babd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b86664babd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b7a480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b86664451a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664d18c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664d18c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bec480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b8666458968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664f0d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664f0d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667ced480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b86664527e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8666549c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b86664434d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664dda50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664dda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c7d480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b866649d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a8e480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b8666423348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664b4120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664b4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b02480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b86664544d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b866653dcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b8666433658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664c0500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664c0500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b8a3e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b8666439968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b86664d6120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b86664d6120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bfc480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b8666440968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b86664dae18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b86664dae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c74480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b8666448658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b86664f3a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b86664f3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667cf4480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b866642b658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664ae8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664ae8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667af9480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b8666429968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664a6a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664a6a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b12480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b8666430af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b86664bd8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b86664bd8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b81480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b8666436e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b86664d35b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b86664d35b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bf2480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b866644fe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664ea2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664ea2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c6a480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b866641fe00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b866649f120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b866649f120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a95480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b8666426e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b86664b7e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b86664b7e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b08480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b866643d020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664cdd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664cdd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b77480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b8666457af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664efe18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664efe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667cea480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b866643b348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664c6e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664c6e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c023e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b8666442658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b86664dcbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b86664dcbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c7a480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b866644b348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b86664f5740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b86664f5740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c86480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b8666451968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b86665433e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b866641b348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b866649c5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b866649c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a8b480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b86664344d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664b22a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664b22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667aff480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b866644d020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664e3500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664e3500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c8c3e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b86664327e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b86664bf5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b86664bf5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b87480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b8666438af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b86664d52a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b86664d52a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bf9480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b866643faf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b86664d8020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b86664d8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c70480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b86664477e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b86664f2bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b86664f2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667cf1480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b866640ca70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664a2dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664a2dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a9b3e0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b8666428af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b86664b9bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b86664b9bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b0f480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b866642fc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b86664bba50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b86664bba50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b7d480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b8666446020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b86664d2740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b86664d2740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667bef480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b8666453658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b86665383e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b8666444348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b86664de930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b86664de930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667c803e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b866643c1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b86664cce18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b86664cce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b74480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b866641d020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b866649e2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b866649e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667a91480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b8666424100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b86664b5020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b86664b5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b8667b05480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662f6c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b8666300168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b866624be30"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b866631b988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b86667216f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866665db18"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b866665db18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b86668035e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8666660dd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b866666c348"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8666658c48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666816128"/></to>
    </wire>
    <wire loc="37:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b866666c348"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b866677d7d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b86667fd858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b86667aeab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b86667a9c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b866666a020"/></to>
    </wire>
    <wire loc="38:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b866666a020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b866677c020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b866680d330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b8666679150"/></to>
    </wire>
    <wire loc="39:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b8666679150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666778128"/></to>
    </wire>
    <wire loc="40:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b866668c570"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b8666776168"/></to>
    </wire>
    <wire loc="72:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b8666776168"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b8667d7a168"/></to>
    </wire>
    <wire loc="71:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8666778128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8667d7d128"/></to>
    </wire>
    <wire loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b866677d7d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8667d82620"/></to>
    </wire>
    <wire loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b866677c020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8667d82dc8"/></to>
    </wire>
    <wire loc="75:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8667d792f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666701810"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666701810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b866670d180"/></to>
    </wire>
    <wire loc="76:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667d742a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666718828"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666718828"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666726160"/></to>
    </wire>
    <wire loc="77:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8667d73538"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8666716c90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8666716c90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b86667254e8"/></to>
    </wire>
    <wire loc="78:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b8667d6f688"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b8666713e70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b8666713e70"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b8666721df0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b86667a5cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b86667f8930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8666cdcc18"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b8666c9a168"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8666cda6e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8666ca1398"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8666ca1398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8667e00188"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666cd9430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666ca0020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666ca0020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b86668ba8d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b8666d2b080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b8666cdc3e0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b86668ba8d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666916578"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8666ca0bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b86668b95d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b86668b95d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8666917020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b8666c9e2a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b86668b7c78"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b86668b7c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8666915268"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8667e00da0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b866685c5d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8667dfe9d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b86668b95d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b866685c5d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b86668a2920"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b86668c46f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b86668bb1c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b86668bb1c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b86668d6b60"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b86668c33f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b86668b95d0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b86668c2a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b86668ba8d8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b86668c1780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b86668c0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b86668bc180"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b866690f2e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b866690f2e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666959b90"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b86668ba300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b86669189a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8666912b98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666959578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b86669315a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b86668b6608"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8666915bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b866690ece8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86669148c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b866690e270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b866692dba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b8666c813e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b866690ece8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8666a69020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b866690e270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666a6a868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b8666a69db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b866692dba8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666952bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b86669315a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666a67a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b86669315a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666a8a420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b86669315a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8666a686c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b866694fb48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b8666a67020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b8666953898"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8666949b38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8666a63b30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b8666948398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8666a628b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8666a628b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8666a8e338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8666a7d448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8666a900c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8666a900c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8666ab4310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b86669b9830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b8666979d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b8666994020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b86669b6918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b8666a65100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b8666a658a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b8666ab6290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b8666a8eaf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b8666a8eaf0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b8666aafe58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b8666ab4310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b8666af15f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b8666a8e338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b8666aaf6f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8666ab3598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666b76188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8666b76188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666c76878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8666aeec60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666ab3598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b8666af05f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8666afe700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8666afe700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8666b23730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8666af0d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8666afd020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8666afd020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8666b22020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b8666aef5c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b8666afd860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b8666afd860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b8666b228a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b8666b27020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b8666b1f6d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8666afbe58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8666b20568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8666afa6f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8666b20e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8666b1ec70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8666404b98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b8666b1d950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b866631c3c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b8666c8db10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666b70020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8666b70020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8666c45e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666c4c020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666b6ec30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666b6ec30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666ba9298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666b8c910"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666ba43d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b8666b8b288"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b8666ba3b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8666bb01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b8666b9e4e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8666bb01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b8666bca770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8666bb01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b8666bc6b20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666c403f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8666b6ec30"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b8666cd34d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8666cfe2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b8666ceb020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b8666ceace8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b8666cece10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b8666cece10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b866641fe00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8666ce9e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b8666d00020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b8666d00020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b8666420c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b8666ce7020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b8666cff1b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b8666cff1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b866640ca70"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b8666d24080"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b8666d2b080"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b8666d2de28"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b86663fc890"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b8666d1c538"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b86668bc180"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2b8666d3bb48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2b8666d57418"/></to>
    </wire>
    <wire loc="67:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8666e08e70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666df3080"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8666d42bb8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8666d58868"/></to>
    </wire>
    <wire loc="94:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666d36878"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666e03b88"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666e03b88"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8667896b28"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b8666d33020"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b8667997060"/></to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Stats" scoped="" ref="0x2b8667997060"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b8667993500"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b86678b4a10"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b8667913ac8"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8666d95020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b8666d4c240"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666e05908"/></to>
    </wire>
    <wire loc="68:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666e05908"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666df3af0"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8666d81cc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666e032b0"/></to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8666e032b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666e29438"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8666d81020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8666e045a8"/></to>
    </wire>
    <wire loc="69:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8666e045a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8666df2730"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666d6b510"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666e03b88"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b8666e00668"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b8666d52a40"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b8666d9bd40"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b86678b4a10"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b866793bdf8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b8666d5cdb0"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b8666dfb360"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b866793b460"/></to>
    </wire>
    <wire loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b866793b460"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b8667935158"/></to>
    </wire>
    <wire loc="112:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2b8666d78a70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b86679266e0"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x2b8666d6fd30"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b866794c478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2b866794c478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b86681f5168"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketHistory" scoped="" ref="0x2b8666d68958"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2b86679aed78"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CacheCompare" scoped="" ref="0x2b866799c7b8"/></from>
      <to><interface-ref name="CacheCompare" scoped="" ref="0x2b8666d4fab8"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666d9b060"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b8667997d78"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Updates" scoped="" ref="0x2b8667997d78"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b8667991240"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666dfbdb0"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b8667997d78"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficStatistics" scoped="" ref="0x2b8666dfebc0"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b8667997060"/></to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="selfReceiveTask" scoped="" ref="0x2b8666d92020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b8666d8b368"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8667896b28"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b866788c508"/></to>
    </wire>
    <wire loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="QueueStatus" scoped="" ref="0x2b8666e1f130"/></from>
      <to><interface-ref name="QueueStatus" scoped="" ref="0x2b8666e00668"/></to>
    </wire>
    <wire loc="72:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PathCost" scoped="" ref="0x2b8666e18b28"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b8666dfb360"/></to>
    </wire>
    <wire loc="73:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666e10268"/></from>
      <to><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666dfbdb0"/></to>
    </wire>
    <wire loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b8666e11420"/></from>
      <to><interface-ref name="TrafficStatistics" scoped="" ref="0x2b8666dfebc0"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b8666e272f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666ecfe68"/></to>
    </wire>
    <wire loc="76:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8666ecfe68"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666ee22c0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b8666e1c380"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8666ec6448"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8666ec6448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8666eddda0"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b8666e1e690"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b866775bcd8"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconPacket" scoped="" ref="0x2b866775bcd8"/></from>
      <to><interface-ref name="BeaconPacket" scoped="" ref="0x2b86677a41c0"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b8666e1bb40"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b866775e890"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x2b866775e890"/></from>
      <to><interface-ref name="BeaconReceive" scoped="" ref="0x2b86677a9e28"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b8666e1f978"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b86677bbd58"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataPacket" scoped="" ref="0x2b86677bbd58"/></from>
      <to><interface-ref name="DataPacket" scoped="" ref="0x2b86677a2360"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b8666e1a380"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b866775aa20"/></to>
    </wire>
    <wire loc="86:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataReceive" scoped="" ref="0x2b866775aa20"/></from>
      <to><interface-ref name="DataReceive" scoped="" ref="0x2b86677a3020"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSnoop" scoped="" ref="0x2b8666e1aa20"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8666ec9b68"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b8666e190e8"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b866775b020"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x2b866775b020"/></from>
      <to><interface-ref name="BeaconSend" scoped="" ref="0x2b86677a64d8"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b8666e19d90"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b86677bb0b8"/></to>
    </wire>
    <wire loc="87:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x2b86677bb0b8"/></from>
      <to><interface-ref name="DataSend" scoped="" ref="0x2b86677a3690"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666e14c00"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666ec13a0"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666ec13a0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f09970"/></to>
    </wire>
    <wire loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b86677b2d58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666ec77a0"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666ec77a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666edd190"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b86677b3878"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8666ecbdf8"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b86677b26a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666ec9020"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b86677b26a8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8666ec9b68"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b86677ac060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8667897b98"/></to>
    </wire>
    <wire loc="57:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8667897b98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b866788d5f8"/></to>
    </wire>
    <wire loc="109:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b86677aea50"/></from>
      <to><interface-ref name="SendData" scoped="" ref="0x2b866787c158"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x2b866787c158"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b866787abb8"/></to>
    </wire>
    <wire loc="110:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b86677ad9a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b86678975c0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b86678975c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b866788d020"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b86677accb0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8666ec6448"/></to>
    </wire>
    <wire loc="115:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubSendData" scoped="" ref="0x2b866787ce80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b866789a968"/></to>
    </wire>
    <wire loc="55:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b866789a968"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b866788e2b8"/></to>
    </wire>
    <wire loc="116:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b866787bbb0"/></from>
      <to><interface-ref name="BackoffConfig" scoped="" ref="0x2b8666e26890"/></to>
    </wire>
    <wire loc="121:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="AMSubSend" scoped="" ref="0x2b86678936b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8666ecbdf8"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86678924e0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666ec9020"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b8667892b58"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8666ec77a0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8666e20108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="131:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b86677aa410"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="135:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8666e25020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b86678ba6e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b86678ba6e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b8666e163b0"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b86678b4a10"/></to>
    </wire>
    <wire loc="141:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b8666e135b8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b86678514c8"/></to>
    </wire>
    <wire loc="145:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b8666e13d08"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b8666cf3cb0"/></to>
    </wire>
    <wire loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x2b8666e2b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8666ee22c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8666eff9e0"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f09970"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f48020"/></to>
    </wire>
    <wire loc="81:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b8666ec71c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b8666edeb28"/></to>
    </wire>
    <wire loc="85:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b8666edeb28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b8666f36348"/></to>
    </wire>
    <wire loc="78:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8666ecbdf8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8666ee1270"/></to>
    </wire>
    <wire loc="82:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8666ee1270"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8666efcaa8"/></to>
    </wire>
    <wire loc="80:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8666ec9b68"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8666ede020"/></to>
    </wire>
    <wire loc="84:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8666ede020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8666efa818"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8666edd190"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b8666f339e8"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b8666ef2020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f076b0"/></to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f076b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f46c38"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666ee9e48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f03670"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f03670"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f43bf0"/></to>
    </wire>
    <wire loc="79:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8666ec9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666edf3c8"/></to>
    </wire>
    <wire loc="83:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8666edf3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8666efbc38"/></to>
    </wire>
    <wire loc="88:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b8666ef7dc0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b8666f18498"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b8666f18498"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b8666f51c70"/></to>
    </wire>
    <wire loc="91:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8666eddda0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8666f342c0"/></to>
    </wire>
    <wire loc="89:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b8666ef3878"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f17140"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f17140"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f1a968"/></to>
    </wire>
    <wire loc="217:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8666eff9e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b86672e0440"/></to>
    </wire>
    <wire loc="100:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b8666f0c818"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b8666f4cd28"/></to>
    </wire>
    <wire loc="311:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b8666f4cd28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b86673fe388"/></to>
    </wire>
    <wire loc="125:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b8666f36348"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b86670ff020"/></to>
    </wire>
    <wire loc="127:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b8666f339e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b86670bf578"/></to>
    </wire>
    <wire loc="122:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b8666efcaa8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b86670be388"/></to>
    </wire>
    <wire loc="124:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b8666efa818"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b86671017e0"/></to>
    </wire>
    <wire loc="99:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8666f0f480"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8666f4f870"/></to>
    </wire>
    <wire loc="309:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8666f4f870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8667402060"/></to>
    </wire>
    <wire loc="123:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8666efbc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b86671010c8"/></to>
    </wire>
    <wire loc="271:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f46c38"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86673e77d8"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8666f082d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8666f48830"/></to>
    </wire>
    <wire loc="313:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8666f48830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673f4830"/></to>
    </wire>
    <wire loc="98:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8666f16110"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8666f19518"/></to>
    </wire>
    <wire loc="310:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8666f19518"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b86673f9d70"/></to>
    </wire>
    <wire loc="188:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b8666f51c70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b86672fd268"/></to>
    </wire>
    <wire loc="126:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8666f342c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b86670c0020"/></to>
    </wire>
    <wire loc="226:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f1a968"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b8667356bd0"/></to>
    </wire>
    <wire loc="312:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f48020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86673f4020"/></to>
    </wire>
    <wire loc="272:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f43bf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b86673eba48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b86672e0440"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b86672dc858"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b86673fe388"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b86674290c8"/></to>
    </wire>
    <wire loc="161:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b8666f31710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b86671ae840"/></to>
    </wire>
    <wire loc="149:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b8666f294b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8667155200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8667155200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8667fdb918"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b86670ff020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b8667f256f8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b86670be388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b8667f27a28"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b86671017e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b8667f25020"/></to>
    </wire>
    <wire loc="162:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b8666f1b308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b866724a900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b866724a900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b8667ff2d98"/></to>
    </wire>
    <wire loc="163:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b8666f246e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b866714f980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8667402060"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b866742dcd0"/></to>
    </wire>
    <wire loc="218:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b8666f511d8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b86672ddd60"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b86672ddd60"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b866807c5e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b86670bf578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8667f29d20"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b86671010c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667f26820"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86673e77d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86680b5c48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673f4830"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8667527438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b86673f9d70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8667423860"/></to>
    </wire>
    <wire loc="159:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b8666f2a250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b86671af578"/></to>
    </wire>
    <wire loc="129:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b8666f35020"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b86670ff738"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b86670ff738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b8667f25e10"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b86672fd268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b86672f8470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b8667356bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b86680729c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b86670c0020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b8667f2a700"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b86673eba48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b86680b8020"/></to>
    </wire>
    <wire loc="160:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b8666f31020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b86671ae2a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86673f4020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86674219d0"/></to>
    </wire>
    <wire loc="130:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b8666f35bb0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b86670ffe50"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b86670ffe50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b8667f24550"/></to>
    </wire>
    <wire loc="103:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b8666fb5858"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b866724e980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b866724e980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b8667ff8d50"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b8666fae640"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b866700f910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b8666fb2a40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86673e77d8"/></to>
    </wire>
    <wire loc="106:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b8666fa8860"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b8667403020"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b8667403020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b866742eca8"/></to>
    </wire>
    <wire loc="111:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8667026958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b86673f3ae0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b86673f3ae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b866752b2e0"/></to>
    </wire>
    <wire loc="117:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b86670fc2a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b8666f90da8"/></to>
    </wire>
    <wire loc="118:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86670fd2a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b86670f4100"/></to>
    </wire>
    <wire loc="119:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86670fdb90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b86671b7060"/></to>
    </wire>
    <wire loc="120:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86670fe4d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b86671b7638"/></to>
    </wire>
    <wire loc="138:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b86670e53f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8667155200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86670f4a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b86671b8740"/></to>
    </wire>
    <wire loc="154:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b86671aee38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b866724e980"/></to>
    </wire>
    <wire loc="155:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86671aaba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b86671a2838"/></to>
    </wire>
    <wire loc="156:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86671a85b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b86671ba2a8"/></to>
    </wire>
    <wire loc="157:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b86671abd98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b86671ba880"/></to>
    </wire>
    <wire loc="170:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86671b6490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b86672c3470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b86672c3470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b86680a9da0"/></to>
    </wire>
    <wire loc="171:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86671b6d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b86672febd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b86672febd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b86672fb5b8"/></to>
    </wire>
    <wire loc="172:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86671b5378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b8667249b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b8667249b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b8668071020"/></to>
    </wire>
    <wire loc="177:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b8667248ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b86672fde20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b86672fde20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b86672fbb90"/></to>
    </wire>
    <wire loc="182:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b86672c1580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b8666f665f0"/></to>
    </wire>
    <wire loc="183:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86672c2510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b86672fe2e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b86672fe2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b86672fcc38"/></to>
    </wire>
    <wire loc="195:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86672fcc38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b86672de020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b86672de020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b86672db430"/></to>
    </wire>
    <wire loc="196:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86672fb5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b86672de908"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b86672de908"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b86672dbd18"/></to>
    </wire>
    <wire loc="197:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86672fbb90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b86672dd020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b86672dd020"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b86672da328"/></to>
    </wire>
    <wire loc="213:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b86672dc858"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8667357270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b8667357270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b8668075870"/></to>
    </wire>
    <wire loc="214:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86672db430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8667357ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b8667357ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b8668073a08"/></to>
    </wire>
    <wire loc="215:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86672dbd18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8667356638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b8667356638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b8668072430"/></to>
    </wire>
    <wire loc="216:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86672da328"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b86673e4220"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b86673e4220"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b86681377a0"/></to>
    </wire>
    <wire loc="223:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b86673543f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b8667405020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b8667405020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b866742f450"/></to>
    </wire>
    <wire loc="224:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b8667354c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b86672c3d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b86672c3d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b86680a66c8"/></to>
    </wire>
    <wire loc="225:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b86673555d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b8667407148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b8667407148"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b8667430620"/></to>
    </wire>
    <wire loc="230:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86672c2df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b8667405948"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b8667405948"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b866742fd78"/></to>
    </wire>
    <wire loc="269:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673e2168"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673f4830"/></to>
    </wire>
    <wire loc="270:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86673e1188"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b86673dba70"/></to>
    </wire>
    <wire loc="273:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b86673e0020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b86673db020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b866740c928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b8667403020"/></to>
    </wire>
    <wire loc="306:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b86673efb80"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b866773fe78"/></to>
    </wire>
    <wire loc="49:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b866773fe78"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b866773b428"/></to>
    </wire>
    <wire loc="308:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b86673eebc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86673e77d8"/></to>
    </wire>
    <wire loc="315:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b866743b750"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b86673db020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b866743a368"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b86673db020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="317:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b8667439020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b86673db020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="318:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b8667439ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b866700f910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b866700f910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b8667f45020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b8667f45e68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8667026958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b8667f41020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b8667025220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8667fb0a10"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b86670d5560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b8667f24ba8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b86670fe4d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b8667f23a50"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b86670fd2a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8667f22430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b86670fdb90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b8667f22a08"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b86670fc2a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b8667154020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b8667fda698"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8667154760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8667fdadd8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8667fd96c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8667152020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b8667fd9e40"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b8667fdea10"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b8667fd8920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8668071dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b86670d5560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b8668070890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b8667248ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b86680a2020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b86672aad58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b86672aad58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b86672a4850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b86680a2bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b866809f140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b866809f140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b86672a3b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b86680a5458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b86672c2510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b86680a5d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b86672c2df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b86680a34a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b86672c1580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b86672f7100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b86672f9a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b86680f4450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b86673555d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b86680f3268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b8667025220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b86680f3c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b86673543f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b86680f2578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b8667354c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b86680f14f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b86680f1c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b86680f2d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86681322a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b86673e1188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86681341c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673e2168"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8668133290"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b8668135618"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b86673e0020"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b86674017c8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b866742e518"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b866752b2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b86677226f0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b86673fb880"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b8667426458"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8667527438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b866771b208"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b8667462100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b86673efb80"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b8667462e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b866743b750"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b8667461988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b866743a368"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b8667460518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b8667439020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b866745f2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b86673eebc8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8667465020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8667527438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b866745bab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b8667439ab8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b866741f130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b8667533710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b8667533710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b866642a7e0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b866741e4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b8667530990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b8667530990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8667560978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b86674171f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b866752f5e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b866752f5e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b8667562668"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b8667417d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b866752e140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b866752e140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b86664344d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b866741ce70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b866752d338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b866752d338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b866641a4d0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b86674665e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b866752c4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b866752c4c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b8667526cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b866745b020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b8667025220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b8667464c60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b86677547d0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b86674c8d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b86677226f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b8668150bc8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b8667562668"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b8667555428"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b866771b208"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b86676ff020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b866751e830"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b8666446020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b866751daf8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b8666437c78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b8667522190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b8667636020"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b8667636020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b8667624808"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b8667559c20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b8667554020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b8667562020"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b8667556d80"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b86675249d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b86675567a0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b8667560978"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b8667554c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b866758c208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b86675f1748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b86675f1748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b866817db80"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b866758ce30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b86675f0c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b86675f0c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b866817b268"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b8667551020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b8667597020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b8667597020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b8667594dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b866758b600"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b866631c3c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b866756bb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b86675e0350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b866631c3c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b86675e3c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b866642a7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b86675e6de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b8666429968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b86675e2020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b8666428af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b86675e1190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b8666427c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b86675f0510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b866817c9a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b866817bb08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b86675ee550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b866817a2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b86680f5d88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b866817ad68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667638838"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667625160"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b866763f6e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b866762a180"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8667632e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b866761e020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8667632e18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b866761b360"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b8667632e18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b8667617770"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b866814dc18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b866763f6e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b8668148c68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b8667632e18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b86676a4020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b866763f6e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b86676fe230"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b86677075a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b86677047f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8667716020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b8667716020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b8667713b90"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8667710c58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b866763f6e0"/></to>
    </wire>
    <wire loc="101:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b86677af520"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b86677fac98"/></to>
    </wire>
    <wire loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Update" scoped="" ref="0x2b86677fac98"/></from>
      <to><interface-ref name="Update" scoped="" ref="0x2b866819ea60"/></to>
    </wire>
    <wire loc="90:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b86677b4300"/></from>
      <to><interface-ref name="Dissemination" scoped="" ref="0x2b86677a1148"/></to>
    </wire>
    <wire loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Value" scoped="" ref="0x2b8667826020"/></from>
      <to><interface-ref name="Value" scoped="" ref="0x2b866819dd78"/></to>
    </wire>
    <wire loc="91:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b866779bd08"/></from>
      <to><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b86677b26a8"/></to>
    </wire>
    <wire loc="92:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b866779b020"/></from>
      <to><interface-ref name="BeaconSubSend" scoped="" ref="0x2b86677b3878"/></to>
    </wire>
    <wire loc="93:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b866779a400"/></from>
      <to><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b86677b2d58"/></to>
    </wire>
    <wire loc="94:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b8667798020"/></from>
      <to><interface-ref name="DataSubReceive" scoped="" ref="0x2b86677ad9a0"/></to>
    </wire>
    <wire loc="95:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b86677991f0"/></from>
      <to><interface-ref name="DataSubSend" scoped="" ref="0x2b86677aea50"/></to>
    </wire>
    <wire loc="96:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="DataSubPacket" scoped="" ref="0x2b86677986c0"/></from>
      <to><interface-ref name="DataSubPacket" scoped="" ref="0x2b86677ac060"/></to>
    </wire>
    <wire loc="97:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b8667797468"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b86677accb0"/></to>
    </wire>
    <wire loc="104:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b8667796bb8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b86677aa410"/></to>
    </wire>
    <wire loc="12:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Delay" scoped="" ref="0x2b8667825970"/></from>
      <to><interface-ref name="Delay" scoped="" ref="0x2b866819a6c0"/></to>
    </wire>
    <wire loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="Dissemination" scoped="" ref="0x2b866819acf8"/></from>
      <to><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b86677b4300"/></to>
    </wire>
    <wire loc="18:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8668198740"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <from><interface-ref name="valueChangedTask" scoped="" ref="0x2b8668197800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b86678769e8"/></from>
      <to><interface-ref name="SubSendData" scoped="" ref="0x2b866787ce80"/></to>
    </wire>
    <wire loc="53:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b86678757d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b866787bbb0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b8667875da8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b86678514c8"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8667874738"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b8667852ab8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b8667852ab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <from><interface-ref name="doneTask" scoped="" ref="0x2b866786ba80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b866784e348"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b86678ad1e8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b8667854658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b866784d938"/></to>
    </wire>
    <wire loc="59:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b8667889020"/></from>
      <to><interface-ref name="AMSubSend" scoped="" ref="0x2b86678936b8"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b8667889cc8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b86678924e0"/></to>
    </wire>
    <wire loc="61:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b86678883c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b8667892b58"/></to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8667887220"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b8667935af0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b866793bdf8"/></to>
    </wire>
    <wire loc="54:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86679344a8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666ec13a0"/></to>
    </wire>
    <wire loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b866798f490"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></to>
    </wire>
    <wire loc="60:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="PktRateJob" scoped="" ref="0x2b866798a700"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b86679cb4c0"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b86679cb4c0"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b86679c1030"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b86679cbc80"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b86679e49c0"/></to>
    </wire>
    <wire loc="65:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a4c020"/></from>
      <to><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b8667990c58"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f5530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b86679cbc80"/></to>
    </wire>
    <wire loc="52:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b86679bf3a0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b86679bc420"/></to>
    </wire>
    <wire loc="53:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b86679c1030"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b86679bb1c8"/></to>
    </wire>
    <wire loc="50:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="DispatchTimer" scoped="" ref="0x2b86679bbbb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b86679fe8d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b86679fe8d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <from><interface-ref name="dispatch" scoped="" ref="0x2b8667a17be0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b86679f4788"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b86663fc890"/></to>
    </wire>
    <wire loc="51:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f02e8"/></from>
      <to><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f5530"/></to>
    </wire>
    <wire loc="54:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b86679f08f0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b86679bf3a0"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b8667a30020"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b8667a34208"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b8667a34208"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b86679c1030"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b8667a349c8"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a24598"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a24bd0"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a22560"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b8667a308f8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b8667997060"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8667a31328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8667a37760"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f5530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a349c8"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b8667a81c10"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b8667a82830"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b8667a82830"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b86679c1030"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b8667a6b020"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a6ab28"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a69190"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a68a00"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="QueueStats" scoped="" ref="0x2b8667a80738"/></from>
      <to><interface-ref name="QueueStatistics" scoped="" ref="0x2b8666d50158"/></to>
    </wire>
    <wire loc="65:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="PacketStats" scoped="" ref="0x2b8667a7faa0"/></from>
      <to><interface-ref name="PacketStatistics" scoped="" ref="0x2b8666e281f0"/></to>
    </wire>
    <wire loc="66:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="DissStats" scoped="" ref="0x2b8667a7ed88"/></from>
      <to><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b866779ee80"/></to>
    </wire>
    <wire loc="70:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b8667a81020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b8667a19180"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f5530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b8667a6b020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="periodicSenderP" loc="57:periodicSenderP.nc">
      <module/>
    </component>
    <component qname="periodicSenderC.TimerMilliC" loc="44(periodicSenderC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="26:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <documentation loc="11:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="59(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b866668a3e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="periodicSenderC.BootTimer" loc="44(periodicSenderC.BootTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TThree" ref="0x2b86662fcd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TThree" ref="0x2b86662fcd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b86662fa630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <value cst="I:400">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoP" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoQueueP" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <module/>
    </component>
    <component qname="OrinocoRadioC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioP" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <documentation loc="34:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
        <short>&#10; Modifications by Christian Renner from Hamburg University of Technology:&#10; Removed PacketAcknowledgement, and LowPowerListening to comply&#10; with Orinoco&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="42:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="38:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RF230SlimRadioC" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230SlimRadioP" loc="40:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <documentation loc="35:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC" loc="41:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date February 18th 2015&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerP" loc="6:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <module/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator" loc="1(OrinocoDisseminationLayerC.Disseminator):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP" loc="1(OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP):../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <instance number="0">
        <component-ref qname="OrinocoDisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b86677fc398"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoForwardLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC.TimerMilliC" loc="44(OrinocoForwardLayerC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPacketDelayLayerP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date April 9th 2013&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoRadioC.Timer" loc="44(OrinocoRadioC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoConfigC" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
        <short>&#10; configuration of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; configuration of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoConfigP" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
        <short>&#10; implementation of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; implementation of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoPathCostHopCountC" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountP" loc="40:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoP.SendQueue" loc="42(OrinocoP.SendQueue):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86665c8738"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b86665c8a90"/></typename>
          </type-tag>
          <value cst="I:30">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.MsgPool" loc="41(OrinocoP.MsgPool):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
            <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
          </type-tag>
          <value cst="I:30">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP.MsgPool.PoolP" loc="53(OrinocoP.MsgPool.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8667971e68"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.PacketHistory" loc="44(OrinocoP.PacketHistory):../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="OrinocoCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b86665ca900"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b86665cadb8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
        <short>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoTrafficStatisticsP" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.Job" loc="42(OrinocoTrafficStatisticsC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="0">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EASchedulerC" loc="40:../../../EAJobs/lib/EASchedulerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EASchedulerP" loc="44:../../../EAJobs/lib/EASchedulerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EASchedulerC.DispatchTimer" loc="44(EASchedulerC.DispatchTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerC" loc="40:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerP" loc="42:../../../EAJobs/lib/EAEnergyManagerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC" loc="42(OrinocoTrafficStatisticsC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC" loc="40:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobP" loc="42:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC.Job" loc="42(OrinocoStatsReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="1">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoStatsReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobConfigC" loc="40:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC" loc="40:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobP" loc="42:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingMsg.h">
        <short>&#10; Orinoco Statistics Message&#10;&#10; </short>
        <long>&#10; Orinoco Statistics Message&#10;&#10; @author Christian Renner&#10; @date February 7th 2012&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC.Job" loc="42(OrinocoDebugReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="2">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoDebugReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobConfigC" loc="42:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b866645fd00" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b866645b0c8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b866645b410" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b8666463608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b8666463970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b8666463cd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b8666472060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b86664fc508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b86664fc870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b86664fcbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b86664fb020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b866668a3e8" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b866668a3e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b866668a6d8" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b8666680b30" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b8666680b30"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b8666680e20" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b866666d8e8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b866666d8e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b86667c3cc8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b86667c3cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b86667c0020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b86667f69f0" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b86667f69f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b8666819d08" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b8666859250" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b866687b890" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b8666c42b48" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666c42b48"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b8666c3f020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b8666c5f470" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b8666c5f470"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b8666c5fbc0" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666c5fbc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b8666c78bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b8666c78bd8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b8666c75380" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b8666c75380"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b8666c75748" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b8666c75748"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b8666c73020" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b8666c73020"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b8666c733c8" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b8666c73b58" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b8666c73b58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="BigQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b8666c9c498" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b8666c9c498"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b8666c9c800" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b86670e2ab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b8667117170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b86676f7210" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b86676f7210"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b86676f7960" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b86676f7960"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b86676f7c60" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoDisseminatorC" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b86677fc398" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
          <component-ref qname="OrinocoDisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b86677fc398"/></type-var>
        </typedef>
      </parameters>
      <configuration/>
    </component>
    <component qname="OrinocoDisseminatorP" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc" abstract="">
      <parameters>
        <typedef name="T" ref="0x2b86677f5740" loc="1:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
          <component-ref qname="OrinocoDisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="T" scoped="" ref="0x2b86677f5740"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b8667925198" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b8667925198"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b86679254f0" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b8667971e68" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b8667971e68"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b866796e1e8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b866796ae50" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b866796ae50"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b86679671b8" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoCacheC" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc" abstract="">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b86679ac020" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b86679ac020"/></type-var>
        </typedef>
        <constant name="SIZE" ref="0x2b86679ac340" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EAJobC" loc="42:../../../EAJobs/lib/EAJobC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="EAPeriodicJobConfigC" loc="42:../../../EAJobs/lib/EAPeriodicJobConfigC.nc" abstract="">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b86663fec80" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b86663fec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86663fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b86663fc890" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b86663fc890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b86663fcbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b86663f79a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b86663f79a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86663f7cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86663fdc10" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86663fdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86663f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b8666404b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8666404b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b86663f7020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b86663f71a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b86663f7330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b86663f74b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b86663f7640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b8666401b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b8666401b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86663ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86664014f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86664014f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666401840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b86663ff398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b86663ff398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86663ff6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b866640d108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b866640d108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866640d458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b8666403a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8666403a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666403d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b86664097f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b86664097f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666409b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b86664155f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b86664155f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666415948"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666415ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666415c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666415de0"/>
        <function-ref name="get" scoped="" ref="0x2b8666409020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664091a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666409330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b866640a428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b866640a428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866640a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b8666456c78" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b8666456c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664555e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666455770"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664558f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666455a80"/>
        <function-ref name="get" scoped="" ref="0x2b8666455c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666455d90"/>
        <function-ref name="set" scoped="" ref="0x2b8666454020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b866643a7e0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b866643a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866643ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b866643acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666439020"/>
        <function-ref name="get" scoped="" ref="0x2b86664391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666439330"/>
        <function-ref name="set" scoped="" ref="0x2b86664394b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666439640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b86664417e0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b86664417e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666441b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666441cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666441e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666440020"/>
        <function-ref name="get" scoped="" ref="0x2b86664401a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666440330"/>
        <function-ref name="set" scoped="" ref="0x2b86664404b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666440640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b866644a4d0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b866644a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644acb8"/>
        <function-ref name="get" scoped="" ref="0x2b866644ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666448020"/>
        <function-ref name="set" scoped="" ref="0x2b86664481a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666448330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b8666450af0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b8666450af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666450e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666461020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664611a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666461330"/>
        <function-ref name="get" scoped="" ref="0x2b86664614b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666461640"/>
        <function-ref name="set" scoped="" ref="0x2b86664617c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666461950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b866641a4d0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b866641a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641acb8"/>
        <function-ref name="get" scoped="" ref="0x2b866641ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866642b020"/>
        <function-ref name="set" scoped="" ref="0x2b866642b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b866642b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b866644c1a0" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b866644c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644c988"/>
        <function-ref name="get" scoped="" ref="0x2b866644cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866644cc98"/>
        <function-ref name="set" scoped="" ref="0x2b866644ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b866644b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b866642a7e0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b866642a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866642ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b866642acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866642ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666429020"/>
        <function-ref name="get" scoped="" ref="0x2b86664291a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666429330"/>
        <function-ref name="set" scoped="" ref="0x2b86664294b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666429640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b8666431968" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b8666431968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666431cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666431e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666430020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664301a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666430330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664304b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666430640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b8666437c78" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b8666437c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666436020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664361a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666436330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664364b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666436640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664367c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666436950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666436ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b866643ec78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b866643ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b866644f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866644f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b866644f950"/>
        <function-ref name="clr" scoped="" ref="0x2b866644fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b8666420c78" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b8666420c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641f020"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b866641f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866641f7c8"/>
        <function-ref name="set" scoped="" ref="0x2b866641f950"/>
        <function-ref name="clr" scoped="" ref="0x2b866641fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b8666427c78" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b8666427c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666426020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664261a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666426330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664264b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666426640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664267c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666426950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666426ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b866642de00" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b866642de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866642c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866642c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b866642c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866642c640"/>
        <function-ref name="get" scoped="" ref="0x2b866642c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866642c950"/>
        <function-ref name="set" scoped="" ref="0x2b866642cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b866642cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b86664451a0" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b86664451a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664454f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666445678"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666445800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666445988"/>
        <function-ref name="get" scoped="" ref="0x2b8666445b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666445c98"/>
        <function-ref name="set" scoped="" ref="0x2b8666445e20"/>
        <function-ref name="clr" scoped="" ref="0x2b8666444020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b8666458968" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b8666458968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666458cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666458e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666457020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664571a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666457330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664574b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666457640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b86664527e0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b86664527e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666452b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666452cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666452e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666451020"/>
        <function-ref name="get" scoped="" ref="0x2b86664511a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666451330"/>
        <function-ref name="set" scoped="" ref="0x2b86664514b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666451640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b86664434d0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b86664434d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666443820"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664439a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666443b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666443cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8666443e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666442020"/>
        <function-ref name="set" scoped="" ref="0x2b86664421a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666442330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b866641c1a0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b866641c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641c988"/>
        <function-ref name="get" scoped="" ref="0x2b866641cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866641cc98"/>
        <function-ref name="set" scoped="" ref="0x2b866641ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b866641b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b8666423348" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b8666423348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666423698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666423820"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664239a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666423b30"/>
        <function-ref name="get" scoped="" ref="0x2b8666423cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666423e40"/>
        <function-ref name="set" scoped="" ref="0x2b8666434020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b86664544d0" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b86664544d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666454820"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664549a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666454b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666454cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8666454e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666453020"/>
        <function-ref name="set" scoped="" ref="0x2b86664531a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666453330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b8666433658" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b8666433658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664339a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666433b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666433cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666433e40"/>
        <function-ref name="get" scoped="" ref="0x2b8666432020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664321a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666432330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b8666439968" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b8666439968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666439cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666439e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666438020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664381a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666438330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664384b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666438640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664387c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b8666440968" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b8666440968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666440cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666440e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866643f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b866643f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866643f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b866643f640"/>
        <function-ref name="clr" scoped="" ref="0x2b866643f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b8666448658" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b8666448658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664489a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666448b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666448cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666448e40"/>
        <function-ref name="get" scoped="" ref="0x2b8666447020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664471a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666447330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664474b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b866642b658" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b866642b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866642b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866642bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b866642bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866642be40"/>
        <function-ref name="get" scoped="" ref="0x2b866642a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866642a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b866642a330"/>
        <function-ref name="clr" scoped="" ref="0x2b866642a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b8666429968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b8666429968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666429cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666429e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666428020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664281a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666428330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664284b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666428640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b8666430af0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b8666430af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666430e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b866642f020"/>
        <function-ref name="toggle" scoped="" ref="0x2b866642f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866642f330"/>
        <function-ref name="get" scoped="" ref="0x2b866642f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866642f640"/>
        <function-ref name="set" scoped="" ref="0x2b866642f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b866642f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b8666436e00" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b8666436e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664351a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666435330"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664354b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666435640"/>
        <function-ref name="get" scoped="" ref="0x2b86664357c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666435950"/>
        <function-ref name="set" scoped="" ref="0x2b8666435ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666435c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b866644fe00" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b866644fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644e640"/>
        <function-ref name="get" scoped="" ref="0x2b866644e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866644e950"/>
        <function-ref name="set" scoped="" ref="0x2b866644ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b866644ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b866641fe00" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b866641fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641e640"/>
        <function-ref name="get" scoped="" ref="0x2b866641e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866641e950"/>
        <function-ref name="set" scoped="" ref="0x2b866641ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b866641ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b8666426e00" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b8666426e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664252e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666425470"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664255f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666425780"/>
        <function-ref name="get" scoped="" ref="0x2b8666425908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666425a90"/>
        <function-ref name="set" scoped="" ref="0x2b8666425c18"/>
        <function-ref name="clr" scoped="" ref="0x2b8666425da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b866643d020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b866643d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866643d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b866643d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866643d808"/>
        <function-ref name="get" scoped="" ref="0x2b866643d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866643db18"/>
        <function-ref name="set" scoped="" ref="0x2b866643dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b866643de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b8666457af0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b8666457af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666457e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666456020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664561a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666456330"/>
        <function-ref name="get" scoped="" ref="0x2b86664564b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666456640"/>
        <function-ref name="set" scoped="" ref="0x2b86664567c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666456950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b866643b348" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b866643b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866643b898"/>
        <function-ref name="isInput" scoped="" ref="0x2b866643ba20"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643bba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866643bd30"/>
        <function-ref name="get" scoped="" ref="0x2b866643a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866643a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b866643a330"/>
        <function-ref name="clr" scoped="" ref="0x2b866643a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b8666442658" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b8666442658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664429a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666442b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666442cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666442e40"/>
        <function-ref name="get" scoped="" ref="0x2b8666441020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664411a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666441330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b866644b348" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b866644b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644bb30"/>
        <function-ref name="get" scoped="" ref="0x2b866644bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866644be40"/>
        <function-ref name="set" scoped="" ref="0x2b866644a020"/>
        <function-ref name="clr" scoped="" ref="0x2b866644a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b8666451968" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b8666451968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666451cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666451e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666450020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664501a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666450330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664504b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666450640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664507c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b866641b348" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b866641b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641bb30"/>
        <function-ref name="get" scoped="" ref="0x2b866641bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866641be40"/>
        <function-ref name="set" scoped="" ref="0x2b866641a020"/>
        <function-ref name="clr" scoped="" ref="0x2b866641a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b86664344d0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b86664344d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666434820"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664349a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666434b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666434cb8"/>
        <function-ref name="get" scoped="" ref="0x2b8666434e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666433020"/>
        <function-ref name="set" scoped="" ref="0x2b86664331a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666433330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b866644d020" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b866644d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866644d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b866644d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866644d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866644d808"/>
        <function-ref name="get" scoped="" ref="0x2b866644d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866644db18"/>
        <function-ref name="set" scoped="" ref="0x2b866644dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b866644de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b86664327e0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b86664327e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666432b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666432cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666432e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666431020"/>
        <function-ref name="get" scoped="" ref="0x2b86664311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666431330"/>
        <function-ref name="set" scoped="" ref="0x2b86664314b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666431640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b8666438af0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b8666438af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666438e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666437020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664371a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666437330"/>
        <function-ref name="get" scoped="" ref="0x2b86664374b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666437640"/>
        <function-ref name="set" scoped="" ref="0x2b86664377c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666437950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b866643faf0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b866643faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866643fe40"/>
        <function-ref name="isInput" scoped="" ref="0x2b866643e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866643e330"/>
        <function-ref name="get" scoped="" ref="0x2b866643e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866643e640"/>
        <function-ref name="set" scoped="" ref="0x2b866643e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b866643e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b86664477e0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b86664477e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666447b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666447cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666447e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666458020"/>
        <function-ref name="get" scoped="" ref="0x2b86664581a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666458330"/>
        <function-ref name="set" scoped="" ref="0x2b86664584b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666458640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b866640ca70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b866640ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866640cdc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666420020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664201a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666420330"/>
        <function-ref name="get" scoped="" ref="0x2b86664204b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666420640"/>
        <function-ref name="set" scoped="" ref="0x2b86664207c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666420950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b8666428af0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b8666428af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666428e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666427020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664271a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666427330"/>
        <function-ref name="get" scoped="" ref="0x2b86664274b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666427640"/>
        <function-ref name="set" scoped="" ref="0x2b86664277c8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666427950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b866642fc78" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b866642fc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866642d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b866642d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866642d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866642d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b866642d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866642d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b866642d950"/>
        <function-ref name="clr" scoped="" ref="0x2b866642dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b8666446020" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b8666446020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666446370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664464f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666446680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666446808"/>
        <function-ref name="get" scoped="" ref="0x2b8666446990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666446b18"/>
        <function-ref name="set" scoped="" ref="0x2b8666446ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8666446e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b8666453658" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b8666453658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664539a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666453b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666453cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666453e40"/>
        <function-ref name="get" scoped="" ref="0x2b8666452020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664521a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666452330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664524b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b8666444348" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b8666444348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666444698"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666444820"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664449a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666444b30"/>
        <function-ref name="get" scoped="" ref="0x2b8666444cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666444e40"/>
        <function-ref name="set" scoped="" ref="0x2b8666443020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b866643c1a0" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b866643c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866643c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b866643c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b866643c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866643c988"/>
        <function-ref name="get" scoped="" ref="0x2b866643cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866643cc98"/>
        <function-ref name="set" scoped="" ref="0x2b866643ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b866643b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b866641d020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b866641d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866641d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b866641d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866641d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866641d808"/>
        <function-ref name="get" scoped="" ref="0x2b866641d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866641db18"/>
        <function-ref name="set" scoped="" ref="0x2b866641dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b866641de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b8666424100" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b8666424100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666424450"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664245d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666424760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664248e8"/>
        <function-ref name="get" scoped="" ref="0x2b8666424a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666424bf8"/>
        <function-ref name="set" scoped="" ref="0x2b8666424d80"/>
        <function-ref name="clr" scoped="" ref="0x2b8666423020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b866649f120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b866649f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866649f470"/>
        <function-ref name="isInput" scoped="" ref="0x2b866649f5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866649f780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866649f908"/>
        <function-ref name="get" scoped="" ref="0x2b866649fa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866649fc18"/>
        <function-ref name="set" scoped="" ref="0x2b866649fda0"/>
        <function-ref name="clr" scoped="" ref="0x2b866649e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b866649c5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b866649c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866649c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b866649ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b866649cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866649cda0"/>
        <function-ref name="get" scoped="" ref="0x2b86664af020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664af1a8"/>
        <function-ref name="set" scoped="" ref="0x2b86664af330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664a2dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664a2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664a1170"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664a12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664a1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664a1608"/>
        <function-ref name="get" scoped="" ref="0x2b86664a1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664a1918"/>
        <function-ref name="set" scoped="" ref="0x2b86664a1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664a1c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b866649e2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b866649e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866649e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866649e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b866649e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866649ea90"/>
        <function-ref name="get" scoped="" ref="0x2b866649ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866649eda0"/>
        <function-ref name="set" scoped="" ref="0x2b866649d020"/>
        <function-ref name="clr" scoped="" ref="0x2b866649d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664af740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664af740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664afa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664afc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664afda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664ae020"/>
        <function-ref name="get" scoped="" ref="0x2b86664ae1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ae330"/>
        <function-ref name="set" scoped="" ref="0x2b86664ae4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664ae640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664a0020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664a0370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664a04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664a0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664a0808"/>
        <function-ref name="get" scoped="" ref="0x2b86664a0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664a0b18"/>
        <function-ref name="set" scoped="" ref="0x2b86664a0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664a0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b866649d430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b866649d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866649d780"/>
        <function-ref name="isInput" scoped="" ref="0x2b866649d908"/>
        <function-ref name="toggle" scoped="" ref="0x2b866649da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866649dc18"/>
        <function-ref name="get" scoped="" ref="0x2b866649dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866649c020"/>
        <function-ref name="set" scoped="" ref="0x2b866649c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b866649c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664ae8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664ae8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664aec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664aeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664ad020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664ad1a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664ad330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ad4b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664ad640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664ad7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a9b3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a9b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a9b730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a9b8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a9ba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a9bbc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667a9bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a9a020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a9a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a98480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a98480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a987d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a98958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a98ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a98c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a98df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a97020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a971a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a97330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a95480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a95480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a957d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a95958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a95ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a95c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a95df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a93020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a931a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a93330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a91480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a91480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a917d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a91958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a91ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a91c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a91df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a90020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a901a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a8e480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a8e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a8e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a8e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a8eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a8ec68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a8edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a8d020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a8d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a8d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a8b480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a8b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a8b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a8b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a8bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a8bc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a8bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a8a020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a8a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a8a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667a88480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667a88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667a887d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667a88958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667a88ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667a88c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667a88df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667a87020"/>
        <function-ref name="set" scoped="" ref="0x2b8667a871a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667a87330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667af9480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667af9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667af97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667af9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667af9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667af9c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667af9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667af8020"/>
        <function-ref name="set" scoped="" ref="0x2b8667af81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667af8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b86664b9bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b86664b9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b8020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b84b8"/>
        <function-ref name="get" scoped="" ref="0x2b86664b8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b87c8"/>
        <function-ref name="set" scoped="" ref="0x2b86664b8950"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b86664b5020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b86664b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b5808"/>
        <function-ref name="get" scoped="" ref="0x2b86664b5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b5b18"/>
        <function-ref name="set" scoped="" ref="0x2b86664b5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664a7930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664a7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664a7c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664a7e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664a61a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664a6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664a64b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664a6640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664a67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b86664b8d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b86664b8d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b70d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b7260"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b73e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b7570"/>
        <function-ref name="get" scoped="" ref="0x2b86664b76f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b7880"/>
        <function-ref name="set" scoped="" ref="0x2b86664b7a08"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664b4120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664b4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b4908"/>
        <function-ref name="get" scoped="" ref="0x2b86664b4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b4c18"/>
        <function-ref name="set" scoped="" ref="0x2b86664b4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664a6a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664a6a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664a6da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b9020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b91a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b9330"/>
        <function-ref name="get" scoped="" ref="0x2b86664b94b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b9640"/>
        <function-ref name="set" scoped="" ref="0x2b86664b97c8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b86664b7e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b86664b7e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b61a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b6330"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b6640"/>
        <function-ref name="get" scoped="" ref="0x2b86664b67c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b6950"/>
        <function-ref name="set" scoped="" ref="0x2b86664b6ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664b22a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664b22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664b25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664b2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664b2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664b2a90"/>
        <function-ref name="get" scoped="" ref="0x2b86664b2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664b2da0"/>
        <function-ref name="set" scoped="" ref="0x2b86664b1020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b153e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b153e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b15730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b158b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b15a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b15bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667b15d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b14020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b14330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b12480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b12480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b127d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b12958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b12ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b12c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b12df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b11020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b111a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b11330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b0f480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b0f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b0f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b0fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b0fc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b0fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b0e020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b0e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b0e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b0c480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b0c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b0c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b0c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b0cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b0cc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b0cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b0a020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b0a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b0a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b08480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b08480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b087d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b08958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b08ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b08c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b08df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b07020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b071a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b07330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b05480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b05480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b05958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b05ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b05c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b05df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b04020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b02480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b02480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b027d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b02958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b02ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b02c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b02df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b01020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667aff480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667aff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667aff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667aff958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667affae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667affc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667affdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667afe020"/>
        <function-ref name="set" scoped="" ref="0x2b8667afe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667afe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b86664be740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b86664be740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664bea90"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664bec18"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664beda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664bd020"/>
        <function-ref name="get" scoped="" ref="0x2b86664bd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664bd330"/>
        <function-ref name="set" scoped="" ref="0x2b86664bd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664bd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b86664babd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b86664babd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664cd020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664cd1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664cd330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664cd4b8"/>
        <function-ref name="get" scoped="" ref="0x2b86664cd640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664cd7c8"/>
        <function-ref name="set" scoped="" ref="0x2b86664cd950"/>
        <function-ref name="clr" scoped="" ref="0x2b86664cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664c0500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664c0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664c0850"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664c09d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664c0b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664c0ce8"/>
        <function-ref name="get" scoped="" ref="0x2b86664c0e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664bf020"/>
        <function-ref name="set" scoped="" ref="0x2b86664bf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b86664bd8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b86664bd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664bdc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664bdda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664bb020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664bb1a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664bb330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664bb4b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664bb640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664bb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664cdd60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664cdd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664cc0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664cc260"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664cc3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664cc570"/>
        <function-ref name="get" scoped="" ref="0x2b86664cc6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664cc880"/>
        <function-ref name="set" scoped="" ref="0x2b86664cca08"/>
        <function-ref name="clr" scoped="" ref="0x2b86664ccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664bf5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664bf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664bf908"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664bfa90"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664bfc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664bfda0"/>
        <function-ref name="get" scoped="" ref="0x2b86664be020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664be1a8"/>
        <function-ref name="set" scoped="" ref="0x2b86664be330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664be4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b86664bba50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b86664bba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664bbda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664ba020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664ba1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664ba330"/>
        <function-ref name="get" scoped="" ref="0x2b86664ba4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ba640"/>
        <function-ref name="set" scoped="" ref="0x2b86664ba7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664ba950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664cce18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664cce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664cb1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664cb330"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664cb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664cb640"/>
        <function-ref name="get" scoped="" ref="0x2b86664cb7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664cb950"/>
        <function-ref name="set" scoped="" ref="0x2b86664cbad8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664cbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b8a3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b8a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b8a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b8a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b8aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b8abc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667b8ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b89020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b891a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b89330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b87480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b87480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b877d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b87958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b87ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b87c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b87df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b86020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b861a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b84480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b84480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b847d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b84958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b84ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b84c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b84df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b83020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b831a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b81480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b81480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b817d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b81958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b81ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b81c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b81df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b7f020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b7f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b7f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b7d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b7d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b7d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b7d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b7dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b7dc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b7ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b7c020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b7a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b7a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b7a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b7aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b7ac68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b7adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b79020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b791a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b77480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b77480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b777d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b77958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b77ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b77c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b77df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b76020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667b74480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667b74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667b747d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667b74958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667b74ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667b74c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667b74df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667b73020"/>
        <function-ref name="set" scoped="" ref="0x2b8667b731a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667b73330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b86664d6120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b86664d6120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d6470"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d65f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d6780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d6908"/>
        <function-ref name="get" scoped="" ref="0x2b86664d6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d6c18"/>
        <function-ref name="set" scoped="" ref="0x2b86664d6da0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b86664d35b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b86664d35b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d3908"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d3a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d3c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d3da0"/>
        <function-ref name="get" scoped="" ref="0x2b86664d2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d21a8"/>
        <function-ref name="set" scoped="" ref="0x2b86664d2330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d24b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664c6e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664c6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664c41c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664c4348"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664c44d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664c4658"/>
        <function-ref name="get" scoped="" ref="0x2b86664c47e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664c4968"/>
        <function-ref name="set" scoped="" ref="0x2b86664c4af0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664c4c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b86664d52a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b86664d52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d55f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d5780"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d5908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d5a90"/>
        <function-ref name="get" scoped="" ref="0x2b86664d5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d5da0"/>
        <function-ref name="set" scoped="" ref="0x2b86664d4020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664d2740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664d2740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d2a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d2c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d2da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d1020"/>
        <function-ref name="get" scoped="" ref="0x2b86664d11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d1330"/>
        <function-ref name="set" scoped="" ref="0x2b86664d14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664d7020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d7808"/>
        <function-ref name="get" scoped="" ref="0x2b86664d7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d7b18"/>
        <function-ref name="set" scoped="" ref="0x2b86664d7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b86664d4430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b86664d4430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d4780"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d4908"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d4a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d4c18"/>
        <function-ref name="get" scoped="" ref="0x2b86664d4da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d3020"/>
        <function-ref name="set" scoped="" ref="0x2b86664d31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664d18c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664d18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d1c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d1da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d0020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d01a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664d0330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d04b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664d0640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c023e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c023e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c02730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c028b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c02a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c02bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667c02d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c01020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c01330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bff480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bff958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667bffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667bffc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667bffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bfe020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bfe1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bfe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bfc480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bfc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bfc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bfc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667bfcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667bfcc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667bfcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bfb020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bfb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bfb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bf9480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bf9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bf97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bf9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667bf9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667bf9c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667bf9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bf8020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bf81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bf8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bf6480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bf6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bf67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bf6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667bf6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667bf6c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667bf6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bf4020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bf41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bf4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bf2480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bf2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bf27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bf2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667bf2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667bf2c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667bf2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bf1020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bf11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bf1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bef480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bef480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bef7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bef958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667befae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667befc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667befdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667bee020"/>
        <function-ref name="set" scoped="" ref="0x2b8667bee1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667bee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667bec480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667bec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667bec7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667bec958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667becae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667becc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667becdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667beb020"/>
        <function-ref name="set" scoped="" ref="0x2b8667beb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667beb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b86664dcbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b86664dcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664db020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664db1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664db330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664db4b8"/>
        <function-ref name="get" scoped="" ref="0x2b86664db640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664db7c8"/>
        <function-ref name="set" scoped="" ref="0x2b86664db950"/>
        <function-ref name="clr" scoped="" ref="0x2b86664dbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b86664d8020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b86664d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d8808"/>
        <function-ref name="get" scoped="" ref="0x2b86664d8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d8b18"/>
        <function-ref name="set" scoped="" ref="0x2b86664d8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664de930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664de930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664dec80"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664dee08"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664dd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664dd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664dd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664dd640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b86664dbd60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b86664dbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664da0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664da260"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664da3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664da570"/>
        <function-ref name="get" scoped="" ref="0x2b86664da6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664da880"/>
        <function-ref name="set" scoped="" ref="0x2b86664daa08"/>
        <function-ref name="clr" scoped="" ref="0x2b86664dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664eb120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664eb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664eb470"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664eb5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664eb780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664eb908"/>
        <function-ref name="get" scoped="" ref="0x2b86664eba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ebc18"/>
        <function-ref name="set" scoped="" ref="0x2b86664ebda0"/>
        <function-ref name="clr" scoped="" ref="0x2b86664ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664dda50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664ddda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664dc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664dc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664dc330"/>
        <function-ref name="get" scoped="" ref="0x2b86664dc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664dc640"/>
        <function-ref name="set" scoped="" ref="0x2b86664dc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664dc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b86664dae18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b86664dae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664d91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664d9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664d94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664d9640"/>
        <function-ref name="get" scoped="" ref="0x2b86664d97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664d9950"/>
        <function-ref name="set" scoped="" ref="0x2b86664d9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664d9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664ea2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664ea2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664ea5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664ea780"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664ea908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664eaa90"/>
        <function-ref name="get" scoped="" ref="0x2b86664eac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664eada0"/>
        <function-ref name="set" scoped="" ref="0x2b86664e9020"/>
        <function-ref name="clr" scoped="" ref="0x2b86664e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c803e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c803e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c80730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c808b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c80a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c80bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667c80d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c7f020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c7f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c7f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c7d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c7d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c7d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c7d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c7dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c7dc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c7ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c7c020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c7c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c7a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c7a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c7a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c7a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c7aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c7ac68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c7adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c79020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c791a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c79330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c77480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c77480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c777d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c77958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c77ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c77c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c77df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c76020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c74480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c747d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c74958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c74ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c74c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c74df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c72020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c721a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c72330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c70480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c70480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c707d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c70958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c70ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c70c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c70df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c6f020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c6f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c6d480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c6d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c6d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c6d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c6dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c6dc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c6ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c6c020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c6a480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c6a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c6a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c6a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c6aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c6ac68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c6adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c69020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c69330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b86664f5740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b86664f5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664f5a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664f5c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664f5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664f4020"/>
        <function-ref name="get" scoped="" ref="0x2b86664f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664f4330"/>
        <function-ref name="set" scoped="" ref="0x2b86664f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b86664f2bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b86664f2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664f0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664f01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664f0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664f04b8"/>
        <function-ref name="get" scoped="" ref="0x2b86664f0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664f07c8"/>
        <function-ref name="set" scoped="" ref="0x2b86664f0950"/>
        <function-ref name="clr" scoped="" ref="0x2b86664f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b86664e3500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b86664e3500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664e3850"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664e39d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664e3b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664e3ce8"/>
        <function-ref name="get" scoped="" ref="0x2b86664e3e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664e2020"/>
        <function-ref name="set" scoped="" ref="0x2b86664e21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664e2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b86664f48c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b86664f48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664f4c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664f4da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664f3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664f31a8"/>
        <function-ref name="get" scoped="" ref="0x2b86664f3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664f34b8"/>
        <function-ref name="set" scoped="" ref="0x2b86664f3640"/>
        <function-ref name="clr" scoped="" ref="0x2b86664f37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b86664f0d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b86664f0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664ef0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664ef260"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664ef3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664ef570"/>
        <function-ref name="get" scoped="" ref="0x2b86664ef6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ef880"/>
        <function-ref name="set" scoped="" ref="0x2b86664efa08"/>
        <function-ref name="clr" scoped="" ref="0x2b86664efb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b86664e25b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b86664e25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664e2908"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664e2a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664e2c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664e2da0"/>
        <function-ref name="get" scoped="" ref="0x2b86664f5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664f51a8"/>
        <function-ref name="set" scoped="" ref="0x2b86664f5330"/>
        <function-ref name="clr" scoped="" ref="0x2b86664f54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b86664f3a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b86664f3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664f3da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664f2020"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664f21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664f2330"/>
        <function-ref name="get" scoped="" ref="0x2b86664f24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664f2640"/>
        <function-ref name="set" scoped="" ref="0x2b86664f27c8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664f2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b86664efe18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b86664efe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664ee1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664ee330"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664ee4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664ee640"/>
        <function-ref name="get" scoped="" ref="0x2b86664ee7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86664ee950"/>
        <function-ref name="set" scoped="" ref="0x2b86664eead8"/>
        <function-ref name="clr" scoped="" ref="0x2b86664eec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c8c3e0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c8c3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c8c730"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c8c8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c8ca40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c8cbc8"/>
        <function-ref name="get" scoped="" ref="0x2b8667c8cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c8b020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c8b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c8b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c89480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c89480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c897d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c89958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c89ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c89c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c89df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c88020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c86480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c86480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c867d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c86958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c86ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c86c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c86df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667c85020"/>
        <function-ref name="set" scoped="" ref="0x2b8667c851a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667c85330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667c83480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667c83480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667c837d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667c83958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667c83ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667c83c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667c83df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667cf6020"/>
        <function-ref name="set" scoped="" ref="0x2b8667cf61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667cf6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667cf4480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667cf4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667cf47d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667cf4958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667cf4ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667cf4c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667cf4df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667cf3020"/>
        <function-ref name="set" scoped="" ref="0x2b8667cf31a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667cf3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667cf1480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667cf1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667cf17d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667cf1958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667cf1ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667cf1c68"/>
        <function-ref name="get" scoped="" ref="0x2b8667cf1df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667cef020"/>
        <function-ref name="set" scoped="" ref="0x2b8667cef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667cef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667ced480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667ced480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667ced7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667ced958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667cedae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667cedc68"/>
        <function-ref name="get" scoped="" ref="0x2b8667ceddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667cec020"/>
        <function-ref name="set" scoped="" ref="0x2b8667cec1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667cec330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8667cea480" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8667cea480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667cea7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667cea958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667ceaae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667ceac68"/>
        <function-ref name="get" scoped="" ref="0x2b8667ceadf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667ce9020"/>
        <function-ref name="set" scoped="" ref="0x2b8667ce91a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667ce9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b86664fd3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b86664fd3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86664fd730"/>
        <function-ref name="isInput" scoped="" ref="0x2b86664fd8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86664fda40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86664fdbc8"/>
        <function-ref name="get" scoped="" ref="0x2b86664fdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666512020"/>
        <function-ref name="set" scoped="" ref="0x2b86665121a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666512330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b866650ec38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b866650ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866650d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b866650d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866650d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866650d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b866650d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866650d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b866650d950"/>
        <function-ref name="clr" scoped="" ref="0x2b866650dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b866651f3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b866651f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866651f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b866651f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866651fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866651fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b866651fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866651e020"/>
        <function-ref name="set" scoped="" ref="0x2b866651e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b866651e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b866651ac38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b866651ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666519020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665191a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666519330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86665194b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666519640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665197c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666519950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666519ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b866652a3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b866652a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866652a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b866652a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b866652aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866652abc8"/>
        <function-ref name="get" scoped="" ref="0x2b866652ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666529020"/>
        <function-ref name="set" scoped="" ref="0x2b86665291a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666529330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666526c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666526c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666525020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665251a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666525330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86665254b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666525640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665257c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666525950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666525ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666536480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666536480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86665367d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666536958"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666536ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666536c68"/>
        <function-ref name="get" scoped="" ref="0x2b8666536df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666535020"/>
        <function-ref name="set" scoped="" ref="0x2b86665351a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666535330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666532c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666532c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666530020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665301a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666530330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86665304b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666530640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665307c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666530950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666530ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666542520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666542520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666542870"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665429f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666542b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666542d08"/>
        <function-ref name="get" scoped="" ref="0x2b8666541020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665411a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666541330"/>
        <function-ref name="clr" scoped="" ref="0x2b86665414b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b866653dcd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b866653dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866653c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b866653c228"/>
        <function-ref name="toggle" scoped="" ref="0x2b866653c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866653c538"/>
        <function-ref name="get" scoped="" ref="0x2b866653c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866653c848"/>
        <function-ref name="set" scoped="" ref="0x2b866653c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b866653cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b86665383e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b86665383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666538730"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665388b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666538a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666538bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8666538d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866654c020"/>
        <function-ref name="set" scoped="" ref="0x2b866654c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b866654c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666549c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666549c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666548020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665481a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666548330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86665484b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666548640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665487c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666548950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666548ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b86665433e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b86665433e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666543730"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665438b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666543a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666543bc8"/>
        <function-ref name="get" scoped="" ref="0x2b8666543d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666558020"/>
        <function-ref name="set" scoped="" ref="0x2b86665581a8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666558330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b8666555c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b8666555c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666554020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86665541a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666554330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86665544b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666554640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86665547c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666554950"/>
        <function-ref name="clr" scoped="" ref="0x2b8666554ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b866658a4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b866658a4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866658a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b866658aae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b866658aae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b866658ae30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8666588020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b86665881a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8666588330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b86665884b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b86665b2418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b86665b2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86665b2768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b86663f9c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b86663f9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b86665b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b86665b3ce0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b86665b3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86665b20a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b86665b3308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b86665b3308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86665b3658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b86665b37e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b86665b3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b86662251c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b86662251c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666225518"/>
        <function-ref name="runTask" scoped="" ref="0x2b86662256a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b866624c5c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b866624c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866624c918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b866624caa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b866624cc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b86662f6c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b86662f6c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666303020"/>
        <function-ref name="runTask" scoped="" ref="0x2b86663031a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b8666300168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b8666300168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b86663004b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b86662f7d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b86662f7d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86662f6170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b86662f62f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b86662f6480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b866631b988" loc="88:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b866631b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b866631bcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b866624be30" loc="84:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b866624be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b866631f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b866631c3c8" loc="85:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b866631c3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b866631c718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b86665ee6b8" loc="64:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b86665ee6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b86665eea08"/>
        <function-ref name="setRoot" scoped="" ref="0x2b86665eeb90"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b86665eed18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x2b8666602bc0" loc="69:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666602bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b86665f5020"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b86665f51a8"/>
        <function-ref name="setType" scoped="" ref="0x2b86665f5330"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b86665f54b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b86665f5640"/>
        <function-ref name="getType" scoped="" ref="0x2b86665f57c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b86665c2360" loc="59:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b86665c2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b86665c26b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b86665ed020" loc="66:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b86665ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86665ed370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86665ed4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86665ed680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86665ed808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86665ed990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b866662c238" loc="80:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b866662c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866662cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoDebugReporting" ref="0x2b8666630a38" loc="87:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDebugReporting" scoped="" ref="0x2b8666630a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666630d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b86665f02c0" loc="63:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b86665f02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b86665f0610"/>
        <function-ref name="stopDone" scoped="" ref="0x2b86665f0798"/>
        <function-ref name="start" scoped="" ref="0x2b86665f0920"/>
        <function-ref name="stop" scoped="" ref="0x2b86665f0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b86665ea1c8" loc="67:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86665ea1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86665ea518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86665ea6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86665ea828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b866662e5c0" loc="77:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b866662e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b866662e910"/>
        <function-ref name="rand32" scoped="" ref="0x2b866662ea98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b8666607a78" loc="68:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b8666607a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666607dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoStatsReporting" ref="0x2b8666630340" loc="84:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoStatsReporting" scoped="" ref="0x2b8666630340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666630690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666609080" loc="72:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666609080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b86666093d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666609558"/>
        <function-ref name="led1On" scoped="" ref="0x2b86666096e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666609868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b86666099f0"/>
        <function-ref name="get" scoped="" ref="0x2b8666609b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666609d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b86666014b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666601020"/>
        <function-ref name="led0On" scoped="" ref="0x2b86666011a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666601330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BootTimer" ref="0x2b86665e3020" loc="61:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BootTimer" scoped="" ref="0x2b86665e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86665df2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b86665e2978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86665e16c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86665e1278"/>
        <function-ref name="getdt" scoped="" ref="0x2b86665dfb58"/>
        <function-ref name="gett0" scoped="" ref="0x2b86665df708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86665e2dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86665e3b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86665e1c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86665e2088"/>
        <function-ref name="stop" scoped="" ref="0x2b86665e2528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingControl" ref="0x2b86665ec8c8" loc="65:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b86665ec8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b86665ecc18"/>
        <function-ref name="stop" scoped="" ref="0x2b86665ecda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForecastValue" ref="0x2b86666185a0" loc="75:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForecastValue" scoped="" ref="0x2b86666185a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b866661bd00"/>
        <function-ref name="get" scoped="" ref="0x2b866661b3a8"/>
        <function-ref name="set" scoped="" ref="0x2b866661b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b86665cfd50" loc="60:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86665cfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86665e4088"/>
        <function-ref name="fired" scoped="" ref="0x2b86665d86c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86665ce470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86665ce020"/>
        <function-ref name="getdt" scoped="" ref="0x2b86665e4928"/>
        <function-ref name="gett0" scoped="" ref="0x2b86665e44d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86665d8b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86665c18f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86665cea40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86665c1d90"/>
        <function-ref name="stop" scoped="" ref="0x2b86665d8278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoConfig" ref="0x2b866661ed68" loc="74:periodicSenderP.nc">
      <component-ref qname="periodicSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b866661ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b86666100f0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b8666610278"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b8666610400"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b8666610588"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b8666610710"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b8666610898"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b8666610a20"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b8666610ba8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b8666610d30"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b866660f020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b866660f1a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b866660f330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b866660f4b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b866660f740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b866660f8c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b866660fa50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b866660fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8666654a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="periodicSenderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666654a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8666825d60"/>
        <function-ref name="fired" scoped="" ref="0x2b8666826470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86668251c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8666826d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b8666823648"/>
        <function-ref name="gett0" scoped="" ref="0x2b86668231f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86668268c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8666827620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8666825790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8666827ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b8666826020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b866664b1c8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b866664b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86666625f0"/>
        <function-ref name="fired" scoped="" ref="0x2b8666664af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86666638c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8666663470"/>
        <function-ref name="getdt" scoped="" ref="0x2b8666660020"/>
        <function-ref name="gett0" scoped="" ref="0x2b8666662a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8666663020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b866664bd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8666662020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8666664200"/>
        <function-ref name="stop" scoped="" ref="0x2b86666646a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b866665db18" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b866665db18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8666659d98"/>
        <function-ref name="fired" scoped="" ref="0x2b866665a4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86666591f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b866665ad78"/>
        <function-ref name="getdt" scoped="" ref="0x2b8666658688"/>
        <function-ref name="gett0" scoped="" ref="0x2b8666658238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866665a928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b866665c6f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86666597c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b866665cb90"/>
        <function-ref name="stop" scoped="" ref="0x2b866665a088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8666658c48" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8666658c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666670820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666660dd0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666660dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866665d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b866668c570" loc="31:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b866668c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8666673130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b8666679150" loc="30:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b8666679150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666678020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666678930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b86666784a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666678db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b866666c348" loc="28:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b866666c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866666c698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b866666a020" loc="29:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b866666a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866667c690"/>
        <function-ref name="fired" scoped="" ref="0x2b866667d6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b866667c088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866667db80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b866667cb18"/>
        <function-ref name="start" scoped="" ref="0x2b866666ad70"/>
        <function-ref name="stop" scoped="" ref="0x2b866667d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b8666776168" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b8666776168"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8666776ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b866677c020" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b866677c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866677a690"/>
        <function-ref name="fired" scoped="" ref="0x2b866677b6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b866677a088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866677bb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b866677ab18"/>
        <function-ref name="start" scoped="" ref="0x2b866677cd70"/>
        <function-ref name="stop" scoped="" ref="0x2b866677b270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b866677d7d8" loc="60:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b866677d7d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b866622a388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b866622a388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866677db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8666778128" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666778128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666778e78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b86667777b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666777330"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666777c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b8667d742a0" loc="68:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667d742a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8667d745f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8667d74778"/>
        <function-ref name="getControlA" scoped="" ref="0x2b8667d74900"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8667d74a88"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8667d74c10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8667d74d98"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8667d73020"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8667d731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b8667d7a168" loc="64:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b8667d7a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667d7ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8667d82dc8" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8667d82dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667d7e628"/>
        <function-ref name="fired" scoped="" ref="0x2b8667d80580"/>
        <function-ref name="startAt" scoped="" ref="0x2b8667d7e020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8667d80a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8667d7eab0"/>
        <function-ref name="start" scoped="" ref="0x2b8667d81be8"/>
        <function-ref name="stop" scoped="" ref="0x2b8667d800f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8667d82620" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8667d82620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667d82970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8667d7d128" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8667d7d128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667d7de78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8667d7c7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8667d7c330"/>
        <function-ref name="overflow" scoped="" ref="0x2b8667d7cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b8667d6f688" loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b8667d6f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b8667d6f9d8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b8667d6fb60"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b8667d6fce8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b8667d6fe70"/>
        <function-ref name="countBusy" scoped="" ref="0x2b8667d6e020"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b8667d6e1a8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8667d6e330"/>
        <function-ref name="setAssr" scoped="" ref="0x2b8667d6e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b8667d73538" loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8667d73538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8667d71db8"/>
        <function-ref name="fired" scoped="" ref="0x2b8667d72a58"/>
        <function-ref name="get" scoped="" ref="0x2b8667d720f8"/>
        <function-ref name="reset" scoped="" ref="0x2b8667d71020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8667d6f270"/>
        <function-ref name="set" scoped="" ref="0x2b8667d72580"/>
        <function-ref name="start" scoped="" ref="0x2b8667d714a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8667d71930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8667d792f0" loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8667d792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8667d764a8"/>
        <function-ref name="test" scoped="" ref="0x2b8667d77a40"/>
        <function-ref name="get" scoped="" ref="0x2b8667d79e70"/>
        <function-ref name="setScale" scoped="" ref="0x2b8667d76930"/>
        <function-ref name="getScale" scoped="" ref="0x2b8667d76e08"/>
        <function-ref name="reset" scoped="" ref="0x2b8667d78c80"/>
        <function-ref name="overflow" scoped="" ref="0x2b8667d787f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8667d76020"/>
        <function-ref name="set" scoped="" ref="0x2b8667d78320"/>
        <function-ref name="start" scoped="" ref="0x2b8667d77130"/>
        <function-ref name="stop" scoped="" ref="0x2b8667d775b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8666718828" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666718828"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8666718b78"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8666718d00"/>
        <function-ref name="getControlA" scoped="" ref="0x2b8666716020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b86667161a8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8666716330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b86667164b8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8666716640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b86667167c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b8666713e70" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b8666713e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b86667121e8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b8666712370"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b86667124f8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b8666712680"/>
        <function-ref name="countBusy" scoped="" ref="0x2b8666712808"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b8666712990"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8666712b18"/>
        <function-ref name="setAssr" scoped="" ref="0x2b8666712ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8666716c90" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8666716c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b86667134a8"/>
        <function-ref name="fired" scoped="" ref="0x2b8666714238"/>
        <function-ref name="get" scoped="" ref="0x2b8666715858"/>
        <function-ref name="reset" scoped="" ref="0x2b86667146c0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666713930"/>
        <function-ref name="set" scoped="" ref="0x2b8666715ce0"/>
        <function-ref name="start" scoped="" ref="0x2b8666714b48"/>
        <function-ref name="stop" scoped="" ref="0x2b8666713020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8666701810" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666701810"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666719930"/>
        <function-ref name="test" scoped="" ref="0x2b8666719020"/>
        <function-ref name="get" scoped="" ref="0x2b86666fe3c8"/>
        <function-ref name="setScale" scoped="" ref="0x2b8666719db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b86667182f0"/>
        <function-ref name="reset" scoped="" ref="0x2b866671a1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b86666fed28"/>
        <function-ref name="isOn" scoped="" ref="0x2b86667194a8"/>
        <function-ref name="set" scoped="" ref="0x2b86666fe850"/>
        <function-ref name="start" scoped="" ref="0x2b866671a680"/>
        <function-ref name="stop" scoped="" ref="0x2b866671ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8666726160" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666726160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b86667264b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8666726638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b86667267c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8666726948"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8666726ad0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8666726c58"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8666726de0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8666725020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b86667216f0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b86667216f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b8666721a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b8666721df0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b8666721df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b8666720170"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b86667202f8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b8666720480"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b8666720608"/>
        <function-ref name="countBusy" scoped="" ref="0x2b8666720790"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b8666720918"/>
        <function-ref name="getAssr" scoped="" ref="0x2b8666720aa0"/>
        <function-ref name="setAssr" scoped="" ref="0x2b8666720c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b86667254e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b86667254e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8666723db8"/>
        <function-ref name="fired" scoped="" ref="0x2b8666724a20"/>
        <function-ref name="get" scoped="" ref="0x2b86667240c0"/>
        <function-ref name="reset" scoped="" ref="0x2b8666723020"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666721270"/>
        <function-ref name="set" scoped="" ref="0x2b8666724548"/>
        <function-ref name="start" scoped="" ref="0x2b86667234a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666723930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b866670d180" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b866670d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666728270"/>
        <function-ref name="test" scoped="" ref="0x2b8666729930"/>
        <function-ref name="get" scoped="" ref="0x2b866670dd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b86667286f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b8666728bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b866670cb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b866670c6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666729db8"/>
        <function-ref name="set" scoped="" ref="0x2b866670c1f8"/>
        <function-ref name="start" scoped="" ref="0x2b8666729020"/>
        <function-ref name="stop" scoped="" ref="0x2b86667294a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b86667a5cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b86667a5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86667c40a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b86667c4228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b86667a9c70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b86667a9c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86667a5410"/>
        <function-ref name="fired" scoped="" ref="0x2b86667a64a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b86667a6db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86667a6930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b86667a5898"/>
        <function-ref name="start" scoped="" ref="0x2b86667a89f0"/>
        <function-ref name="stop" scoped="" ref="0x2b86667a6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b86667aeab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86667aeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86667aad60"/>
        <function-ref name="fired" scoped="" ref="0x2b86667ac470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86667aa1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86667acd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b86667a9648"/>
        <function-ref name="gett0" scoped="" ref="0x2b86667a91f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86667ac8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86667ad620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86667aa790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86667adac0"/>
        <function-ref name="stop" scoped="" ref="0x2b86667ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b86667f8930" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b86667f8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86667f8c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b86667f8e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b86667fd858" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b86667fd858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86667f9bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b86667fa1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86667f9020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86667faa60"/>
        <function-ref name="getdt" scoped="" ref="0x2b86667f84d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b86667f8088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86667fa610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86667fc3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86667f95f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86667fc878"/>
        <function-ref name="stop" scoped="" ref="0x2b86667fcd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b86668035e0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86668035e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86667ff988"/>
        <function-ref name="fired" scoped="" ref="0x2b8666800020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8666800d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8666800900"/>
        <function-ref name="getdt" scoped="" ref="0x2b86667fd2d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b86667ffdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8666800490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8666802198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86667ff398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8666802658"/>
        <function-ref name="stop" scoped="" ref="0x2b8666802b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8666816128" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8666816128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666816ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b866680d330" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b866680d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866680b0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b866680b9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b866680b548"/>
        <function-ref name="overflow" scoped="" ref="0x2b866680be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8666821020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="periodicSenderC.BootTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666821020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866681d2b8"/>
        <function-ref name="fired" scoped="" ref="0x2b8666820978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b866681f6c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b866681f278"/>
        <function-ref name="getdt" scoped="" ref="0x2b866681db58"/>
        <function-ref name="gett0" scoped="" ref="0x2b866681d708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8666820dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8666821b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b866681fc98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8666820088"/>
        <function-ref name="stop" scoped="" ref="0x2b8666820528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8666ca1398" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8666ca1398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666ca16e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666ca1870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666ca19f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666ca1b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666ca1d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666ca0020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666ca0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666ca0370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666ca04f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666ca0680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666ca0808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666ca0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8666ca0bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8666ca0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666c9f020"/>
        <function-ref name="source" scoped="" ref="0x2b8666c9f1a8"/>
        <function-ref name="address" scoped="" ref="0x2b8666c9f330"/>
        <function-ref name="destination" scoped="" ref="0x2b8666c9f4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666c9f640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666c9f7c8"/>
        <function-ref name="type" scoped="" ref="0x2b8666c9f950"/>
        <function-ref name="setType" scoped="" ref="0x2b8666c9fad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666c9fc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666c9fde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666c9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b8666c9e2a8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b8666c9e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b8666c9e5f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b8666c9e780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b8666c9e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8667e00188" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8667e00188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667e004d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667e00660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667e007e8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667e00970"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667e00af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b8667e00da0" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8667e00da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667dfe170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667dfe2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667dfe480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667dfe608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667dfe790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8667dfe9d8" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8667dfe9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8667dfed28"/>
        <function-ref name="source" scoped="" ref="0x2b8667dfd020"/>
        <function-ref name="address" scoped="" ref="0x2b8667dfd1a8"/>
        <function-ref name="destination" scoped="" ref="0x2b8667dfd330"/>
        <function-ref name="setSource" scoped="" ref="0x2b8667dfd4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667dfd640"/>
        <function-ref name="type" scoped="" ref="0x2b8667dfd7c8"/>
        <function-ref name="setType" scoped="" ref="0x2b8667dfd950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8667dfdad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8667dfdc60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8667dfdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b866685c5d8" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b866685c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866685c928"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866685cab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866685cc38"/>
        <function-ref name="cancel" scoped="" ref="0x2b866685cdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866685b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b86668c46f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b86668c46f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86668c4a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86668c4bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86668c4d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b86668c3020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86668c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b86668a2920" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86668a2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86668a2c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86668a2e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86668c4020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86668c41a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86668c4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b86668c2a10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b86668c2a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86668c2d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86668c1020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86668c11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86668c1330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86668c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b86668c1780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b86668c1780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86668c1ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b86668c1c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b86668c0020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b86668c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86668c0370"/>
        <function-ref name="runTask" scoped="" ref="0x2b86668c04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b86668c33f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b86668c33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86668c3740"/>
        <function-ref name="source" scoped="" ref="0x2b86668c38c8"/>
        <function-ref name="address" scoped="" ref="0x2b86668c3a50"/>
        <function-ref name="destination" scoped="" ref="0x2b86668c3bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b86668c3d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b86668c2020"/>
        <function-ref name="type" scoped="" ref="0x2b86668c21a8"/>
        <function-ref name="setType" scoped="" ref="0x2b86668c2330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86668c24b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86668c2640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b86668c27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b86668bc180" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b86668bc180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b86668bc4d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b86668bc658"/>
        <function-ref name="start" scoped="" ref="0x2b86668bc7e0"/>
        <function-ref name="stop" scoped="" ref="0x2b86668bc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b86668bb1c8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b86668bb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86668bb518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86668bb6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86668bb828"/>
        <function-ref name="cancel" scoped="" ref="0x2b86668bb9b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86668bbb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b86668ba8d8" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b86668ba8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86668bac28"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86668badb0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86668b9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86668b91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86668b9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86668ba300" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86668ba300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86668ba650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b86668b6608" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b86668b6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b86668b6958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b86668b6ae0"/>
        <function-ref name="led1On" scoped="" ref="0x2b86668b6c68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b86668b6df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b86668b5020"/>
        <function-ref name="get" scoped="" ref="0x2b86668b51a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b86668b5330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b86668b5950"/>
        <function-ref name="set" scoped="" ref="0x2b86668b54b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b86668b5640"/>
        <function-ref name="led2On" scoped="" ref="0x2b86668b57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b86668b7c78" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b86668b7c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b86668b6020"/>
        <function-ref name="noAck" scoped="" ref="0x2b86668b61a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b86668b6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b86668b95d0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b86668b95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86668b9920"/>
        <function-ref name="source" scoped="" ref="0x2b86668b9aa8"/>
        <function-ref name="address" scoped="" ref="0x2b86668b9c30"/>
        <function-ref name="destination" scoped="" ref="0x2b86668b9db8"/>
        <function-ref name="setSource" scoped="" ref="0x2b86668b7020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b86668b71a8"/>
        <function-ref name="type" scoped="" ref="0x2b86668b7330"/>
        <function-ref name="setType" scoped="" ref="0x2b86668b74b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86668b7640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86668b77c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b86668b7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8666915bb0" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8666915bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666914020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86669141a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666914330"/>
        <function-ref name="cancel" scoped="" ref="0x2b86669144b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666914640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86669148c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86669148c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666914c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b86668d6b60" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b86668d6b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666918020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86669181a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666918330"/>
        <function-ref name="cancel" scoped="" ref="0x2b86669184b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666918640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666916578" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666916578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86669168c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666916a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666916bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666916d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666915020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86669189a8" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86669189a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666918d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b8666915268" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b8666915268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b86669155b8"/>
        <function-ref name="noAck" scoped="" ref="0x2b8666915740"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b86669158c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8666917020" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8666917020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666917370"/>
        <function-ref name="source" scoped="" ref="0x2b86669174f8"/>
        <function-ref name="address" scoped="" ref="0x2b8666917680"/>
        <function-ref name="destination" scoped="" ref="0x2b8666917808"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666917990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666917b18"/>
        <function-ref name="type" scoped="" ref="0x2b8666917ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b8666917e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666916020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86669161a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666916330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b866690f2e8" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b866690f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b866690f638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b866690f7c0"/>
        <function-ref name="start" scoped="" ref="0x2b866690f948"/>
        <function-ref name="stop" scoped="" ref="0x2b866690fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b866690ece8" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b866690ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86669330a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666933228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86669333b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666933538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86669336c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666912b98" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666912b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866690f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b866690e270" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b866690e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866690e5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b86669315a8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b86669315a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b86669318f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666931a80"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666931c08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666931d90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b866692c020"/>
        <function-ref name="get" scoped="" ref="0x2b866692c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b866692c330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b866692c950"/>
        <function-ref name="set" scoped="" ref="0x2b866692c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b866692c640"/>
        <function-ref name="led2On" scoped="" ref="0x2b866692c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b866692dba8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b866692dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8666931020"/>
        <function-ref name="offset" scoped="" ref="0x2b86669311a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8666931330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666959b90" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666959b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666958020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b86669581a8"/>
        <function-ref name="start" scoped="" ref="0x2b8666958330"/>
        <function-ref name="stop" scoped="" ref="0x2b86669584b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b86669b9830" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b86669b9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86669b9b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b86669b9d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b8666948398" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b8666948398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b86669486e8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666948870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b8666979d70" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b8666979d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86669780f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666978278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666959578" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666959578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86669598c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b866696be40" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b866696be40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b86669471c0"/>
        <function-ref name="flush" scoped="" ref="0x2b8666947348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b8666994020" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b8666994020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666994370"/>
        <function-ref name="runTask" scoped="" ref="0x2b86669944f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b8666949b38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8666949b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b8666952020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b86669521a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b8666952330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b86669524b8"/>
        <function-ref name="putData" scoped="" ref="0x2b8666952640"/>
        <function-ref name="putDone" scoped="" ref="0x2b86669527c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b8666952950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666952bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666952bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b866694e020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b866694e1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b866694e330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b866694e4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b866694e640"/>
        <function-ref name="get" scoped="" ref="0x2b866694e7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b866694e950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666948020"/>
        <function-ref name="set" scoped="" ref="0x2b866694ead8"/>
        <function-ref name="led0On" scoped="" ref="0x2b866694ec60"/>
        <function-ref name="led2On" scoped="" ref="0x2b866694ede8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b86669b6918" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b86669b6918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86669b6c68"/>
        <function-ref name="runTask" scoped="" ref="0x2b86669b6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b8666953898" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b8666953898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b8666953be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b8666953d70"/>
        <function-ref name="startSend" scoped="" ref="0x2b8666957020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b86669571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b866694fb48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b866694fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b8666956020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b86669561a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b8666956330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b8666a65100" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b8666a65100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666a65450"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666a655d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8666a69020" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8666a69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666a69390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666a69518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666a696a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666a69828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666a699b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b8666a658a0" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b8666a658a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666a65bf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666a65d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666a6a868" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666a6a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666a6abd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b8666a69db8" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b8666a69db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b86663de4b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8666a68170"/>
        <function-ref name="offset" scoped="" ref="0x2b8666a682f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8666a68480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666a67a50" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666a67a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666a67da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666a66020"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666a661a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666a66330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666a664b8"/>
        <function-ref name="get" scoped="" ref="0x2b8666a66640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666a667c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666a66de8"/>
        <function-ref name="set" scoped="" ref="0x2b8666a66ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666a66950"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666a66c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b8666a67020" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b8666a67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b8666a67370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b8666a674f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b8666a67680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b8666a67808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b8666a686c8" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b8666a686c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b8666a68a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b8666a68ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b8666a68d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b8666a7d448" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8666a7d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666a7d798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8666a7d920"/>
        <function-ref name="receive" scoped="" ref="0x2b8666a7daa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8666a7dc30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8666a7ddb8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8666a8a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666a8a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b8666a63b30" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b8666a63b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b8666a63e80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b8666a8b030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b8666a8b1b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b8666a8b340"/>
        <function-ref name="putData" scoped="" ref="0x2b8666a8b4c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b8666a8b650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b8666a8b7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666a8a420" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666a8a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666a8a770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666a8a8f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666a8aa80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666a8ac08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666a8ad90"/>
        <function-ref name="get" scoped="" ref="0x2b8666a89020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666a891a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666a897c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666a89330"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666a894b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666a89640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8666ab6290" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8666ab6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666ab65e0"/>
        <function-ref name="receive" scoped="" ref="0x2b8666ab6768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8666a900c0" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8666a900c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666a90410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8666a90598"/>
        <function-ref name="receive" scoped="" ref="0x2b8666a90720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8666a908a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8666a90a30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8666a90bb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666a90d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8666a628b0" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8666a628b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666a62c00"/>
        <function-ref name="stop" scoped="" ref="0x2b8666a62d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8666a8eaf0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8666a8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666a8ee40"/>
        <function-ref name="receive" scoped="" ref="0x2b8666ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8666ab4310" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8666ab4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666ab4660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8666ab47e8"/>
        <function-ref name="receive" scoped="" ref="0x2b8666ab4970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8666ab4af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8666ab4c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8666ab4e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8666ab3598" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666ab3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666ab23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666ab2cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666ab2830"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666ab1190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8666a8e338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8666a8e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666a8e688"/>
        <function-ref name="stop" scoped="" ref="0x2b8666a8e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b8666aafe58" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b8666aafe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666af11e8"/>
        <function-ref name="receive" scoped="" ref="0x2b8666af1370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b8666af05f8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b8666af05f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666af0948"/>
        <function-ref name="stop" scoped="" ref="0x2b8666af0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666aaf120" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666aaf120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666aaf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b8666af15f8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b8666af15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666af1948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b8666af1ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b8666af1c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b8666af1de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b8666af0020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b8666af01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666af0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b8666aeec60" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666aeec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666aed9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666aec330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666aede78"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666aec7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b8666aef5c0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b8666aef5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8666aef910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8666aefa98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8666aefc20"/>
        <function-ref name="txDone" scoped="" ref="0x2b8666aefda8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8666aee020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8666aee1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8666aee330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8666aee4b8"/>
        <function-ref name="tx" scoped="" ref="0x2b8666aee640"/>
        <function-ref name="rx" scoped="" ref="0x2b8666aee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8666aaf6f8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8666aaf6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666aafa48"/>
        <function-ref name="stop" scoped="" ref="0x2b8666aafbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b8666af0d98" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b8666af0d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666aef170"/>
        <function-ref name="stop" scoped="" ref="0x2b8666aef2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b8666afd860" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b8666afd860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8666afdbb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8666afdd38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8666afb020"/>
        <function-ref name="txDone" scoped="" ref="0x2b8666afb1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8666afb330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8666afb4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8666afb640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8666afb7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b8666afb950"/>
        <function-ref name="rx" scoped="" ref="0x2b8666afbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b8666b27020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b8666b27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8666b27370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8666b274f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8666b27680"/>
        <function-ref name="txDone" scoped="" ref="0x2b8666b27808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8666b27990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8666b27b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8666b27ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8666b27e28"/>
        <function-ref name="tx" scoped="" ref="0x2b8666b26020"/>
        <function-ref name="rx" scoped="" ref="0x2b8666b261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b8666afd020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8666afd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666afd370"/>
        <function-ref name="stop" scoped="" ref="0x2b8666afd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b8666afbe58" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8666afbe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666afa1e8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666afa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b8666afa6f0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8666afa6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666afaa40"/>
        <function-ref name="stop" scoped="" ref="0x2b8666afabc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b8666afe700" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8666afe700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666afea50"/>
        <function-ref name="stop" scoped="" ref="0x2b8666afebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b8666b23020" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b8666b23020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666b23370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b8666b228a0" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b8666b228a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8666b22bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8666b22d78"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8666b21020"/>
        <function-ref name="txDone" scoped="" ref="0x2b8666b211a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8666b21330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8666b214b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8666b21640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8666b217c8"/>
        <function-ref name="tx" scoped="" ref="0x2b8666b21950"/>
        <function-ref name="rx" scoped="" ref="0x2b8666b21ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b8666b21e30" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b8666b21e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666b201a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b8666b1f6d8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b8666b1f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b8666b1fa28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b8666b1fbb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b8666b1fd38"/>
        <function-ref name="txDone" scoped="" ref="0x2b8666b1e020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b8666b1e1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b8666b1e330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b8666b1e4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b8666b1e640"/>
        <function-ref name="tx" scoped="" ref="0x2b8666b1e7c8"/>
        <function-ref name="rx" scoped="" ref="0x2b8666b1e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b8666b22020" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b8666b22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666b22370"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b224f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b8666b20568" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b8666b20568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666b208b8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b20a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b8666b20e00" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b8666b20e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666b1f1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b1f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b8666b1ec70" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b8666b1ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b8666b1d020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b8666b1d1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b8666b1d330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b8666b1d4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b8666b1d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b8666b1d950" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b8666b1d950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b8666b1dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b8666b23730" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b8666b23730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666b23a80"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b23c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8666b76188" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666b76188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666b75020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666b75930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666b754a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666b75db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8666b70020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666b70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TThree" ref="0x2b86662fcd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666b70d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666b6f6b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666b6f230"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666b6fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8666b8c910" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666b8c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b8666b8cc60"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8666b8cde8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b8666b94020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8666b941a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8666b94330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8666b944b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8666b94640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8666b947c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b8666b94950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8666b94ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8666b8b288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8666b8b288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8666bb24a8"/>
        <function-ref name="test" scoped="" ref="0x2b8666bb3aa0"/>
        <function-ref name="get" scoped="" ref="0x2b8666b8be08"/>
        <function-ref name="captured" scoped="" ref="0x2b8666b847e8"/>
        <function-ref name="reset" scoped="" ref="0x2b8666b84cc0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666bb2020"/>
        <function-ref name="set" scoped="" ref="0x2b8666b84310"/>
        <function-ref name="start" scoped="" ref="0x2b8666bb3190"/>
        <function-ref name="stop" scoped="" ref="0x2b8666bb3618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8666bb01c8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8666bb01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8666bae930"/>
        <function-ref name="fired" scoped="" ref="0x2b8666baf6d0"/>
        <function-ref name="get" scoped="" ref="0x2b8666bb0d48"/>
        <function-ref name="reset" scoped="" ref="0x2b8666bafb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666baedb8"/>
        <function-ref name="set" scoped="" ref="0x2b8666baf1f8"/>
        <function-ref name="start" scoped="" ref="0x2b8666bae020"/>
        <function-ref name="stop" scoped="" ref="0x2b8666bae4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8666b6ec30" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666b6ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666b97db8"/>
        <function-ref name="test" scoped="" ref="0x2b8666b974a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666b9a820"/>
        <function-ref name="setScale" scoped="" ref="0x2b8666b96270"/>
        <function-ref name="getScale" scoped="" ref="0x2b8666b96748"/>
        <function-ref name="reset" scoped="" ref="0x2b8666b98658"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666b981d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666b97930"/>
        <function-ref name="set" scoped="" ref="0x2b8666b9aca8"/>
        <function-ref name="start" scoped="" ref="0x2b8666b98ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b97020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8666ba43d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8666ba43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b8666ba4720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8666ba48a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b8666ba4a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8666ba4bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8666ba4d40"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8666ba3020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8666ba31a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8666ba3330"/>
        <function-ref name="setControlC" scoped="" ref="0x2b8666ba34b8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8666ba3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b8666b9e4e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b8666b9e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8666bcbc30"/>
        <function-ref name="fired" scoped="" ref="0x2b8666b9d9e8"/>
        <function-ref name="get" scoped="" ref="0x2b8666b9d088"/>
        <function-ref name="reset" scoped="" ref="0x2b8666b9de70"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666bca0f8"/>
        <function-ref name="set" scoped="" ref="0x2b8666b9d510"/>
        <function-ref name="start" scoped="" ref="0x2b8666bcb320"/>
        <function-ref name="stop" scoped="" ref="0x2b8666bcb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8666ba3b18" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8666ba3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8666b9fdb8"/>
        <function-ref name="test" scoped="" ref="0x2b8666b9f4a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666ba2728"/>
        <function-ref name="captured" scoped="" ref="0x2b8666ba10c0"/>
        <function-ref name="reset" scoped="" ref="0x2b8666ba1598"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666b9f930"/>
        <function-ref name="set" scoped="" ref="0x2b8666ba2bb0"/>
        <function-ref name="start" scoped="" ref="0x2b8666ba1a20"/>
        <function-ref name="stop" scoped="" ref="0x2b8666b9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b8666bca770" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b8666bca770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8666bc6020"/>
        <function-ref name="fired" scoped="" ref="0x2b8666bc9d08"/>
        <function-ref name="get" scoped="" ref="0x2b8666bc93a8"/>
        <function-ref name="reset" scoped="" ref="0x2b8666bc81f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666bc64a8"/>
        <function-ref name="set" scoped="" ref="0x2b8666bc9830"/>
        <function-ref name="start" scoped="" ref="0x2b8666bc8680"/>
        <function-ref name="stop" scoped="" ref="0x2b8666bc8b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b8666bc6b20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b8666bc6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8666bc2310"/>
        <function-ref name="fired" scoped="" ref="0x2b8666bc40c0"/>
        <function-ref name="get" scoped="" ref="0x2b8666bc5728"/>
        <function-ref name="reset" scoped="" ref="0x2b8666bc4548"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666bc2798"/>
        <function-ref name="set" scoped="" ref="0x2b8666bc5bb0"/>
        <function-ref name="start" scoped="" ref="0x2b8666bc49d0"/>
        <function-ref name="stop" scoped="" ref="0x2b8666bc4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8666ba9298" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666ba9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666ba54a8"/>
        <function-ref name="test" scoped="" ref="0x2b8666ba7a40"/>
        <function-ref name="get" scoped="" ref="0x2b8666ba9e18"/>
        <function-ref name="setScale" scoped="" ref="0x2b8666ba5930"/>
        <function-ref name="getScale" scoped="" ref="0x2b8666ba5e08"/>
        <function-ref name="reset" scoped="" ref="0x2b8666ba8c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666ba87e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666ba5020"/>
        <function-ref name="set" scoped="" ref="0x2b8666ba8310"/>
        <function-ref name="start" scoped="" ref="0x2b8666ba7130"/>
        <function-ref name="stop" scoped="" ref="0x2b8666ba75b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666c41bc8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666c41bc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b866622a388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b866622a388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666c40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8666c403f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666c403f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666c31580"/>
        <function-ref name="test" scoped="" ref="0x2b8666c32c20"/>
        <function-ref name="get" scoped="" ref="0x2b8666c34020"/>
        <function-ref name="setScale" scoped="" ref="0x2b8666c31a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b8666c30020"/>
        <function-ref name="reset" scoped="" ref="0x2b8666c34e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666c34980"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666c310f8"/>
        <function-ref name="set" scoped="" ref="0x2b8666c344a8"/>
        <function-ref name="start" scoped="" ref="0x2b8666c32310"/>
        <function-ref name="stop" scoped="" ref="0x2b8666c32798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8666c45e08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666c45e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TThree" ref="0x2b86662fcd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666c2ebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666c4e548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666c4e0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666c4e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8666c4c020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666c4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8666c480f8"/>
        <function-ref name="test" scoped="" ref="0x2b8666c4a7a8"/>
        <function-ref name="get" scoped="" ref="0x2b8666c4cba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b8666c48580"/>
        <function-ref name="getScale" scoped="" ref="0x2b8666c48a58"/>
        <function-ref name="reset" scoped="" ref="0x2b8666c4b9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666c4b560"/>
        <function-ref name="isOn" scoped="" ref="0x2b8666c4ac30"/>
        <function-ref name="set" scoped="" ref="0x2b8666c4b088"/>
        <function-ref name="start" scoped="" ref="0x2b8666c4be70"/>
        <function-ref name="stop" scoped="" ref="0x2b8666c4a320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b8666c8db10" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b8666c8db10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TThree" ref="0x2b86662fcd70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666c8c8f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666c8a230"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666c8cd80"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666c8a6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8666c76878" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8666c76878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666c8e660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8666c8d020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8666c8eae8"/>
        <function-ref name="overflow" scoped="" ref="0x2b8666c8d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b8666c813e8" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b8666c813e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b8666c81738"/>
        <function-ref name="offset" scoped="" ref="0x2b8666c818c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b8666c81a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b8666c9a168" loc="43:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8666c9a168"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b8666cb19f8"/>
        <function-ref name="enqueue" scoped="" ref="0x2b8666caf2d8"/>
        <function-ref name="element" scoped="" ref="0x2b8666caf778"/>
        <function-ref name="maxSize" scoped="" ref="0x2b8666cb15a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8666cb1e48"/>
        <function-ref name="empty" scoped="" ref="0x2b8666c9acb0"/>
        <function-ref name="size" scoped="" ref="0x2b8666cb1158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8666cdcc18" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8666cdcc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b8666cdb510"/>
        <function-ref name="enqueue" scoped="" ref="0x2b8666cdbdb0"/>
        <function-ref name="element" scoped="" ref="0x2b8666cda278"/>
        <function-ref name="maxSize" scoped="" ref="0x2b8666cdb0c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8666cdb960"/>
        <function-ref name="empty" scoped="" ref="0x2b8666cde7e8"/>
        <function-ref name="size" scoped="" ref="0x2b8666cdec38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b8666cda6e0" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8666cda6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666cdaa30"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666cdabb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666cdad40"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666cd9020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666cd91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8666cd9430" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666cd9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666cd9780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666cd9908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666cd9a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666cd9c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666cd9da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b8666cd34d8" loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b8666cd34d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666cd3828"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666cd39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666caed80" loc="89:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666caed80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666cdf170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666cd8080" loc="96:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666cd8080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666cd83d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666cd8558"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666cd86e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666cd8868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666cd89f0"/>
        <function-ref name="get" scoped="" ref="0x2b8666cd8b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666cd8d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666cd74b8"/>
        <function-ref name="set" scoped="" ref="0x2b8666cd7020"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666cd71a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666cd7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b8666cdc3e0" loc="90:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b8666cdc3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b8666cdc730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8666cf3cb0" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666cf3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666cf00a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666cf0228"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666cf03b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666cf0538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666cf06c0"/>
        <function-ref name="get" scoped="" ref="0x2b8666cf0848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666cf09d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666cef020"/>
        <function-ref name="set" scoped="" ref="0x2b8666cf0b58"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666cf0ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666cf0e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b8666ceace8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b8666ceace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666ce90a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666ce9228"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666ce93b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666ce9538"/>
        <function-ref name="get" scoped="" ref="0x2b8666ce96c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666ce9848"/>
        <function-ref name="set" scoped="" ref="0x2b8666ce99d0"/>
        <function-ref name="clr" scoped="" ref="0x2b8666ce9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666ceb020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666ceb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666ceb370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b8666ce9e70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8666ce9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666ce81e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666ce8370"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666ce84f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666ce8680"/>
        <function-ref name="get" scoped="" ref="0x2b8666ce8808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666ce8990"/>
        <function-ref name="set" scoped="" ref="0x2b8666ce8b18"/>
        <function-ref name="clr" scoped="" ref="0x2b8666ce8ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b8666ceb5e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666ceb5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666ceb938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666cebac0"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666cebc48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666cebdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666cea020"/>
        <function-ref name="get" scoped="" ref="0x2b8666cea1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666cea330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666cea950"/>
        <function-ref name="set" scoped="" ref="0x2b8666cea4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666cea640"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666cea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b8666ce7020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b8666ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666ce7370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666ce74f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666ce7680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666ce7808"/>
        <function-ref name="get" scoped="" ref="0x2b8666ce7990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666ce7b18"/>
        <function-ref name="set" scoped="" ref="0x2b8666ce7ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8666ce7e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b8666cece10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b8666cece10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666d011a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666d01330"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666d014b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666d01640"/>
        <function-ref name="get" scoped="" ref="0x2b8666d017c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666d01950"/>
        <function-ref name="set" scoped="" ref="0x2b8666d01ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b8666d01c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b8666d00020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b8666d00020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666d00370"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666d004f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666d00680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666d00808"/>
        <function-ref name="get" scoped="" ref="0x2b8666d00990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666d00b18"/>
        <function-ref name="set" scoped="" ref="0x2b8666d00ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b8666d00e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b8666cfe2d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666cfe2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666cfe628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b8666cff1b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b8666cff1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8666cff500"/>
        <function-ref name="isInput" scoped="" ref="0x2b8666cff688"/>
        <function-ref name="toggle" scoped="" ref="0x2b8666cff810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8666cff998"/>
        <function-ref name="get" scoped="" ref="0x2b8666cffb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8666cffca8"/>
        <function-ref name="set" scoped="" ref="0x2b8666cffe30"/>
        <function-ref name="clr" scoped="" ref="0x2b8666cfe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b8666d2b080" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b8666d2b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b8666d2b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666d25a38" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666d25a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666d25d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b8666d24080" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b8666d24080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b8666d243d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b8666d2de28" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b8666d2de28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b8666d1c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b8666d1c538" loc="40:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b8666d1c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666d1c888"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666d1ca10"/>
        <function-ref name="start" scoped="" ref="0x2b8666d1cb98"/>
        <function-ref name="stop" scoped="" ref="0x2b8666d1cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b8666d4b108" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8666d4b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666d4bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b8666d1db60" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b8666d1db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b8666d46020"/>
        <function-ref name="setRoot" scoped="" ref="0x2b8666d461a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b8666d46330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b8666d3f020" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666d3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b8666d3f370"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b8666d3f4f8"/>
        <function-ref name="setType" scoped="" ref="0x2b8666d3f680"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b8666d3f808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b8666d3f990"/>
        <function-ref name="getType" scoped="" ref="0x2b8666d3fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b8666d3bb48" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b8666d3bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b8666d40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x2b8666d44020" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b8666d44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666d44370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666d444f8"/>
        <function-ref name="start" scoped="" ref="0x2b8666d44680"/>
        <function-ref name="stop" scoped="" ref="0x2b8666d44808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8666d431c8" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8666d431c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666d43518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d436a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d43828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8666d42bb8" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8666d42bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666d41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666d402c8" loc="65:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666d402c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666d40618"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666d407a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d40928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d40ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666d40c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666d42020" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666d42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666d42370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b8666d36878" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666d36878"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b8666d3a930"/>
        <function-ref name="init" scoped="" ref="0x2b8666d3a458"/>
        <function-ref name="creationTime" scoped="" ref="0x2b8666d3ae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoTrafficStatistics" ref="0x2b8666d33020" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b8666d33020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b8666d33370"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b8666d334f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b8666d33680"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8666d33808"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b8666d33990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingControl" ref="0x2b8666d466d0" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b8666d466d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666d46a20"/>
        <function-ref name="stop" scoped="" ref="0x2b8666d46ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b8666d39380" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b8666d39380"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b8666d396d0"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b8666d39858"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b8666d399e0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b8666d39b68"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b8666d39cf0"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b8666d39e78"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b8666d35030"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b8666d351b8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b8666d35340"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b8666d354c8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b8666d35650"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b8666d357d8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b8666d35960"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b8666d35be8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b8666d35d70"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b8666d34020"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b8666d341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b8666d5cdb0" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b8666d5cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b8666d5a170"/>
        <function-ref name="setRoot" scoped="" ref="0x2b8666d5a2f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b8666d5a480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8666d81020" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8666d81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666d81370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d814f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d81680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666d81808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666d81990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b8666d567a8" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b8666d567a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b8666d56af8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b8666d56c80"/>
        <function-ref name="setType" scoped="" ref="0x2b8666d56e08"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b8666d55020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b8666d551a8"/>
        <function-ref name="getType" scoped="" ref="0x2b8666d55330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8666d81cc8" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8666d81cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666d800a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="selfReceiveTask" ref="0x2b8666d92020" loc="108:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="selfReceiveTask" scoped="" ref="0x2b8666d92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666d92370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666d924f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatus" ref="0x2b8666d52a40" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b8666d52a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b8666d52d90"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b8666d54020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b8666d57418" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b8666d57418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b8666d57768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666d57a10" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666d57a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666d57d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666d56020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d561a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d56330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666d564b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8666d58868" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8666d58868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666d58bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8666d5acf8" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8666d5acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666d590a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d59228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d593b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b8666d6b510" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666d6b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b8666d67560"/>
        <function-ref name="init" scoped="" ref="0x2b8666d67088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b8666d67a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2b8666d78a70" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2b8666d78a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86665c8738"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b86665c8a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b8666d7e470"/>
        <function-ref name="enqueue" scoped="" ref="0x2b8666d76158"/>
        <function-ref name="element" scoped="" ref="0x2b8666d76788"/>
        <function-ref name="maxSize" scoped="" ref="0x2b8666d7e020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8666d7ead0"/>
        <function-ref name="empty" scoped="" ref="0x2b8666d7f620"/>
        <function-ref name="size" scoped="" ref="0x2b8666d7fa70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b8666d9bd40" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b8666d9bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b8666d9a0d8"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b8666d9a260"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b8666d9a3e8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b8666d9a570"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b8666d9a6f8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b8666d9a880"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b8666d9aa08"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b8666d9ab90"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b8666d9ad18"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b8666d96020"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b8666d961a8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b8666d96330"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b8666d964b8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b8666d96740"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b8666d968c8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b8666d96a50"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b8666d96bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b8666d4c240" loc="72:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b8666d4c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666d4c690"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666d4c818"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666d4c9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666d4cb28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666d4ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8666d5c020" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8666d5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8666d5c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CacheCompare" ref="0x2b8666d4fab8" loc="64:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b8666d4fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b86665ca900"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b86665cadb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b8666d53658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666d59b80" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666d59b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666d58020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b8666d95020" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8666d95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666d95ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b8666d8b368" loc="150:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b8666d8b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666d8b6b8"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666d8b840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x2b8666d6fd30" loc="78:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x2b8666d6fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
            <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666d6ecb8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b8666d6e1c0"/>
        <function-ref name="empty" scoped="" ref="0x2b8666d748b8"/>
        <function-ref name="put" scoped="" ref="0x2b8666d6e610"/>
        <function-ref name="size" scoped="" ref="0x2b8666d74d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b8666d5c620" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b8666d5c620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b8666d5c970"/>
        <function-ref name="stop" scoped="" ref="0x2b8666d5caf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b8666d9b060" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666d9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b8666d9b3b0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b8666d9b538"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b8666d9b6c0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b8666d9b848"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b8666d9b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatistics" ref="0x2b8666d50158" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatistics" scoped="" ref="0x2b8666d50158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b8666d622a8"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b8666d32e20"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666d50ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHistory" ref="0x2b8666d68958" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHistory" scoped="" ref="0x2b8666d68958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b86665ca900"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b86665cadb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b8666d6c528"/>
        <function-ref name="flush" scoped="" ref="0x2b8666d6ce68"/>
        <function-ref name="lookup" scoped="" ref="0x2b8666d6c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666e08e70" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666e08e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666e051e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666e05370"/>
        <function-ref name="start" scoped="" ref="0x2b8666e054f8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666e05680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b8666e00668" loc="58:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b8666e00668"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b8666e009b8"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b8666e00b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666e05908" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666e05908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666e05c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666e05de0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e04020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e041a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666e04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8666e045a8" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8666e045a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666e048f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e04a80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e04c08"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666e04d90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666e03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b8666e03b88" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8666e03b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b8666e02c00"/>
        <function-ref name="init" scoped="" ref="0x2b8666e02728"/>
        <function-ref name="creationTime" scoped="" ref="0x2b8666e00118"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoPathCost" ref="0x2b8666dfb360" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b8666dfb360"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b8666dfb6b0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b8666dfb838"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b8666dfb9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666e032b0" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666e032b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666e03600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStatistics" ref="0x2b8666dfebc0" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStatistics" scoped="" ref="0x2b8666dfebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b8666dfd020"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b8666dfd1a8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b8666dfd330"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8666dfd4b8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b8666dfd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b8666dfbdb0" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666dfbdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b8666dfe170"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b8666dfe2f8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b8666dfe480"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b8666dfe608"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b8666dfe790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666df3080" loc="57:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666df3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666df33d0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666df3558"/>
        <function-ref name="start" scoped="" ref="0x2b8666df36e0"/>
        <function-ref name="stop" scoped="" ref="0x2b8666df3868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b8666e1e690" loc="81:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b8666e1e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666e1e9e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666e1eb68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e1ecf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e1ee78"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666e1c030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStatus" ref="0x2b8666e1f130" loc="77:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatus" scoped="" ref="0x2b8666e1f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueStatus"/>
      </instance>
      <interface-functions>
        <function-ref name="dropped" scoped="" ref="0x2b8666e1f480"/>
        <function-ref name="acceptsRemote" scoped="" ref="0x2b8666e1f608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666df3af0" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666df3af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666df3e40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666df2020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666df21a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666df2330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666df24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b8666e20108" loc="74:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8666e20108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666e20c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b8666e19d90" loc="89:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b8666e19d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666e18170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e182f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e18480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666e18608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666e18790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b8666e135b8" loc="98:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b8666e135b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8666e13908"/>
        <function-ref name="rand32" scoped="" ref="0x2b8666e13a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8666df2730" loc="60:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8666df2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666df2a80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666df2c08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666df2d90"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666e29020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666e291a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b8666e11420" loc="102:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b8666e11420"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b8666e11770"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b8666e118f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b8666e11a80"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8666e11c08"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b8666e11d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b8666e163b0" loc="97:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b8666e163b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b8666e16700"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b8666e16888"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b8666e16a10"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b8666e16b98"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b8666e16d20"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b8666e15020"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b8666e151a8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b8666e15330"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b8666e154b8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b8666e15640"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b8666e157c8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b8666e15950"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b8666e15ad8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b8666e15d60"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b8666e13020"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b8666e131a8"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b8666e13330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x2b8666e2b020" loc="251:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x2b8666e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8666e2b370"/>
        <function-ref name="runTask" scoped="" ref="0x2b8666e2b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BackoffConfig" ref="0x2b8666e26890" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffConfig" scoped="" ref="0x2b8666e26890"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b8666e26be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b8666e272f0" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b8666e272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666e27640"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666e277c8"/>
        <function-ref name="start" scoped="" ref="0x2b8666e27950"/>
        <function-ref name="stop" scoped="" ref="0x2b8666e27ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketStatistics" ref="0x2b8666e281f0" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStatistics" scoped="" ref="0x2b8666e281f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b8666d5eb10"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b8666d5e188"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666e28d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b8666e1c380" loc="82:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2b8666e1c380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666e1c7d0"/>
        <function-ref name="source" scoped="" ref="0x2b8666e1c958"/>
        <function-ref name="address" scoped="" ref="0x2b8666e1cae0"/>
        <function-ref name="destination" scoped="" ref="0x2b8666e1cc68"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666e1cdf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666e1b020"/>
        <function-ref name="type" scoped="" ref="0x2b8666e1b1a8"/>
        <function-ref name="setType" scoped="" ref="0x2b8666e1b330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666e1b4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666e1b640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666e1b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b8666e190e8" loc="88:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b8666e190e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666e19438"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e195c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e19748"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666e198d0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666e19a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666e29438" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666e29438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666e29788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSnoop" ref="0x2b8666e1aa20" loc="87:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSnoop" scoped="" ref="0x2b8666e1aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666e1ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b8666e13d08" loc="100:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b8666e13d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b8666e120a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b8666e12228"/>
        <function-ref name="led1On" scoped="" ref="0x2b8666e123b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b8666e12538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b8666e126c0"/>
        <function-ref name="get" scoped="" ref="0x2b8666e12848"/>
        <function-ref name="led1Off" scoped="" ref="0x2b8666e129d0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b8666e11020"/>
        <function-ref name="set" scoped="" ref="0x2b8666e12b58"/>
        <function-ref name="led0On" scoped="" ref="0x2b8666e12ce0"/>
        <function-ref name="led2On" scoped="" ref="0x2b8666e12e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b8666e1f978" loc="80:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b8666e1f978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666e1fcc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666e1fe50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666e1e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666e1e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666e1e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b8666e1a380" loc="86:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b8666e1a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666e1a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b8666e1bb40" loc="85:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b8666e1bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666e1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PathCost" ref="0x2b8666e18b28" loc="92:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathCost" scoped="" ref="0x2b8666e18b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b8666e18e78"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b8666e17030"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b8666e171b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b8666e10268" loc="103:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b8666e10268"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b8666e107b8"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b8666e10940"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b8666e10ac8"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b8666e10c50"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b8666e10dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b8666e14c00" loc="93:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666e14c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8666e16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8666e25020" loc="71:../../../Orinoco/lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8666e25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8666e212b8"/>
        <function-ref name="fired" scoped="" ref="0x2b8666e24978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8666e226c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b8666e22278"/>
        <function-ref name="getdt" scoped="" ref="0x2b8666e21b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b8666e21708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8666e24dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8666e25b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8666e22c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8666e24088"/>
        <function-ref name="stop" scoped="" ref="0x2b8666e24528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666ecfe68" loc="46:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666ecfe68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666ecb1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666ecb370"/>
        <function-ref name="start" scoped="" ref="0x2b8666ecb4f8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666ecb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8666ec13a0" loc="65:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666ec13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8666ec16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b8666ec71c8" loc="51:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b8666ec71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8666ec7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8666ecbdf8" loc="48:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8666ecbdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666eca170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666eca2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666eca480"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666eca608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666eca790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8666ec9b68" loc="50:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8666ec9b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666ec8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666ec77a0" loc="53:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666ec77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666ec7af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666ec7c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666ec7e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666ec6020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666ec61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b8666ef2020" loc="67:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b8666ef2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666eea478"/>
        <function-ref name="clear" scoped="" ref="0x2b8666eeab58"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666ef2d70"/>
        <function-ref name="set" scoped="" ref="0x2b8666ee9278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b8666ee9e48" loc="68:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666ee9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666ee6300"/>
        <function-ref name="clear" scoped="" ref="0x2b8666ee69e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666ee8be8"/>
        <function-ref name="set" scoped="" ref="0x2b8666ee50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666ec9020" loc="49:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666ec9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666ec9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8666ef7dc0" loc="58:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8666ef7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b8666ec2170"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8666ec22f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b8666ec2480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8666ec2608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b8666ec2790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8666ec6448" loc="54:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8666ec6448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666ec6798"/>
        <function-ref name="source" scoped="" ref="0x2b8666ec6920"/>
        <function-ref name="address" scoped="" ref="0x2b8666ec6aa8"/>
        <function-ref name="destination" scoped="" ref="0x2b8666ec6c30"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666ec6db8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666ec3020"/>
        <function-ref name="type" scoped="" ref="0x2b8666ec31a8"/>
        <function-ref name="setType" scoped="" ref="0x2b8666ec3330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666ec34b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666ec3640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666ec37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b8666ef3878" loc="59:../../../Orinoco/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b8666ef3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b8666ef3bc8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8666ef3d50"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8666ec1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666ee22c0" loc="46:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666ee22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666ee2610"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666ee2798"/>
        <function-ref name="start" scoped="" ref="0x2b8666ee2920"/>
        <function-ref name="stop" scoped="" ref="0x2b8666ee2aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b8666f0c818" loc="67:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b8666f0c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f0bde8"/>
        <function-ref name="get" scoped="" ref="0x2b8666f0b8d8"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f0b3c8"/>
        <function-ref name="set" scoped="" ref="0x2b8666f09328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b8666edeb28" loc="51:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b8666edeb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8666edee78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8666edd190" loc="57:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8666edd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666edd4e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666edd668"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666edd7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666edd978"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666eddb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8666ee1270" loc="48:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8666ee1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666ee15c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666ee1748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666ee18d0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666ee1a58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666ee1be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8666ede020" loc="50:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8666ede020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666ede370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b8666f0f480" loc="66:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8666f0f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f0eaa8"/>
        <function-ref name="get" scoped="" ref="0x2b8666f0e598"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f0e088"/>
        <function-ref name="set" scoped="" ref="0x2b8666f0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666edf3c8" loc="49:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666edf3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666edf718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b8666f076b0" loc="71:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f076b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666f06c58"/>
        <function-ref name="clear" scoped="" ref="0x2b8666f04380"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666f06578"/>
        <function-ref name="set" scoped="" ref="0x2b8666f04a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b8666f082d8" loc="70:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8666f082d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666f08e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b8666f16110" loc="65:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8666f16110"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f156e0"/>
        <function-ref name="get" scoped="" ref="0x2b8666f151d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f16c90"/>
        <function-ref name="set" scoped="" ref="0x2b8666f15bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8666f18498" loc="62:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8666f18498"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b8666f187e8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8666f18970"/>
        <function-ref name="getRetries" scoped="" ref="0x2b8666f18af8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8666f18c80"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b8666f18e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8666eddda0" loc="58:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8666eddda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666edc170"/>
        <function-ref name="source" scoped="" ref="0x2b8666edc2f8"/>
        <function-ref name="address" scoped="" ref="0x2b8666edc480"/>
        <function-ref name="destination" scoped="" ref="0x2b8666edc608"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666edc790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666edc918"/>
        <function-ref name="type" scoped="" ref="0x2b8666edcaa0"/>
        <function-ref name="setType" scoped="" ref="0x2b8666edcc28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666edcdb0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666f18020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666f181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b8666f17140" loc="63:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f17140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b8666f17490"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8666f17618"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8666f177a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8666f09970" loc="68:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f09970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8666f09dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b8666f03670" loc="72:../../../Orinoco/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f03670"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666f02ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b8666f001f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666f023f0"/>
        <function-ref name="set" scoped="" ref="0x2b8666f008d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8666eff9e0" loc="42:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8666eff9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8666effd30"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8666efc020"/>
        <function-ref name="start" scoped="" ref="0x2b8666efc1a8"/>
        <function-ref name="stop" scoped="" ref="0x2b8666efc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b8666f4cd28" loc="81:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b8666f4cd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f49388"/>
        <function-ref name="get" scoped="" ref="0x2b8666f4ae00"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f4a8f0"/>
        <function-ref name="set" scoped="" ref="0x2b8666f49898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b8666f31710" loc="61:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b8666f31710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8666f31a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b8666f294b8" loc="63:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b8666f294b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8666f29908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8666f29a90"/>
        <function-ref name="request" scoped="" ref="0x2b8666f29c18"/>
        <function-ref name="granted" scoped="" ref="0x2b8666f29da0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8666f28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b8666f36348" loc="48:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b8666f36348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8666f36698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8666efcaa8" loc="45:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8666efcaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666efcdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666efb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666efb1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666efb330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666efb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8666efa818" loc="47:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8666efa818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666efab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b8666f1b308" loc="65:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b8666f1b308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b8666f1b658"/>
        <function-ref name="address" scoped="" ref="0x2b8666f1b7e0"/>
        <function-ref name="destination" scoped="" ref="0x2b8666f1b968"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666f1baf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666f1bc78"/>
        <function-ref name="pan" scoped="" ref="0x2b8666f1be00"/>
        <function-ref name="setPan" scoped="" ref="0x2b8666f24020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666f241a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b8666f24330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b8666f246e0" loc="66:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b8666f246e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f24a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666f24bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666f24d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666f23020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666f231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b8666f4f870" loc="80:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8666f4f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f4c020"/>
        <function-ref name="get" scoped="" ref="0x2b8666f4d9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f4d490"/>
        <function-ref name="set" scoped="" ref="0x2b8666f4c530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b8666f511d8" loc="70:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b8666f511d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b8666f51528"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b8666f516b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b8666f51838"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b8666f519c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b8666f339e8" loc="55:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b8666f339e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f33d38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666f32020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666f321a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666f32330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666f324b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8666efbc38" loc="46:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8666efbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666efa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b8666f46c38" loc="85:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b8666f46c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666f440f8"/>
        <function-ref name="clear" scoped="" ref="0x2b8666f447d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666f459f0"/>
        <function-ref name="set" scoped="" ref="0x2b8666f43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b8666f48830" loc="84:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8666f48830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8666f46410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b8666f19518" loc="79:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8666f19518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666f53ae0"/>
        <function-ref name="get" scoped="" ref="0x2b8666f535d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b8666f530c0"/>
        <function-ref name="set" scoped="" ref="0x2b8666f4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b8666f2a250" loc="59:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b8666f2a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8666f2a5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8666f2a728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666f2a8b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666f2aa38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8666f2abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b8666f35020" loc="51:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b8666f35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666f35370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b8666f51c70" loc="71:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b8666f51c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b8666f1a020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b8666f1a1a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b8666f1a330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b8666f1a4b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b8666f1a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b8666f1a968" loc="77:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b8666f1a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b8666f1acb8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8666f1ae40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8666f19020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8666f342c0" loc="54:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8666f342c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666f34610"/>
        <function-ref name="source" scoped="" ref="0x2b8666f34798"/>
        <function-ref name="address" scoped="" ref="0x2b8666f34920"/>
        <function-ref name="destination" scoped="" ref="0x2b8666f34aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666f34c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666f34db8"/>
        <function-ref name="type" scoped="" ref="0x2b8666f33020"/>
        <function-ref name="setType" scoped="" ref="0x2b8666f331a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666f33330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666f334b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8666f33640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b8666f43bf0" loc="86:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b8666f43bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666f40300"/>
        <function-ref name="clear" scoped="" ref="0x2b8666f409e0"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666f41be8"/>
        <function-ref name="set" scoped="" ref="0x2b8666f3f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b8666f31020" loc="60:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b8666f31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666f31370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b8666f48020" loc="82:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b8666f48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8666f48370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b8666f35bb0" loc="52:../../../Orinoco/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b8666f35bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8666f34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b8666f8e8c0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b8666f8e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b8666f8ec10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b8666f62558" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b8666f62558"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b8666f628a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b8666f90da8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b8666f90da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8666f5c170"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b8666f5c2f8"/>
        <function-ref name="source" scoped="" ref="0x2b8666f5c480"/>
        <function-ref name="destination" scoped="" ref="0x2b8666f5c608"/>
        <function-ref name="setSource" scoped="" ref="0x2b8666f5c790"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8666f5c918"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8666f5caa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b8666f59bc8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b8666f59bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b8666f61020"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b8666f611a8"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b8666f61330"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b8666f614b8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b8666f61640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b8666fae640" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b8666fae640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8666fae990"/>
        <function-ref name="wait" scoped="" ref="0x2b8666faeb18"/>
        <function-ref name="cancel" scoped="" ref="0x2b8666faeca0"/>
        <function-ref name="isFree" scoped="" ref="0x2b8666faee28"/>
        <function-ref name="getNow" scoped="" ref="0x2b8666fb3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b8666fa8860" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b8666fa8860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8666fa8bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8666fa8d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666fb2020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8666fb21a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8666fb2330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8666fb24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b8666fb2a40" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b8666fb2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b8666fa6020"/>
        <function-ref name="clear" scoped="" ref="0x2b8666fa6700"/>
        <function-ref name="isValid" scoped="" ref="0x2b8666fad8f8"/>
        <function-ref name="set" scoped="" ref="0x2b8666fa6de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b8666f74928" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b8666f74928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8666f74c78"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8666f74e00"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8666f3a020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b8666f3a1a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b8666f3a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b8666f69020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b8666f69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b8666f69370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b8666f6b4c0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b8666f6b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b8666f6b810"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b8666f6b998"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b8666f6bb20"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b8666f6bca8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b8666f6be30"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b8666f39020"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b8666f391a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b8666f39330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b8666fb5858" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b8666fb5858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b8666fb5ba8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b8666fb5d30"/>
        <function-ref name="setFCF" scoped="" ref="0x2b8666f8f020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b8666f8f1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b8666f8f330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b8666f8f4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b8666f8f640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b8666f8f7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b8666f8f950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b8666f8fad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b8666f8fc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b8666f8fde8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b8666f8c020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b8666f8c2a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b8666f8c430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b8666f8c5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b8666f8c740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b8666f8c8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b8666f8ca50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8666f8cbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b8666f8cd60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b8666fb4020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b8666fb41a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b8666fb4330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b8666fb44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b8666f665f0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b8666f665f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b8666f66940"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b8666f66ac8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b8666f66c50"/>
        <function-ref name="getSender" scoped="" ref="0x2b8666f66dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b8666f5e8d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b8666f5e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b8666f5ec20"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b8666f5eda8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b8666f65020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b8666f651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b866700f910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b866700f910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b866700fc80"/>
        <function-ref name="wait" scoped="" ref="0x2b866700fe08"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667026020"/>
        <function-ref name="isFree" scoped="" ref="0x2b86670261a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b8667026330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b8667026958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8667026958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667017020"/>
        <function-ref name="fired" scoped="" ref="0x2b86670190c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b86670199d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8667019548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b86670174a8"/>
        <function-ref name="start" scoped="" ref="0x2b866701a730"/>
        <function-ref name="stop" scoped="" ref="0x2b866701ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b8667f45020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b8667f45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8667f45390"/>
        <function-ref name="wait" scoped="" ref="0x2b8667f45518"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667f456a0"/>
        <function-ref name="isFree" scoped="" ref="0x2b8667f45828"/>
        <function-ref name="getNow" scoped="" ref="0x2b8667f459b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b8667f45e68" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8667f45e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667f42628"/>
        <function-ref name="fired" scoped="" ref="0x2b8667f43580"/>
        <function-ref name="startAt" scoped="" ref="0x2b8667f42020"/>
        <function-ref name="isRunning" scoped="" ref="0x2b8667f43a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8667f42ab0"/>
        <function-ref name="start" scoped="" ref="0x2b8667f44be8"/>
        <function-ref name="stop" scoped="" ref="0x2b8667f430f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b8667f41020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b8667f41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b8667f41370"/>
        <function-ref name="suspend" scoped="" ref="0x2b8667f414f8"/>
        <function-ref name="resume" scoped="" ref="0x2b8667f41680"/>
        <function-ref name="run" scoped="" ref="0x2b8667f41808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b8667025220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b8667025220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b8667025570"/>
        <function-ref name="suspend" scoped="" ref="0x2b86670256f8"/>
        <function-ref name="resume" scoped="" ref="0x2b8667025880"/>
        <function-ref name="run" scoped="" ref="0x2b8667025a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86670fd2a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86670fd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86670fd5f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b86670fd780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86670fd908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86670fdb90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86670fdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86670fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b86670ff020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b86670ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b86670ff390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b86670bf578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b86670bf578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86670bf8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86670bfa50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86670bfbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86670bfd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86670be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b86670be388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b86670be388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86670be6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86670be880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86670bea08"/>
        <function-ref name="cancel" scoped="" ref="0x2b86670beb90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86670bed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b86671017e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b86671017e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667101b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86670fe4d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86670fe4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86670fe820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86670fe9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86670feb30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86670fecb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86670fee40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86670fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b86670fc2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b86670fc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86670fc5f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b86670fc780"/>
        <function-ref name="source" scoped="" ref="0x2b86670fc908"/>
        <function-ref name="destination" scoped="" ref="0x2b86670fca90"/>
        <function-ref name="setSource" scoped="" ref="0x2b86670fcc18"/>
        <function-ref name="setDestination" scoped="" ref="0x2b86670fcda0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86670fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86671010c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86671010c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667101438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b86670ff738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b86670ff738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86670ffaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b86670c0020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b86670c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86670c0370"/>
        <function-ref name="source" scoped="" ref="0x2b86670c04f8"/>
        <function-ref name="address" scoped="" ref="0x2b86670c0680"/>
        <function-ref name="destination" scoped="" ref="0x2b86670c0808"/>
        <function-ref name="setSource" scoped="" ref="0x2b86670c0990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b86670c0b18"/>
        <function-ref name="type" scoped="" ref="0x2b86670c0ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b86670c0e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86670bf020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86670bf1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b86670bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b86670ffe50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b86670ffe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86670fe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8667f22430" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8667f22430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667f22780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b8667f23a50" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b8667f23a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667f23da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667f22020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667f221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b8667f256f8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b8667f256f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b8667f25a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8667f29d20" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667f29d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667f270a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667f27228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667f273b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667f27538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667f276c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b8667f27a28" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b8667f27a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667f27d98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667f26020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667f261a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667f26330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667f264b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b8667f25020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b8667f25020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667f25390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b8667f2b958" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b8667f2b958"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667f2bca8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667f2be30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667f2a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667f2a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8667f2a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8667f2a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b8667f22a08" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b8667f22a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8667f22e58"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b8667fb0020"/>
        <function-ref name="source" scoped="" ref="0x2b8667fb01a8"/>
        <function-ref name="destination" scoped="" ref="0x2b8667fb0330"/>
        <function-ref name="setSource" scoped="" ref="0x2b8667fb04b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667fb0640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8667fb07c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b8667fb0a10" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8667fb0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8667fb0d60"/>
        <function-ref name="changed" scoped="" ref="0x2b8667fae020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b8667fae1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8667fae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b8667f24ba8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b8667f24ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667f23020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667f231a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667f23330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667f234b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8667f23640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8667f237c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667f26820" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667f26820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667f26b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b8667f25e10" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b8667f25e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667f241a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b8667f2a700" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8667f2a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b8667f2aa50"/>
        <function-ref name="source" scoped="" ref="0x2b8667f2abd8"/>
        <function-ref name="address" scoped="" ref="0x2b8667f2ad60"/>
        <function-ref name="destination" scoped="" ref="0x2b8667f29020"/>
        <function-ref name="setSource" scoped="" ref="0x2b8667f291a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667f29330"/>
        <function-ref name="type" scoped="" ref="0x2b8667f294b8"/>
        <function-ref name="setType" scoped="" ref="0x2b8667f29640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8667f297c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8667f29950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b8667f29ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b8667f24550" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b8667f24550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667f248c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b86670d5560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b86670d5560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b86670d58b0"/>
        <function-ref name="changed" scoped="" ref="0x2b86670d5a38"/>
        <function-ref name="amGroup" scoped="" ref="0x2b86670d5bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b86670d5d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86670f4a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86670f4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86670f4d98"/>
        <function-ref name="cancel" scoped="" ref="0x2b86670e5020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86670e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b86670e53f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b86670e53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b86670e5740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b86670e58c8"/>
        <function-ref name="request" scoped="" ref="0x2b86670e5a50"/>
        <function-ref name="granted" scoped="" ref="0x2b86670e5bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b86670e5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b86670f4100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b86670f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86670f4450"/>
        <function-ref name="cancel" scoped="" ref="0x2b86670f45d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86670f4760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8667154020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8667154020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8667154390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8667154518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8667152020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8667152020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8667152390"/>
        <function-ref name="configure" scoped="" ref="0x2b8667152518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8667155200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8667155200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8667155570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b86671556f8"/>
        <function-ref name="request" scoped="" ref="0x2b8667155880"/>
        <function-ref name="granted" scoped="" ref="0x2b8667155a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8667155b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8667154760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8667154760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8667154ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b8667154c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8667fde438" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8667fde438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667fde788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b8667fdea10" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b8667fdea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8667fded60"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8667fdc020"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8667fdc1a8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8667fdc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b8667fda698" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b8667fda698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b8667fdaa08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b8667fdab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b8667fd96c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b8667fd96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b8667fd9a30"/>
        <function-ref name="configure" scoped="" ref="0x2b8667fd9bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b8667fd9e40" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b8667fd9e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b8667fd81c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b8667fd8348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b8667fd84d0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b8667fd8658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8667fdb918" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8667fdb918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8667fdbc88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8667fdbe10"/>
        <function-ref name="request" scoped="" ref="0x2b8667fda020"/>
        <function-ref name="granted" scoped="" ref="0x2b8667fda1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8667fda330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b8667fdadd8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b8667fdadd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b8667fd9170"/>
        <function-ref name="userId" scoped="" ref="0x2b8667fd92f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b8667fd8920" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b8667fd8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8667fd8c70"/>
        <function-ref name="runTask" scoped="" ref="0x2b8667fd8df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86671aaba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86671aaba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86671a8020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86671a81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86671a8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86671a85b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86671a85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86671a8908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b86671ae840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b86671ae840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b86671aeb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b866714f980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b866714f980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866714fcd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866714fe58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86671af020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671af1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86671af330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b86671abd98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86671abd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86671aa170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86671aa2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671aa480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86671aa608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86671aa790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86671aa918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b86671aee38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b86671aee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b86671ad1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b86671ad348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b86671ad4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b86671ad658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b86671ad7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b86671ad968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b86671adaf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b86671adc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b86671ade00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b86671ac020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b86671ac1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b86671ac330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b86671ac4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b86671ac740"/>
        <function-ref name="localPan" scoped="" ref="0x2b86671ac8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b86671aca50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b86671acbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b86671acd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b86671ab020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86671ab1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b86671ab330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b86671ab4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b86671ab640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b86671ab7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b86671ab950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b86671af578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b86671af578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86671af8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86671afa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671afbd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b86671afd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86671ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b86671ae2a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b86671ae2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86671ae5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86671b6490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86671b6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86671b67e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b86671b6968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86671b6af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86671b6d78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86671b6d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86671b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b86671ba880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b86671ba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86671babd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86671bad58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671b8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86671b81a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86671b8330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86671b84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b86671b7060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b86671b7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86671b73b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86671b5378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86671b5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86671b56c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86671b5850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671b59d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86671b5b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86671b5ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86671b5e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b86671b8740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b86671b8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86671b8a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b86671b8c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86671b8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b86671a2838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b86671a2838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86671a2b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b86671a2d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86671ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b86671ba2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b86671ba2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86671ba5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b86671b7638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b86671b7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86671b7988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86671b7b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86671b7c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86671b7e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86671b6020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86671b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b866724a900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b866724a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b866724ac50"/>
        <function-ref name="address" scoped="" ref="0x2b866724add8"/>
        <function-ref name="destination" scoped="" ref="0x2b8667249020"/>
        <function-ref name="setSource" scoped="" ref="0x2b86672491a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667249330"/>
        <function-ref name="pan" scoped="" ref="0x2b86672494b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b8667249640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86672497c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b8667249950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b8667249b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b8667249b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667248020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86672481a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667248330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86672484b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8667248640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86672487c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b866724e980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b866724e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b866724ecd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b866724ee58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b866724c020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b866724c1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b866724c330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b866724c4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b866724c640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b866724c7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b866724c950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b866724cad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b866724cc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b866724cde8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b866724b020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b866724b2a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b866724b430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b866724b5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b866724b740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b866724b8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b866724ba50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b866724bbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b866724bd60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b866724a020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b866724a1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b866724a330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b866724a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b8667248ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b8667248ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667248e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667247020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86672471a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667247330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86672474b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8667247640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b8667ff2d98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b8667ff2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b8667ff1170"/>
        <function-ref name="address" scoped="" ref="0x2b8667ff12f8"/>
        <function-ref name="destination" scoped="" ref="0x2b8667ff1480"/>
        <function-ref name="setSource" scoped="" ref="0x2b8667ff1608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667ff1790"/>
        <function-ref name="pan" scoped="" ref="0x2b8667ff1918"/>
        <function-ref name="setPan" scoped="" ref="0x2b8667ff1aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8667ff1c28"/>
        <function-ref name="localPan" scoped="" ref="0x2b8667ff1db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b8668071020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b8668071020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8668071370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86680714f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8668071680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8668071808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8668071990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8668071b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b8667ff8d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b8667ff8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b8667ff40d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b8667ff4260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b8667ff43e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b8667ff4570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b8667ff46f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b8667ff4880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b8667ff4a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b8667ff4b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b8667ff4d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b8667ff3020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b8667ff31a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b8667ff3330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b8667ff34b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b8667ff3740"/>
        <function-ref name="localPan" scoped="" ref="0x2b8667ff38c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b8667ff3a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b8667ff3bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b8667ff3d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b8667ff2020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b8667ff21a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b8667ff2330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b8667ff24b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b8667ff2640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b8667ff27c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b8667ff2950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b8668071dc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b8668071dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b8668070170"/>
        <function-ref name="changed" scoped="" ref="0x2b86680702f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b8668070480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b8668070608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b8668070890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b8668070890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8668070be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8668070d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866806f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866806f1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866806f330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866806f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86672c2510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86672c2510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672c2860"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672c29e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672c2b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86672c2df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86672c2df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672c1170"/>
        <function-ref name="header" scoped="" ref="0x2b86672c12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b86672c3470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86672c3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672c37c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672c3948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672c3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b86672c1580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b86672c1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b86672c18d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b86672c1a58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b86672c1be0"/>
        <function-ref name="getSender" scoped="" ref="0x2b86672c1d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b86672c3d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b86672c3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672c20a0"/>
        <function-ref name="header" scoped="" ref="0x2b86672c2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86680a5458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86680a5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86680a57a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b86680a5930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86680a5ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86680a5d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86680a5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86680a30d8"/>
        <function-ref name="header" scoped="" ref="0x2b86680a3260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b86680a2bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b86680a2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86680a1020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b86680a11a8"/>
        <function-ref name="get" scoped="" ref="0x2b86680a1330"/>
        <function-ref name="set" scoped="" ref="0x2b86680a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b86680a9da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86680a9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86680a6170"/>
        <function-ref name="cancel" scoped="" ref="0x2b86680a62f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86680a6480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b86680a2020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b86680a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b86680a2370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b86680a24f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b86680a2680"/>
        <function-ref name="evicted" scoped="" ref="0x2b86680a2808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b86680a2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b86680a66c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b86680a66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86680a6a18"/>
        <function-ref name="header" scoped="" ref="0x2b86680a6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86680a6de8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86680a6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86680a5170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b86680a34a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b86680a34a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b86680a37f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b86680a3980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b86680a3b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b86680a3c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b86672aad58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b86672aad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b86672a70d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b86672a7260"/>
        <function-ref name="getNode" scoped="" ref="0x2b86672a73e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b86672a7570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b86672a76f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b86672a3b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b86672a3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86672a3e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b86672a2020"/>
        <function-ref name="get" scoped="" ref="0x2b86672a21a8"/>
        <function-ref name="set" scoped="" ref="0x2b86672a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b86672a4850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b86672a4850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b86672a4ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b86672a4d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b86672a3020"/>
        <function-ref name="evicted" scoped="" ref="0x2b86672a31a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b86672a3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86672a4238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86672a4238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86672a4588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b866809f140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b866809f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866809f490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b866809f618"/>
        <function-ref name="get" scoped="" ref="0x2b866809f7a0"/>
        <function-ref name="set" scoped="" ref="0x2b866809f928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86672fcc38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86672fcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672fb020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672fb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672fb330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86672fb5b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86672fb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672fb908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b86672f7100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b86672f7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b86672f7450"/>
        <function-ref name="noAck" scoped="" ref="0x2b86672f75d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b86672f7760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b86672fe2e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86672fe2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672fe638"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672fe7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672fe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b86672fde20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86672fde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86672fc1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86672fc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86672fc4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86672fc640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86672fc7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86672fc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86672fbb90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86672fbb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86672f9020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86672f91a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86672f9330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86672f94b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86672f9640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86672f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b86672f8470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b86672f8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b86672f87c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b86672f8948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b86672f8ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b86672f8c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b86672f8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86672febd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86672febd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b86672f9a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b86672f9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b86672f9d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b86672f8020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b86672f81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b86672fd268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b86672fd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b86672fd5b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b86672fd740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b86672fd8c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b86672fda50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b86672fdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b86672e0440" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b86672e0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b86672e0790"/>
        <function-ref name="stopDone" scoped="" ref="0x2b86672e0918"/>
        <function-ref name="start" scoped="" ref="0x2b86672e0aa0"/>
        <function-ref name="stop" scoped="" ref="0x2b86672e0c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b86672db430" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b86672db430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672db780"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672db908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672dba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86672dbd18" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86672dbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672da0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b86672de020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b86672de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86672de370"/>
        <function-ref name="cancel" scoped="" ref="0x2b86672de4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86672de680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b86672dd020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86672dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86672dd370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86672dd4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86672dd680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86672dd808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86672dd990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86672ddb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b86672ddd60" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b86672ddd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b86672dc0d8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b86672dc260"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b86672dc3e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b86672dc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b86672dc858" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b86672dc858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b86672dcba8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b86672dcd30"/>
        <function-ref name="start" scoped="" ref="0x2b86672db020"/>
        <function-ref name="stop" scoped="" ref="0x2b86672db1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86672de908" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86672de908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86672dec58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86672da328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86672da328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86672da678"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86672da800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86672da988"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86672dab10"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86672dac98"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86672dae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b866807c5e8" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b866807c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b866807c938"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b866807cac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b866807cc48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b866807cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8667357270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8667357270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b86673575c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8667357748"/>
        <function-ref name="start" scoped="" ref="0x2b86673578d0"/>
        <function-ref name="stop" scoped="" ref="0x2b8667357a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b86673555d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b86673555d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b8667355928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b8667355ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8667355c38"/>
        <function-ref name="done" scoped="" ref="0x2b8667355dc0"/>
        <function-ref name="standby" scoped="" ref="0x2b8667354020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b86673541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8667357ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8667357ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86673560a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667356228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86673563b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b8667354c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b8667354c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667352020"/>
        <function-ref name="header" scoped="" ref="0x2b86673521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667356638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667356638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667356988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b86673543f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b86673543f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667354740"/>
        <function-ref name="ready" scoped="" ref="0x2b86673548c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667354a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b8667356bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b8667356bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b8667355020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b86673551a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8667355330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b8668075870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b8668075870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b8668075bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b8668075d48"/>
        <function-ref name="start" scoped="" ref="0x2b8668073020"/>
        <function-ref name="stop" scoped="" ref="0x2b86680731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b8668073430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b8668073430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8668073780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b86680f4450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b86680f4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b86680f47a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b86680f4928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b86680f4ab0"/>
        <function-ref name="done" scoped="" ref="0x2b86680f4c38"/>
        <function-ref name="standby" scoped="" ref="0x2b86680f4dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b86680f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b8668073a08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b8668073a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8668073d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b8668072020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86680721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b86680f14f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b86680f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86680f1840"/>
        <function-ref name="runTask" scoped="" ref="0x2b86680f19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b86680f2578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b86680f2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86680f28c8"/>
        <function-ref name="header" scoped="" ref="0x2b86680f2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b86680f1c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b86680f1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86680f0020"/>
        <function-ref name="runTask" scoped="" ref="0x2b86680f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8668072430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8668072430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8668072780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b86680f2d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b86680f2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86680f10a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b86680f1228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b86680f3c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b86680f3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86680f2020"/>
        <function-ref name="ready" scoped="" ref="0x2b86680f21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86680f2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b86680729c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b86680729c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b8668072d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b86680f4020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b86680f41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b86680f3268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b86680f3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b86680f35b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b86680f3740"/>
        <function-ref name="resume" scoped="" ref="0x2b86680f38c8"/>
        <function-ref name="run" scoped="" ref="0x2b86680f3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b86673e0020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b86673e0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673e0370"/>
        <function-ref name="get" scoped="" ref="0x2b86673e04f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b86673e0680"/>
        <function-ref name="set" scoped="" ref="0x2b86673e0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b86673e4220" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86673e4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673e4570"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86673e46f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86673e4880"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86673e4a08"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86673e4b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86673e4d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86673e1188" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86673e1188"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673e14d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86673e1660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86673e17e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86673e1970"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86673e1af8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86673e1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b86673e77d8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86673e77d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b86673e6c58"/>
        <function-ref name="clear" scoped="" ref="0x2b86673e5380"/>
        <function-ref name="isValid" scoped="" ref="0x2b86673e6578"/>
        <function-ref name="set" scoped="" ref="0x2b86673e5a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b86673e2168" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673e2168"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86673e2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b86673eba48" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b86673eba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b86673e9020"/>
        <function-ref name="clear" scoped="" ref="0x2b86673e9700"/>
        <function-ref name="isValid" scoped="" ref="0x2b86673ea828"/>
        <function-ref name="set" scoped="" ref="0x2b86673e9de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b8668135618" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b8668135618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8668135968"/>
        <function-ref name="get" scoped="" ref="0x2b8668135af0"/>
        <function-ref name="setValue" scoped="" ref="0x2b8668135c78"/>
        <function-ref name="set" scoped="" ref="0x2b8668135e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b86681377a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86681377a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8668137af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8668137c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8668137e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8668135020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86681351a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8668135330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86681322a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86681322a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86681325f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8668132778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8668132900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8668132a88"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8668132c10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8668132d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b86680b5c48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b86680b5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b86680b30f8"/>
        <function-ref name="clear" scoped="" ref="0x2b86680b37d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b86680b49f0"/>
        <function-ref name="set" scoped="" ref="0x2b8668137020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b86681341c8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86681341c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8668134d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b8668133290" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8668133290"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8668133e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b86680b8020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b86680b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b86680b7478"/>
        <function-ref name="clear" scoped="" ref="0x2b86680b7b58"/>
        <function-ref name="isValid" scoped="" ref="0x2b86680b8d70"/>
        <function-ref name="set" scoped="" ref="0x2b86680b5278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b86673dba70" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b86673dba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673dbdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866740c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866740c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866740c330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866740c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866740c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b866740c928" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b866740c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866740cc78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866740ce00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866740b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866740b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866740b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866740b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b86673db020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b86673db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673db390"/>
        <function-ref name="get" scoped="" ref="0x2b86673db518"/>
        <function-ref name="setValue" scoped="" ref="0x2b86673db6a0"/>
        <function-ref name="set" scoped="" ref="0x2b86673db828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b86674017c8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b86674017c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b8667401b18"/>
        <function-ref name="request" scoped="" ref="0x2b8667401ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b86673fe388" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b86673fe388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673fda40"/>
        <function-ref name="get" scoped="" ref="0x2b86673fd530"/>
        <function-ref name="isSet" scoped="" ref="0x2b86673fd020"/>
        <function-ref name="set" scoped="" ref="0x2b86673fb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b866743a368" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b866743a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866743a6b8"/>
        <function-ref name="get" scoped="" ref="0x2b866743a840"/>
        <function-ref name="setValue" scoped="" ref="0x2b866743a9c8"/>
        <function-ref name="set" scoped="" ref="0x2b866743ab50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b86673eebc8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b86673eebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b866743d088"/>
        <function-ref name="clear" scoped="" ref="0x2b866743d768"/>
        <function-ref name="isValid" scoped="" ref="0x2b86673ed948"/>
        <function-ref name="set" scoped="" ref="0x2b866743de48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b8667407148" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b8667407148"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b8667407498"/>
        <function-ref name="turnOn" scoped="" ref="0x2b8667407620"/>
        <function-ref name="setChannel" scoped="" ref="0x2b86674077a8"/>
        <function-ref name="done" scoped="" ref="0x2b8667407930"/>
        <function-ref name="standby" scoped="" ref="0x2b8667407ab8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b8667407c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b8667439ab8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b8667439ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b8667439e08"/>
        <function-ref name="wait" scoped="" ref="0x2b8667438020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86674381a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b8667438330"/>
        <function-ref name="getNow" scoped="" ref="0x2b86674384b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b8667402060" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b8667402060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667400640"/>
        <function-ref name="get" scoped="" ref="0x2b8667400130"/>
        <function-ref name="isSet" scoped="" ref="0x2b8667402be0"/>
        <function-ref name="set" scoped="" ref="0x2b8667400b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b8667403020" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b8667403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667403370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86674034f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667403680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667403808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b8667403990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8667403b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b86673efb80" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b86673efb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86673ee020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86673ee1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b86673ee330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b86673ee4b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b86673ee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b8667405948" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b8667405948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667405c98"/>
        <function-ref name="header" scoped="" ref="0x2b8667405e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b86673f3ae0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b86673f3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86673ef150"/>
        <function-ref name="fired" scoped="" ref="0x2b86673f11f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b86673f1b08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86673f1680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b86673ef5d8"/>
        <function-ref name="start" scoped="" ref="0x2b86673f2860"/>
        <function-ref name="stop" scoped="" ref="0x2b86673f2d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b86673fb880" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b86673fb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673f9020"/>
        <function-ref name="get" scoped="" ref="0x2b86673fa9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b86673fa490"/>
        <function-ref name="set" scoped="" ref="0x2b86673f9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b86673f4830" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b86673f4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86673f3410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b8667405020" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b8667405020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667405370"/>
        <function-ref name="ready" scoped="" ref="0x2b86674054f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667405680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b86673f9d70" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b86673f9d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86673f6388"/>
        <function-ref name="get" scoped="" ref="0x2b86673f7e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b86673f7928"/>
        <function-ref name="set" scoped="" ref="0x2b86673f6898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b8667439020" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b8667439020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667439370"/>
        <function-ref name="get" scoped="" ref="0x2b86674394f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b8667439680"/>
        <function-ref name="set" scoped="" ref="0x2b8667439808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b866743b750" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b866743b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866743baa0"/>
        <function-ref name="get" scoped="" ref="0x2b866743bc28"/>
        <function-ref name="setValue" scoped="" ref="0x2b866743bdb0"/>
        <function-ref name="set" scoped="" ref="0x2b866743a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b86673f4020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86673f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b86673f4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b866742e518" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b866742e518"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b866742e868"/>
        <function-ref name="request" scoped="" ref="0x2b866742e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b8667464c60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b8667464c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b86674689f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b86674290c8" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b86674290c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86674286a0"/>
        <function-ref name="get" scoped="" ref="0x2b8667428190"/>
        <function-ref name="isSet" scoped="" ref="0x2b8667429c48"/>
        <function-ref name="set" scoped="" ref="0x2b8667428bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b8667461988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b8667461988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667461cd8"/>
        <function-ref name="get" scoped="" ref="0x2b8667461e60"/>
        <function-ref name="setValue" scoped="" ref="0x2b8667460020"/>
        <function-ref name="set" scoped="" ref="0x2b86674601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b8667430020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b8667430020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667430370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b866745f2b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b866745f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b866745e910"/>
        <function-ref name="clear" scoped="" ref="0x2b866745c020"/>
        <function-ref name="isValid" scoped="" ref="0x2b866745e230"/>
        <function-ref name="set" scoped="" ref="0x2b866745c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b866741ce70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b866741ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866741b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b866741b370"/>
        <function-ref name="toggle" scoped="" ref="0x2b866741b4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866741b680"/>
        <function-ref name="get" scoped="" ref="0x2b866741b808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866741b990"/>
        <function-ref name="set" scoped="" ref="0x2b866741bb18"/>
        <function-ref name="clr" scoped="" ref="0x2b866741bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b866745bab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b866745bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b866745be08"/>
        <function-ref name="wait" scoped="" ref="0x2b866745a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b866745a1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b866745a330"/>
        <function-ref name="getNow" scoped="" ref="0x2b866745a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b8667430620" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b8667430620"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b8667430970"/>
        <function-ref name="turnOn" scoped="" ref="0x2b8667430af8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b8667430c80"/>
        <function-ref name="done" scoped="" ref="0x2b8667430e08"/>
        <function-ref name="standby" scoped="" ref="0x2b866742f020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b866742f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b8667465020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8667465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667465ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b866742dcd0" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b866742dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866742a388"/>
        <function-ref name="get" scoped="" ref="0x2b866742ce00"/>
        <function-ref name="isSet" scoped="" ref="0x2b866742c8f0"/>
        <function-ref name="set" scoped="" ref="0x2b866742a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b866742eca8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b866742eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866742d020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866742d1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866742d330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866742d4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866742d640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866742d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b8667417d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b8667417d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866741c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b866741c228"/>
        <function-ref name="toggle" scoped="" ref="0x2b866741c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866741c538"/>
        <function-ref name="get" scoped="" ref="0x2b866741c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866741c848"/>
        <function-ref name="set" scoped="" ref="0x2b866741c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b866741cb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b8667462100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b8667462100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667462450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b86674625d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b8667462760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b86674628e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b8667462a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b866742fd78" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b866742fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866742e0f0"/>
        <function-ref name="header" scoped="" ref="0x2b866742e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b86674c8d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b86674c8d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86674c7170"/>
        <function-ref name="runTask" scoped="" ref="0x2b86674c72f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b8667426458" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b8667426458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667425a40"/>
        <function-ref name="get" scoped="" ref="0x2b8667425530"/>
        <function-ref name="isSet" scoped="" ref="0x2b8667425020"/>
        <function-ref name="set" scoped="" ref="0x2b8667423020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b8667431450" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8667431450"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b866622a6f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86674317a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b866741e4f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b866741e4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b866741e848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b866741e9d0"/>
        <function-ref name="request" scoped="" ref="0x2b866741eb58"/>
        <function-ref name="granted" scoped="" ref="0x2b866741ece0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b866741ee68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b866741f130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b866741f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866741f580"/>
        <function-ref name="isInput" scoped="" ref="0x2b866741f708"/>
        <function-ref name="toggle" scoped="" ref="0x2b866741f890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866741fa18"/>
        <function-ref name="get" scoped="" ref="0x2b866741fba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866741fd28"/>
        <function-ref name="set" scoped="" ref="0x2b866741e020"/>
        <function-ref name="clr" scoped="" ref="0x2b866741e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b8667423860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b8667423860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667422e30"/>
        <function-ref name="get" scoped="" ref="0x2b8667422920"/>
        <function-ref name="isSet" scoped="" ref="0x2b8667422410"/>
        <function-ref name="set" scoped="" ref="0x2b8667421388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b866742f450" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b866742f450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866742f7a0"/>
        <function-ref name="ready" scoped="" ref="0x2b866742f928"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866742fab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b86674665e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b86674665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b8667466938"/>
        <function-ref name="disable" scoped="" ref="0x2b8667466ac0"/>
        <function-ref name="captured" scoped="" ref="0x2b8667466c48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b8667466dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b86674171f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b86674171f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b8667417540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b86674176c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b8667417850"/>
        <function-ref name="write" scoped="" ref="0x2b86674179d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b8667460518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b8667460518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667460868"/>
        <function-ref name="get" scoped="" ref="0x2b86674609f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b8667460b78"/>
        <function-ref name="set" scoped="" ref="0x2b8667460d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b8667462e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b8667462e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86674611a8"/>
        <function-ref name="get" scoped="" ref="0x2b8667461330"/>
        <function-ref name="setValue" scoped="" ref="0x2b86674614b8"/>
        <function-ref name="set" scoped="" ref="0x2b8667461640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b86674219d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86674219d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b8667421d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b866745b020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b866745b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b866745b370"/>
        <function-ref name="suspend" scoped="" ref="0x2b866745b4f8"/>
        <function-ref name="resume" scoped="" ref="0x2b866745b680"/>
        <function-ref name="run" scoped="" ref="0x2b866745b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b866752d338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b866752d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866752d688"/>
        <function-ref name="isInput" scoped="" ref="0x2b866752d810"/>
        <function-ref name="toggle" scoped="" ref="0x2b866752d998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866752db20"/>
        <function-ref name="get" scoped="" ref="0x2b866752dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866752de30"/>
        <function-ref name="set" scoped="" ref="0x2b866752c020"/>
        <function-ref name="clr" scoped="" ref="0x2b866752c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b866752e140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b866752e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866752e490"/>
        <function-ref name="isInput" scoped="" ref="0x2b866752e618"/>
        <function-ref name="toggle" scoped="" ref="0x2b866752e7a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866752e928"/>
        <function-ref name="get" scoped="" ref="0x2b866752eab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866752ec38"/>
        <function-ref name="set" scoped="" ref="0x2b866752edc0"/>
        <function-ref name="clr" scoped="" ref="0x2b866752d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b866752b2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b866752b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667528928"/>
        <function-ref name="fired" scoped="" ref="0x2b866752a9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b8667528320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866752ae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b8667528db0"/>
        <function-ref name="start" scoped="" ref="0x2b866752a088"/>
        <function-ref name="stop" scoped="" ref="0x2b866752a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b8667530990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b8667530990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8667530ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8667530e68"/>
        <function-ref name="request" scoped="" ref="0x2b866752f020"/>
        <function-ref name="granted" scoped="" ref="0x2b866752f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b866752f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b8667533710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b8667533710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b8667533a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b8667533be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b8667533d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b8667530020"/>
        <function-ref name="get" scoped="" ref="0x2b86675301a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b8667530330"/>
        <function-ref name="set" scoped="" ref="0x2b86675304b8"/>
        <function-ref name="clr" scoped="" ref="0x2b8667530640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b866752c4c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b866752c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b866752c810"/>
        <function-ref name="disable" scoped="" ref="0x2b866752c998"/>
        <function-ref name="captured" scoped="" ref="0x2b866752cb20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b866752cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b866752f5e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b866752f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b866752f938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b866752fac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b866752fc48"/>
        <function-ref name="write" scoped="" ref="0x2b866752fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b8667527438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b8667527438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b86663b7140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667526020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b866751e830" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b866751e830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866751eb80"/>
        <function-ref name="isInput" scoped="" ref="0x2b866751ed08"/>
        <function-ref name="toggle" scoped="" ref="0x2b866751d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866751d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b866751d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866751d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b866751d640"/>
        <function-ref name="clr" scoped="" ref="0x2b866751d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b8667522190" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8667522190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b866751e310"/>
        <function-ref name="test" scoped="" ref="0x2b866751f998"/>
        <function-ref name="get" scoped="" ref="0x2b8667522d10"/>
        <function-ref name="captured" scoped="" ref="0x2b86675206d0"/>
        <function-ref name="reset" scoped="" ref="0x2b8667520ba8"/>
        <function-ref name="isOn" scoped="" ref="0x2b866751fe20"/>
        <function-ref name="set" scoped="" ref="0x2b86675201f8"/>
        <function-ref name="start" scoped="" ref="0x2b866751f088"/>
        <function-ref name="stop" scoped="" ref="0x2b866751f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b866751daf8" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b866751daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b866751de48"/>
        <function-ref name="isInput" scoped="" ref="0x2b866751c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b866751c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b866751c330"/>
        <function-ref name="get" scoped="" ref="0x2b866751c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b866751c640"/>
        <function-ref name="set" scoped="" ref="0x2b866751c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b866751c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b8667523870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b8667523870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667523bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b8667526cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b8667526cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b86675230a0"/>
        <function-ref name="disable" scoped="" ref="0x2b8667523228"/>
        <function-ref name="captured" scoped="" ref="0x2b86675233b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b8667523538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b8667559c20" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b8667559c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667560020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86675601a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b8667562020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b8667562020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8667562370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86675249d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86675249d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667524d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b8667562668" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b8667562668"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b86675629b8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b8667562b40"/>
        <function-ref name="splitRead" scoped="" ref="0x2b8667562cc8"/>
        <function-ref name="write" scoped="" ref="0x2b8667562e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8667560978" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8667560978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8667560cc8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b8667560e50"/>
        <function-ref name="request" scoped="" ref="0x2b866755f020"/>
        <function-ref name="granted" scoped="" ref="0x2b866755f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b866755f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b866756bb58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b866756bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b866756a020"/>
        <function-ref name="runTask" scoped="" ref="0x2b866756a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b8667554020" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b8667554020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667554370"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86675544f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b866758c208" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b866758c208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b866758c558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b866758c6e0"/>
        <function-ref name="request" scoped="" ref="0x2b866758c868"/>
        <function-ref name="granted" scoped="" ref="0x2b866758c9f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b866758cb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b8667556d80" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b8667556d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b8667555170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86675567a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86675567a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667556af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b8667551020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b8667551020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b8667551370"/>
        <function-ref name="sleep" scoped="" ref="0x2b866758d7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b8667551680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b866758d950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b8667551990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b8667551b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b8667551ca0"/>
        <function-ref name="read" scoped="" ref="0x2b8667551e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b8667550020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b86675501a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b8667550330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b86675504b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b8667550640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b86675508c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b8667550a50"/>
        <function-ref name="write" scoped="" ref="0x2b8667550bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b8667550d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b866758d020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b866758d1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b866758d330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b866758d4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b86675514f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b8667551808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b866758d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b8667555428" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b8667555428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b8667555778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b8667555900"/>
        <function-ref name="splitRead" scoped="" ref="0x2b8667555a88"/>
        <function-ref name="write" scoped="" ref="0x2b8667555c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b8667554c88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b8667554c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b8667553020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b86675531a8"/>
        <function-ref name="request" scoped="" ref="0x2b8667553330"/>
        <function-ref name="granted" scoped="" ref="0x2b86675534b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b8667553640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b866758ce30" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b866758ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b866758b1a8"/>
        <function-ref name="userId" scoped="" ref="0x2b866758b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b866758b600" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b866758b600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b866758b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b8667597020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b8667597020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b8667597370"/>
        <function-ref name="sleep" scoped="" ref="0x2b86675957c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b8667597680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b8667595950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b8667597990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b8667597b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b8667597ca0"/>
        <function-ref name="read" scoped="" ref="0x2b8667597e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b8667596020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b86675961a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b8667596330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b86675964b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b8667596640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b86675968c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b8667596a50"/>
        <function-ref name="write" scoped="" ref="0x2b8667596bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b8667596d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b8667595020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b86675951a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b8667595330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b86675954b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b86675974f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b8667597808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b8667595640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b86675e1190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b86675e1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86675e14e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b86675e1668"/>
        <function-ref name="toggle" scoped="" ref="0x2b86675e17f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86675e1978"/>
        <function-ref name="get" scoped="" ref="0x2b86675e1b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86675e1c88"/>
        <function-ref name="set" scoped="" ref="0x2b86675e1e10"/>
        <function-ref name="clr" scoped="" ref="0x2b86675e0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b86675e6de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b86675e6de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86675e5170"/>
        <function-ref name="isInput" scoped="" ref="0x2b86675e52f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86675e5480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86675e5608"/>
        <function-ref name="get" scoped="" ref="0x2b86675e5790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86675e5918"/>
        <function-ref name="set" scoped="" ref="0x2b86675e5aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b86675e5c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b86675e3c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b86675e3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86675e6020"/>
        <function-ref name="isInput" scoped="" ref="0x2b86675e61a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86675e6330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86675e64b8"/>
        <function-ref name="get" scoped="" ref="0x2b86675e6640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86675e67c8"/>
        <function-ref name="set" scoped="" ref="0x2b86675e6950"/>
        <function-ref name="clr" scoped="" ref="0x2b86675e6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b86675e3438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b86675e3438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b86675e3788"/>
        <function-ref name="stop" scoped="" ref="0x2b86675e3910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b86675e0350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b86675e0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b86675e06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b8667594dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b8667594dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b8667591170"/>
        <function-ref name="sleep" scoped="" ref="0x2b86675e7640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b8667591480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b86675e77c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b8667591790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b8667591918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b8667591aa0"/>
        <function-ref name="read" scoped="" ref="0x2b8667591c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b8667591db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b86675e8020"/>
        <function-ref name="setClock" scoped="" ref="0x2b86675e81a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b86675e8330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b86675e84b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b86675e8740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b86675e88c8"/>
        <function-ref name="write" scoped="" ref="0x2b86675e8a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b86675e8bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b86675e8d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b86675e7020"/>
        <function-ref name="getClock" scoped="" ref="0x2b86675e71a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b86675e7330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b86675912f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b8667591608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b86675e74b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b86675e2020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b86675e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b86675e2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b86675e24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b86675e2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b86675e2808"/>
        <function-ref name="get" scoped="" ref="0x2b86675e2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b86675e2b18"/>
        <function-ref name="set" scoped="" ref="0x2b86675e2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b86675e2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b86675f0510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b86675f0510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b86675f0880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b86675f0a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b86675ee550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b86675ee550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b86675ee8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b86675eea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b86675f1748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b86675f1748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b86675f1ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b86675f1c40"/>
        <function-ref name="request" scoped="" ref="0x2b86675f1dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b86675f0020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b86675f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b86675f0c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b86675f0c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b86675ee020"/>
        <function-ref name="userId" scoped="" ref="0x2b86675ee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86680f57b0" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86680f57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86680f5b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b86680f5d88" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b86680f5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b866817e170"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b866817e2f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b866817e480"/>
        <function-ref name="dequeue" scoped="" ref="0x2b866817e608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b866817c9a8" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b866817c9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b866817cd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b866817b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b866817bb08" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b866817bb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b866817be78"/>
        <function-ref name="configure" scoped="" ref="0x2b866817a030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b866817a2b8" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b866817a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b866817a608"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b866817a790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b866817a918"/>
        <function-ref name="dequeue" scoped="" ref="0x2b866817aaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b866817db80" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b866817db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b866817c020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b866817c1a8"/>
        <function-ref name="request" scoped="" ref="0x2b866817c330"/>
        <function-ref name="granted" scoped="" ref="0x2b866817c4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b866817c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b866817b268" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b866817b268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b866817b5b8"/>
        <function-ref name="userId" scoped="" ref="0x2b866817b740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b866817ad68" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b866817ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b86681790f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8668179278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8667638838" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667638838"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b8667638b88"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8667638d10"/>
        <function-ref name="getControlA" scoped="" ref="0x2b8667637020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b86676371a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8667637330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b86676374b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8667637640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b86676377c8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b8667637950"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8667637ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8667636020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8667636020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8667632270"/>
        <function-ref name="test" scoped="" ref="0x2b8667634930"/>
        <function-ref name="get" scoped="" ref="0x2b8667636ba0"/>
        <function-ref name="captured" scoped="" ref="0x2b8667635560"/>
        <function-ref name="reset" scoped="" ref="0x2b8667635a38"/>
        <function-ref name="isOn" scoped="" ref="0x2b8667634db8"/>
        <function-ref name="set" scoped="" ref="0x2b8667635088"/>
        <function-ref name="start" scoped="" ref="0x2b8667634020"/>
        <function-ref name="stop" scoped="" ref="0x2b86676344a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b8667632e18" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b8667632e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b866762e798"/>
        <function-ref name="fired" scoped="" ref="0x2b86676304f8"/>
        <function-ref name="get" scoped="" ref="0x2b8667631a18"/>
        <function-ref name="reset" scoped="" ref="0x2b8667630980"/>
        <function-ref name="isOn" scoped="" ref="0x2b866762ec20"/>
        <function-ref name="set" scoped="" ref="0x2b8667630020"/>
        <function-ref name="start" scoped="" ref="0x2b8667630e08"/>
        <function-ref name="stop" scoped="" ref="0x2b866762e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b866763f6e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b866763f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b866763a930"/>
        <function-ref name="test" scoped="" ref="0x2b866763a020"/>
        <function-ref name="get" scoped="" ref="0x2b866763c3a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b866763adb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b86676382f0"/>
        <function-ref name="reset" scoped="" ref="0x2b866763b1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b866763cd08"/>
        <function-ref name="isOn" scoped="" ref="0x2b866763a4a8"/>
        <function-ref name="set" scoped="" ref="0x2b866763c830"/>
        <function-ref name="start" scoped="" ref="0x2b866763b680"/>
        <function-ref name="stop" scoped="" ref="0x2b866763bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b8667625160" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b8667625160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b86676254b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b8667625638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b86676257c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b8667625948"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b8667625ad0"/>
        <function-ref name="setControlB" scoped="" ref="0x2b8667625c58"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b8667625de0"/>
        <function-ref name="getControlB" scoped="" ref="0x2b8667624020"/>
        <function-ref name="setControlC" scoped="" ref="0x2b86676241a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b8667624330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b866761e020" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b866761e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b866761c7a8"/>
        <function-ref name="fired" scoped="" ref="0x2b866761d560"/>
        <function-ref name="get" scoped="" ref="0x2b866761eba0"/>
        <function-ref name="reset" scoped="" ref="0x2b866761d9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b866761cc30"/>
        <function-ref name="set" scoped="" ref="0x2b866761d088"/>
        <function-ref name="start" scoped="" ref="0x2b866761de70"/>
        <function-ref name="stop" scoped="" ref="0x2b866761c320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b8667624808" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b8667624808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b8667620930"/>
        <function-ref name="test" scoped="" ref="0x2b8667620020"/>
        <function-ref name="get" scoped="" ref="0x2b86676223c8"/>
        <function-ref name="captured" scoped="" ref="0x2b8667622d28"/>
        <function-ref name="reset" scoped="" ref="0x2b8667621238"/>
        <function-ref name="isOn" scoped="" ref="0x2b86676204a8"/>
        <function-ref name="set" scoped="" ref="0x2b8667622850"/>
        <function-ref name="start" scoped="" ref="0x2b86676216c0"/>
        <function-ref name="stop" scoped="" ref="0x2b8667621b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b866761b360" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b866761b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b8667618c20"/>
        <function-ref name="fired" scoped="" ref="0x2b8667619980"/>
        <function-ref name="get" scoped="" ref="0x2b8667619020"/>
        <function-ref name="reset" scoped="" ref="0x2b8667619e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b86676170f8"/>
        <function-ref name="set" scoped="" ref="0x2b86676194a8"/>
        <function-ref name="start" scoped="" ref="0x2b8667618310"/>
        <function-ref name="stop" scoped="" ref="0x2b8667618798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b8667617770" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b8667617770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b866766d020"/>
        <function-ref name="fired" scoped="" ref="0x2b8667616d08"/>
        <function-ref name="get" scoped="" ref="0x2b86676163a8"/>
        <function-ref name="reset" scoped="" ref="0x2b866766e1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b866766d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b8667616830"/>
        <function-ref name="start" scoped="" ref="0x2b866766e680"/>
        <function-ref name="stop" scoped="" ref="0x2b866766eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b866762a180" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b866762a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8667626270"/>
        <function-ref name="test" scoped="" ref="0x2b8667627930"/>
        <function-ref name="get" scoped="" ref="0x2b866762ad00"/>
        <function-ref name="setScale" scoped="" ref="0x2b86676266f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b8667626bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b8667628b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b86676286d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8667627db8"/>
        <function-ref name="set" scoped="" ref="0x2b86676281f8"/>
        <function-ref name="start" scoped="" ref="0x2b8667627020"/>
        <function-ref name="stop" scoped="" ref="0x2b86676274a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b86677226f0" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b86677226f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866771f020"/>
        <function-ref name="fired" scoped="" ref="0x2b8667720020"/>
        <function-ref name="startAt" scoped="" ref="0x2b8667720930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86677204a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b866771f4a8"/>
        <function-ref name="start" scoped="" ref="0x2b8667721578"/>
        <function-ref name="stop" scoped="" ref="0x2b8667721a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86676a5770" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86676a5770"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b866622a388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b866622a388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86676a5ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b86676a4020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86676a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b86676a00f8"/>
        <function-ref name="test" scoped="" ref="0x2b86676a17a8"/>
        <function-ref name="get" scoped="" ref="0x2b86676a4ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b86676a0580"/>
        <function-ref name="getScale" scoped="" ref="0x2b86676a0a58"/>
        <function-ref name="reset" scoped="" ref="0x2b86676a29e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b86676a2560"/>
        <function-ref name="isOn" scoped="" ref="0x2b86676a1c30"/>
        <function-ref name="set" scoped="" ref="0x2b86676a2088"/>
        <function-ref name="start" scoped="" ref="0x2b86676a2e70"/>
        <function-ref name="stop" scoped="" ref="0x2b86676a1320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b8668150bc8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b8668150bc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b866622a020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b866622a020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866814d270"/>
        <function-ref name="fired" scoped="" ref="0x2b866814e310"/>
        <function-ref name="startAt" scoped="" ref="0x2b866814ec20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866814e798"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b866814d6f8"/>
        <function-ref name="start" scoped="" ref="0x2b866814f948"/>
        <function-ref name="stop" scoped="" ref="0x2b866814fe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b8668148c68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b8668148c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b86681444a8"/>
        <function-ref name="fired" scoped="" ref="0x2b86681451d0"/>
        <function-ref name="get" scoped="" ref="0x2b8668147820"/>
        <function-ref name="reset" scoped="" ref="0x2b8668145658"/>
        <function-ref name="isOn" scoped="" ref="0x2b8668144930"/>
        <function-ref name="set" scoped="" ref="0x2b8668147ca8"/>
        <function-ref name="start" scoped="" ref="0x2b8668145ae0"/>
        <function-ref name="stop" scoped="" ref="0x2b8668144020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b866814dc18" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b866814dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b8668149db8"/>
        <function-ref name="test" scoped="" ref="0x2b86681494a8"/>
        <function-ref name="get" scoped="" ref="0x2b866814c820"/>
        <function-ref name="setScale" scoped="" ref="0x2b8668148270"/>
        <function-ref name="getScale" scoped="" ref="0x2b8668148748"/>
        <function-ref name="reset" scoped="" ref="0x2b866814a658"/>
        <function-ref name="overflow" scoped="" ref="0x2b866814a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b8668149930"/>
        <function-ref name="set" scoped="" ref="0x2b866814cca8"/>
        <function-ref name="start" scoped="" ref="0x2b866814aae0"/>
        <function-ref name="stop" scoped="" ref="0x2b8668149020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b866771b208" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b866771b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866771bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8667716020" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8667716020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667716d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b86677156b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8667715230"/>
        <function-ref name="overflow" scoped="" ref="0x2b8667715b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b8667713b90" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b8667713b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TOne" ref="0x2b86662fc9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667711930"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8667710270"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8667711db8"/>
        <function-ref name="overflow" scoped="" ref="0x2b86677106f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8667710c58" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8667710c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b866770cdb8"/>
        <function-ref name="test" scoped="" ref="0x2b866770c4a8"/>
        <function-ref name="get" scoped="" ref="0x2b866770f820"/>
        <function-ref name="setScale" scoped="" ref="0x2b866770b270"/>
        <function-ref name="getScale" scoped="" ref="0x2b866770b748"/>
        <function-ref name="reset" scoped="" ref="0x2b866770d658"/>
        <function-ref name="overflow" scoped="" ref="0x2b866770d1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b866770c930"/>
        <function-ref name="set" scoped="" ref="0x2b866770fca8"/>
        <function-ref name="start" scoped="" ref="0x2b866770dae0"/>
        <function-ref name="stop" scoped="" ref="0x2b866770c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b86677047f8" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b86677047f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667703578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8667702020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8667703a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b86677024a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b86677075a8" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b86677075a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86677063a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b8667706cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b8667706830"/>
        <function-ref name="overflow" scoped="" ref="0x2b8667704190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b86676ff020" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b86676ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86676ffba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b86676fe230" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b86676fe230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86676fd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b86676fd930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b86676fd4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b86676fddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b86677547d0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b86677547d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b7430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b86662b7788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b8667750578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b866773fe78" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b866773fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866773c1f8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866773c380"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866773c508"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b866773c690"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b866773c818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b866773b428" loc="43:../../../Orinoco/chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b866773b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866773b778"/>
        <function-ref name="headerLength" scoped="" ref="0x2b866773b900"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b866773ba88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b866773bc10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b866773bd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b86677bb0b8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b86677bb0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86677bb408"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677bb590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677bb718"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677bb8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86677bba28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b86677b2d58" loc="63:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b86677b2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86677ae0d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86677ae260"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677ae3e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677ae570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677ae6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b86677af520" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b86677af520"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b86677b30c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b866775bcd8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b866775bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866775a0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866775a228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866775a3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866775a538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866775a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoDissemination" ref="0x2b86677b4300" loc="54:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDissemination" scoped="" ref="0x2b86677b4300"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b86677b4650"/>
        <function-ref name="version" scoped="" ref="0x2b86677b47d8"/>
        <function-ref name="update" scoped="" ref="0x2b86677b4960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b86677aea50" loc="66:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b86677aea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86677ad020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677ad1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677ad330"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677ad4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86677ad640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b86677aa410" loc="76:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b86677aa410"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86677a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b86677bbd58" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b86677bbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86677ba0d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86677ba260"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677ba3e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677ba570"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677ba6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b866775b020" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b866775b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866775b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866775b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866775b680"/>
        <function-ref name="cancel" scoped="" ref="0x2b866775b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866775b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b86677b3878" loc="61:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b86677b3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86677b3bc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677b3d50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677b2020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677b21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86677b2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b86677ac060" loc="68:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b86677ac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86677ac3b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86677ac538"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677ac6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677ac848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677ac9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b866775aa20" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b866775aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866775ad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b866775e890" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b866775e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866775ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b86677b26a8" loc="62:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b86677b26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86677b29f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b86677b4e70" loc="55:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b86677b4e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b86677b84f0"/>
        <function-ref name="get" scoped="" ref="0x2b86677b9a18"/>
        <function-ref name="set" scoped="" ref="0x2b86677b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b86677ad9a0" loc="67:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b86677ad9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86677adcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b86677accb0" loc="73:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerC.nc">
      <component-ref qname="OrinocoDisseminationLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b86677accb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86677ab0a0"/>
        <function-ref name="source" scoped="" ref="0x2b86677ab228"/>
        <function-ref name="address" scoped="" ref="0x2b86677ab3b0"/>
        <function-ref name="destination" scoped="" ref="0x2b86677ab538"/>
        <function-ref name="setSource" scoped="" ref="0x2b86677ab6c0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b86677ab848"/>
        <function-ref name="type" scoped="" ref="0x2b86677ab9d0"/>
        <function-ref name="setType" scoped="" ref="0x2b86677abb58"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86677abce0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b86677abe68"/>
        <function-ref name="localGroup" scoped="" ref="0x2b86677aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataSend" ref="0x2b86677a3690" loc="15:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x2b86677a3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86677a39e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677a3b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677a3cf0"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677a3e78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86677a2030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationStatistics" ref="0x2b866779ee80" loc="24:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationStatistics" scoped="" ref="0x2b866779ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b8666d5db40"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b8666d5d688"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866779c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubPacket" ref="0x2b866779a400" loc="31:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubPacket" scoped="" ref="0x2b866779a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866779a850"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866779a9d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866779ab60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866779ace8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866779ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b866779f8a8" loc="21:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b866779f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b866779e458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconPacket" ref="0x2b86677a41c0" loc="11:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconPacket" scoped="" ref="0x2b86677a41c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86677a4510"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86677a4698"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677a4820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677a49a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677a4b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b8667796bb8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b8667796bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667795760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b86677991f0" loc="34:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b86677991f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667799540"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677996c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667799850"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677999d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667799b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataPacket" ref="0x2b86677a2360" loc="16:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataPacket" scoped="" ref="0x2b86677a2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b86677a26b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86677a2838"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677a29c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677a2b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677a2cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconSend" ref="0x2b86677a64d8" loc="10:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2b86677a64d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b86677a6828"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86677a69b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86677a6b38"/>
        <function-ref name="cancel" scoped="" ref="0x2b86677a6cc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86677a6e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b866779b020" loc="29:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b866779b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866779b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866779b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866779b680"/>
        <function-ref name="cancel" scoped="" ref="0x2b866779b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866779b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dissemination" ref="0x2b86677a1148" loc="19:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b86677a1148"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b86677a1498"/>
        <function-ref name="version" scoped="" ref="0x2b86677a1620"/>
        <function-ref name="update" scoped="" ref="0x2b86677a17a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubPacket" ref="0x2b86677986c0" loc="36:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubPacket" scoped="" ref="0x2b86677986c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667798a10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667798b98"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667798d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667797020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b86677971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DataReceive" ref="0x2b86677a3020" loc="14:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataReceive" scoped="" ref="0x2b86677a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86677a3370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconReceive" ref="0x2b86677a9e28" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2b86677a9e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86677a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b866779bd08" loc="30:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b866779bd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866779a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b86677a1cb8" loc="20:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b86677a1cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b866779f1f8"/>
        <function-ref name="get" scoped="" ref="0x2b86677a0870"/>
        <function-ref name="set" scoped="" ref="0x2b86677a0cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b8667798020" loc="35:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b8667798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667798370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b8667797468" loc="39:../../../Orinoco/lib/net/orinoco/OrinocoDisseminationLayerP.nc">
      <component-ref qname="OrinocoDisseminationLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b8667797468"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b86677977b8"/>
        <function-ref name="source" scoped="" ref="0x2b8667797940"/>
        <function-ref name="address" scoped="" ref="0x2b8667797ac8"/>
        <function-ref name="destination" scoped="" ref="0x2b8667797c50"/>
        <function-ref name="setSource" scoped="" ref="0x2b8667797dd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b8667796020"/>
        <function-ref name="type" scoped="" ref="0x2b86677961a8"/>
        <function-ref name="setType" scoped="" ref="0x2b8667796330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b86677964b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b8667796640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b86677967c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b86677fac98" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b86677fac98"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b8667828820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b8667825970" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b8667825970"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b8667825cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b8667826020" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorC.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b8667826020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b8667825558"/>
        <function-ref name="get" scoped="" ref="0x2b8667826ba0"/>
        <function-ref name="set" scoped="" ref="0x2b8667825088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Update" ref="0x2b866819ea60" loc="3:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Update" scoped="" ref="0x2b866819ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x2b866819d620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dissemination" ref="0x2b866819acf8" loc="8:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dissemination" scoped="" ref="0x2b866819acf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoDissemination"/>
      </instance>
      <interface-functions>
        <function-ref name="data" scoped="" ref="0x2b86681980a0"/>
        <function-ref name="version" scoped="" ref="0x2b8668198228"/>
        <function-ref name="update" scoped="" ref="0x2b86681983b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b8668198740" loc="9:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8668198740"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86681973a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Delay" ref="0x2b866819a6c0" loc="5:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Delay" scoped="" ref="0x2b866819a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationDelay"/>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b866819aa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Value" ref="0x2b866819dd78" loc="4:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Value" scoped="" ref="0x2b866819dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-tag size="I:32" alignment="I:1"><nx_struct-ref name="DdcForecastMsg" ref="0x2b86663eb148"/>
            <typename><typedef-ref name="DdcForecastMsg" ref="0x2b86663e9020"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x2b866819a2a8"/>
        <function-ref name="get" scoped="" ref="0x2b866819b928"/>
        <function-ref name="set" scoped="" ref="0x2b866819bdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="valueChangedTask" ref="0x2b8668197800" loc="25:../../../Orinoco/lib/net/orinoco/OrinocoDisseminatorP.nc">
      <component-ref qname="OrinocoDisseminationLayerC.Disseminator.OrinocoDisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="valueChangedTask" scoped="" ref="0x2b8668197800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8668197b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b8668197cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b866787bbb0" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b866787bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b866787a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendData" ref="0x2b866787ce80" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendData" scoped="" ref="0x2b866787ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866787b1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866787b380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866787b508"/>
        <function-ref name="cancel" scoped="" ref="0x2b866787b690"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866787b818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendData" ref="0x2b866787c158" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x2b866787c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866787c4a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866787c630"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866787c7b8"/>
        <function-ref name="cancel" scoped="" ref="0x2b866787c940"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866787cac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b86678769e8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b86678769e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667876d38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667875020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86678751a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667875330"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86678754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b866787abb8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b866787abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667876020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86678761a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667876330"/>
        <function-ref name="cancel" scoped="" ref="0x2b86678764b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667876640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b8667875da8" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b8667875da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8667874170"/>
        <function-ref name="rand32" scoped="" ref="0x2b86678742f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneTask" ref="0x2b866786ba80" loc="70:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneTask" scoped="" ref="0x2b866786ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b866786bdd0"/>
        <function-ref name="runTask" scoped="" ref="0x2b8667869020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoBackoffConfig" ref="0x2b86678757d0" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b86678757d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b8667875b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b8667874738" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8667874738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b8667871a18"/>
        <function-ref name="fired" scoped="" ref="0x2b8667872158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b8667872e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86678729f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b866786f2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b8667871e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86678725a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b8667873370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b8667871448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b8667873810"/>
        <function-ref name="stop" scoped="" ref="0x2b8667873cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b86678514c8" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b86678514c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b8667851818"/>
        <function-ref name="rand32" scoped="" ref="0x2b86678519a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b866784e348" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b866784e348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b8667851020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b8667854658" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b8667854658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86678549a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b86678ac208" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b86678ac208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b86678ac558"/>
        <function-ref name="rand32" scoped="" ref="0x2b86678ac6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b86678ad1e8" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b86678ad1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86678add30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b866784d938" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b866784d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b866784dc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b8667852ab8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoForwardLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b8667852ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b866789dd60"/>
        <function-ref name="fired" scoped="" ref="0x2b866789f470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b866789d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b866789fd10"/>
        <function-ref name="getdt" scoped="" ref="0x2b866789c648"/>
        <function-ref name="gett0" scoped="" ref="0x2b866789c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b866789f8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86678ae658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b866789d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86678aeaf8"/>
        <function-ref name="stop" scoped="" ref="0x2b866789f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b86678924e0" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b86678924e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667892830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b866789a968" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b866789a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866789acb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866789ae40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667897020"/>
        <function-ref name="cancel" scoped="" ref="0x2b86678971a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667897330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b8667897b98" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667897b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667896020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86678961a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667896330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86678964b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667896640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b8667896b28" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b8667896b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b8667894bc8"/>
        <function-ref name="init" scoped="" ref="0x2b86678946f0"/>
        <function-ref name="creationTime" scoped="" ref="0x2b86678930f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSubSend" ref="0x2b86678936b8" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSubSend" scoped="" ref="0x2b86678936b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667893a08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667893b90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667893d18"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667892020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b86678921a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b8667892b58" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b8667892b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667891020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86678911a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667891330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b86678914b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667891640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b86678975c0" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerC.nc">
      <component-ref qname="OrinocoPacketDelayLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b86678975c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667897910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b8667889020" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b8667889020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b8667889370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b86678894f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667889680"/>
        <function-ref name="cancel" scoped="" ref="0x2b8667889808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b8667889990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b8667889cc8" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b8667889cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b86678880a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b866788e2b8" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b866788e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b866788e608"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866788e790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866788e918"/>
        <function-ref name="cancel" scoped="" ref="0x2b866788eaa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b866788ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b866788d5f8" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b866788d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b866788d948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b866788dad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b866788dc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b866788dde0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b866788c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b866788c508" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b866788c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b866788b560"/>
        <function-ref name="init" scoped="" ref="0x2b866788b088"/>
        <function-ref name="creationTime" scoped="" ref="0x2b866788ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b86678883c8" loc="50:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b86678883c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667888718"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b86678888a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667888a28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667888bb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667888d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b866788d020" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b866788d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b866788d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b8667887220" loc="51:../../../Orinoco/lib/net/orinoco/OrinocoPacketDelayLayerP.nc">
      <component-ref qname="OrinocoPacketDelayLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b8667887220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667887da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b86678ba6e0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoRadioC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86678ba6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86678b6a18"/>
        <function-ref name="fired" scoped="" ref="0x2b86678b7158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86678b7e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86678b79f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b86678b52e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b86678b6e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86678b75a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86678b9370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86678b6448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86678b9810"/>
        <function-ref name="stop" scoped="" ref="0x2b86678b9cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b86678b4a10" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigC.nc">
      <component-ref qname="OrinocoConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b86678b4a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b86678b4d60"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b86678b1020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b86678b11a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b86678b1330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b86678b14b8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b86678b1640"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b86678b17c8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b86678b1950"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b86678b1ad8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b86678b1c60"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b86678b1de8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b86678b0020"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b86678b01a8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b86678b0430"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b86678b05b8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b86678b0740"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b86678b08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86679134a8" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86679134a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86679137f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b8667913ac8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b8667913ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getQueueLocalReserve" scoped="" ref="0x2b8667913e18"/>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b8667910020"/>
        <function-ref name="setQueueLocalReserve" scoped="" ref="0x2b86679101a8"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b8667910330"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b86679104b8"/>
        <function-ref name="setBackoffTime" scoped="" ref="0x2b8667910640"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b86679107c8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b8667910950"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b8667910ad8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b8667910c60"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b8667910de8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b866790f020"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b866790f1a8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b866790f430"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b866790f5b8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b866790f740"/>
        <function-ref name="getBackoffTime" scoped="" ref="0x2b866790f8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b866793bdf8" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b866793bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b8667938170"/>
        <function-ref name="setRoot" scoped="" ref="0x2b86679382f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b8667938480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b866793b460" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b866793b460"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b866793b7b0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b866793b938"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b866793bac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b8667935af0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b8667935af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b8667935e40"/>
        <function-ref name="setRoot" scoped="" ref="0x2b8667934020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b86679341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b8667935158" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b8667935158"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b86679354a8"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b8667935630"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b86679357b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b86679344a8" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b86679344a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b86679347f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b86679266e0" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="OrinocoP.SendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b86679266e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86665c8738"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b86665c8a90"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b8667974088"/>
        <function-ref name="enqueue" scoped="" ref="0x2b8667974d48"/>
        <function-ref name="element" scoped="" ref="0x2b86679723a8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b8667975c10"/>
        <function-ref name="dequeue" scoped="" ref="0x2b86679746e8"/>
        <function-ref name="empty" scoped="" ref="0x2b8667975370"/>
        <function-ref name="size" scoped="" ref="0x2b86679757c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b866794c478" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="OrinocoP.MsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b866794c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
            <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866794a3e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b866794b8c0"/>
        <function-ref name="empty" scoped="" ref="0x2b866794b020"/>
        <function-ref name="put" scoped="" ref="0x2b866794bd10"/>
        <function-ref name="size" scoped="" ref="0x2b866794b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b86681f5168" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b86681f5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
            <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b86681f30f8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b86681f45a8"/>
        <function-ref name="empty" scoped="" ref="0x2b86681f5cb0"/>
        <function-ref name="put" scoped="" ref="0x2b86681f49f8"/>
        <function-ref name="size" scoped="" ref="0x2b86681f4158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b86681f7a70" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b86681f7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b86681f7dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2b86679aed78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2b86679aed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b86665ca900"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b86665cadb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b86679ad8f0"/>
        <function-ref name="flush" scoped="" ref="0x2b866799c278"/>
        <function-ref name="lookup" scoped="" ref="0x2b86679add90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CacheCompare" ref="0x2b866799c7b8" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b866799c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b86665ca900"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b86665cadb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b866799b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b8667997d78" loc="46:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b8667997d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b86679960f0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b8667996278"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b8667996400"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b8667996588"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b8667996710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b8667997060" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b8667997060"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b86679973b0"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b8667997538"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b86679976c0"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8667997848"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b86679979d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b8667991240" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b8667991240"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b8667991590"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b8667991718"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b86679918a0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b8667991a28"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b8667991bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b866798f490" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b866798f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b866798e088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PktRateJobConfig" ref="0x2b8667990c58" loc="49:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b8667990c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b866798f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PktRateJob" ref="0x2b866798a700" loc="53:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJob" scoped="" ref="0x2b866798a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b866798aa50"/>
        <function-ref name="done" scoped="" ref="0x2b866798abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b8667993500" loc="47:../../../Orinoco/lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b8667993500"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b8667993850"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b86679939d8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b8667993b60"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8667993ce8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b8667993e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b86679cbc80" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b86679cbc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b86679f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b86679cb4c0" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b86679cb4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b86679cb810"/>
        <function-ref name="done" scoped="" ref="0x2b86679cb998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b86679bf3a0" loc="42:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b86679bf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b86679bf6f0"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b86679bf878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b86679c1030" loc="43:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b86679c1030"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="jobid_t" ref="0x2b86679942f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b86679c1380"/>
        <function-ref name="done" scoped="" ref="0x2b86679c1508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchTimer" ref="0x2b86679bbbb0" loc="50:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DispatchTimer" scoped="" ref="0x2b86679bbbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86679b7dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b86679b9510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86679b7238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86679b9db0"/>
        <function-ref name="getdt" scoped="" ref="0x2b86679b66c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b86679b6278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86679b9960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86679ba728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86679b7808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86679babc8"/>
        <function-ref name="stop" scoped="" ref="0x2b86679b90c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b86679bc420" loc="46:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b86679bc420"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b86679bc770"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b86679bc8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dispatch" ref="0x2b8667a17be0" loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dispatch" scoped="" ref="0x2b8667a17be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b8667a15020"/>
        <function-ref name="runTask" scoped="" ref="0x2b8667a151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b86679bb1c8" loc="47:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b86679bb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b86679bb518"/>
        <function-ref name="done" scoped="" ref="0x2b86679bb6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b86679fe8d8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="EASchedulerC.DispatchTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b86679fe8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b86662b9020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b86662b9378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b86679fabc0"/>
        <function-ref name="fired" scoped="" ref="0x2b86679fc238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b86679fa020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b86679fcad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b86679f94d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b86679f9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b86679fc688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b86679fd458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b86679fa5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b86679fd8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b86679fdd98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b86679f5530" loc="42:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <component-ref qname="EAEnergyManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f5530"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b86679f5880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b86679f4788" loc="44:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b86679f4788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b86679f4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b86679f02e8" loc="45:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b86679f02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b86679f0638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAScheduler" ref="0x2b86679f08f0" loc="46:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b86679f08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b86679f0c40"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b86679f0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b86679e49c0" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b86679e49c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b86679e4d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b8667a4c020" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b8667a4c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8667a37760" loc="45:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667a37760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667a37ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667a37c38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667a37dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667a36020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667a361a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667a37108" loc="42:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667a37108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667a37458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8667a31328" loc="47:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667a31328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667a31678"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667a31800"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667a31988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667a31b10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667a31c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b8667a308f8" loc="49:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b8667a308f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b8667a30c48"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b8667a30dd0"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b8667a2f020"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b8667a2f1a8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b8667a2f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667a32bc0" loc="44:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667a32bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667a31020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b8667a30020" loc="48:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b8667a30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8667a30370"/>
        <function-ref name="done" scoped="" ref="0x2b8667a304f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b8667a349c8" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a349c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b8667a34d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b8667a34208" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b8667a34208"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8667a34558"/>
        <function-ref name="done" scoped="" ref="0x2b8667a346e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b8667a24598" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a24598"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b8667a248e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b8667a24bd0" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a24bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b8667a23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b8667a22560" loc="42:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a22560"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b8667a228b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8667a19180" loc="45:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667a19180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667a194d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667a19658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667a197e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667a19968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667a19af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667a1dad8" loc="42:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667a1dad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667a1de28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b8667a81020" loc="47:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b8667a81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b8667a81370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b8667a814f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b8667a81680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b8667a81808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b8667a81990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStats" ref="0x2b8667a80738" loc="49:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStats" scoped="" ref="0x2b8667a80738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b8666d622a8"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b8666d32e20"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667a7f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b8667a18830" loc="44:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b8667a18830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b8667a18b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketStats" ref="0x2b8667a7faa0" loc="50:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStats" scoped="" ref="0x2b8667a7faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b8666d5eb10"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b8666d5e188"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667a7e620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DissStats" ref="0x2b8667a7ed88" loc="51:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DissStats" scoped="" ref="0x2b8667a7ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_dissemination_statistics_t" ref="0x2b8666d5db40"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref ref="0x2b8666d5d688"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b8667a7d908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b8667a81c10" loc="48:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b8667a81c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8667a80020"/>
        <function-ref name="done" scoped="" ref="0x2b8667a801a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b8667a6b020" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b8667a6b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b8667a82830" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b8667a82830"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b8667a82b80"/>
        <function-ref name="done" scoped="" ref="0x2b8667a82d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b8667a6ab28" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a6ab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b8667a6ae78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b8667a69190" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b8667a69190"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b8667a694e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b8667a68a00" loc="44:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b8667a68a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b8667a68d50"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b86663fe7d8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b86663fc4d0" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b8666404810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b86664045a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b8666406020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b8666406a18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b86664067a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b86664054d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8666405260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b8666405d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b8666417dc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b86664164c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b8666417070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b8666415290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8666417710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b8666416b80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666419328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b8666419998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b8666241378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b866624c258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b8666241a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b866624e070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b866624e860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b8666303e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b866631b4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b8666288940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b866631c020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2b86665ee420" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2b86665ef6b0" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2b86665efd70" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b8666602928" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666602380" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2b86666026a8" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2b8666606ae8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666606530" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666606868" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b86666032a0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666605b68" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2b8666603020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2b86665fae40" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665fabd0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b8666603c40" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86666039d0" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2b86666054e8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2b86665b68a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666605278" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b86665dcc20" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665dc9b0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b86665e7c30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665e79c0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b86665e5e78" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665e58b0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86665e5bc0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b86665e5020" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b86665e8020" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665e6a30" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86665e6d40" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b866662d4b8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b866662d4b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b866662dd48" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b86665f2d80" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
              <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665f2480" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b86665f27a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86665f2ab8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b86665dba48" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b86665db7d8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b86665dae38" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b86665dabc8" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b86665dec10" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86665da258" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueSend" loc="48:../../../Orinoco/interfaces/QueueSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b86665f9b80" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="50:../../../Orinoco/interfaces/QueueSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; messages was successfully stored in the sending queue and will&#10; be eventually sent/forwarded.&#10; There is no event signaled after packet sending.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted, EBUSY if&#10;                  the component cannot accept the request now but&#10;                  will be able to later, FAIL if the stack is in&#10;                  a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665f95f0" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86665f9900" loc="66:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b86665f6c18" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="81:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86665f6650" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86665f6960" loc="91:../../../Orinoco/interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b86665f7db0" loc="78:../../../Orinoco/interfaces/QueueSend.nc">
        <documentation loc="68:../../../Orinoco/interfaces/QueueSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b866662e290" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b8666617ad0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b8666616550" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b8666616c88" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b8666615420" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b86666142a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b86666138b0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8666611070" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b8666615b38" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666611b70" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b8666611900" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b86665fedf8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b8666614a18" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b8666613178" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b86665d70f0" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b86665d70f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b86665d1918" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b86665d44a8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b86665d2118" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b86665d3b18" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b86665d3e30" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b86665d33e0" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b86665cf878" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b86665cf070" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b86665d4c20" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b86665d7bc0" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b86665d7950" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b86665d1020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b86665d2a48" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b86665d2d60" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b86665d6628" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b86665d63b8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86665d6dd0" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b86665ddbd0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86665ec3a0" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b866661c468" loc="44:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b866661c468"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x2b8666618020" loc="69:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b866661ccc8" loc="55:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b866661c468"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666619708" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b866661c468"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x2b8666619498" loc="64:/opt/tinyos-2.1.2/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b866661c468"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoConfig" loc="42:../../../Orinoco/interfaces/OrinocoConfig.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <short>&#10; Orinoco Configuration&#10;&#10; </short>
        <long>&#10; Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getQueueLocalReserve" ref="0x2b866661f9e0" loc="90:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpInterval" ref="0x2b866660e338" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Ts" ref="0x2b866660e0c8" loc="44:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueueLocalReserve" ref="0x2b866661f290" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="r" ref="0x2b866661f020" loc="87:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMaxDwellTime" ref="0x2b866660ad80" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b866660ab10" loc="69:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinQueueSize" ref="0x2b8666620020" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b8666622cd0" loc="81:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setBackoffTime" ref="0x2b866661ead0" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bo" ref="0x2b866661e860" loc="96:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpDeviation" ref="0x2b866660dbe8" loc="56:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinDwellTime" ref="0x2b866660bca8" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b866660ba38" loc="63:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxDwellTime" ref="0x2b86666234f8" loc="72:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpDeviation" ref="0x2b866660d4b0" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="alpha" ref="0x2b866660d240" loc="53:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbsWakeUpDeviation" ref="0x2b866660b3a0" loc="60:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinQueueSize" ref="0x2b8666620738" loc="84:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumWaitingIntervals" ref="0x2b86666225f8" loc="78:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinDwellTime" ref="0x2b866660a478" loc="66:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpInterval" ref="0x2b866660ea78" loc="47:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNumWaitingIntervals" ref="0x2b8666623e40" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b8666623bd0" loc="75:../../../Orinoco/interfaces/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getBackoffTime" ref="0x2b866661e178" loc="93:../../../Orinoco/interfaces/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2b86666747e0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b86666747e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b866668c0d8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b86666747e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b866667a7b0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b866667a7b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b866667a9e0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b866667a9e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b86666772a8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b866667a9e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b8666676328" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b8666677ac0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b8666676a18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b86666693e8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b86666693e8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8666669618" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b866667e020" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b8666666070" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b86666655c0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b8666665020" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b8666665340" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b86666667e0" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b866667e7a0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8666668108" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b8666669e68" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666669618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86666688d8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b86666b3b40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b86666b4a30" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b866669b780" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b86666b33e0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b86666b3170" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b86666b42d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b86666b4060" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b86666b24e8" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b86666b2278" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b86666b5020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b86666b5948" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b86666b56d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b86666be328" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b86666c03a0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b86666c0ab8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b86666bf328" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b86666bead8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b86666bfaf8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b86666c11d8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b86662ce978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b86662ced80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b86666c1b90" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b86662ce978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b86662ced80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b86666c1920" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b86662ce978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b86662ced80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b86666af020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b86666af020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b86666ac738" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b86666ae9d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b86666af8d8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b86666af020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b86666ad110" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b86666aa020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b86666ae290" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b86666af020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b86666ae020" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b86666af020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b86666ad808" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86666ac020" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b8666690cf8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666690cf8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b86666a2290" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b86666a43e0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b86666a75f0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666690cf8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b86666a2be0" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b86666a2970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b86666a13a0" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b86666a6e60" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b86666a6740" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b86666a4b38" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b86666a6020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666690cf8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b86666a7cb8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b8666690cf8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b86666a5590" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86666a5c78" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8666835438" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8666838ae0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8666838e40" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b86668351a8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b86668327c0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86668321f8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666832508" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8666830978" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b86668346e8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666834478" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8666831b30" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666831588" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b86668318b0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b8666842680" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8666842410" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b866682a4f8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b866682a288" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b8666836a50" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b866682b4f8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b866682b288" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8666848c78" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b86668486c0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b86668489f8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b8666828840" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8666828288" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b86668285c0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b8666845290" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8666845020" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b86668445a0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8666844020" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b8666844320" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b86663c8848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8666846020" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b8666847d60" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b8666841a50" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b86668414a0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b86668417d0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b866683e818" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b866683c0a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866682cdd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b866683a290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866683a020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b8666839338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86668390c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8666855690" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666855100" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666855410" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b866684fa68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866684f4a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b866684f7b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8666850c70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8666852908" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666852698" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8666851cf8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666851750" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8666851a78" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b866692d2a0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866692eb70" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b866692d020" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b866692f458" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b866692e2a0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866692fc70" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b866692e020" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b866696bb60" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b866696b450" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b866694d1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b866694c528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b8666949020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b866694bd60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b866694cd40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b866694dcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b866694da58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b8666949818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b866694b5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b8666954020" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b86669548d8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b8666955668" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b86669553f8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b8666953430" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b86669531c0" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b8666951020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b8666951bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666951958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b866694f640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b866694f3d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8666a889b8" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8666a88418" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666a88738" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b8666a824a8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8666a82238" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8666a812a0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8666a82c20" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666a81020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b8666a841d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b8666a80a38" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8666a80160" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666a80480" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8666a807a8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b8666a84a50" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8666a862b0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b8666a85880" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666a85ba0" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b8666a86020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8666a8fbb0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8666a8f940" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b8666a8c9b0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b8666a8c3f8" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b8666a8c730" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b8666aa5578" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b8666aa6738" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b8666aa2c08" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666aa2998" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b8666aa4c08" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b8666aa97f8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b8666aa6020" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b8666aa6e58" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b8666aa5c58" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b8666aa4578" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666aa4308" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b8666aa2328" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b8666b91728" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b8666b8fa98" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b8666b92790" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b8666b8dc08" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b8666b8d4a8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b8666b8d238" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b8666b909d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8666b90760" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b8666b8c5b8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b8666b8c348" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b8666b91020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b8666b8f338" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8666b8f0c8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b8666b900a8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b8666b91de0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b8666b93338" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b8666b85d28" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b8666b85ab8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b8666b86c70" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8666b93bf0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b8666b87020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8666b89ca8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b8666b87760" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b8666b853e0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666b89570" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b8666b89300" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666b93338"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b8666b87e58" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b8666b86560" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8666c99ad8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b8666c94960" loc="73:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b8666c93aa0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8666c93830" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b8666cc64a8" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b8666cc6238" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b8666c94258" loc="65:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b8666c93110" loc="81:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666c99ad8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b8666c95328" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8666c95a58" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b8666cdc0a8" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b8666cdfe00" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2b8666d3e5c0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666d41bf0" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b8666d3e020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666d3e330" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketDelay" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/PacketDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8666d3d290" loc="40:../../../Orinoco/interfaces/PacketDelay.nc">
          <interfacedef-ref qname="PacketDelay"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8666d3d290"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="delay" ref="0x2b8666d386e0" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="46:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; @return packet delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666d38470" loc="52:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b8666d3dd10" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/PacketDelay.nc">
          <short>&#10; Initialize packet delay tracking by stamping packet with current time&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666d3daa0" loc="44:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="creationTime" ref="0x2b8666d36290" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
        <documentation loc="54:../../../Orinoco/interfaces/PacketDelay.nc">
          <short> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; </short>
          <long> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; @return locale time, at which the packet was created at its origin&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666d36020" loc="60:../../../Orinoco/interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficStatistics" loc="43:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
      <documentation loc="35:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date February 9th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRxBurst" ref="0x2b8666d65520" loc="52:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxBurst" ref="0x2b8666d31e28" loc="50:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktCreationIntvl" ref="0x2b8666d31020" loc="46:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktReceptionIntvl" ref="0x2b8666d31760" loc="48:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardDelay" ref="0x2b8666d65c28" loc="54:../../../Orinoco/interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueStatus" loc="41:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date September 2 2013&#10;</long>
      </documentation>
      <function event="" provided="0" name="dropped" ref="0x2b8666d52728" loc="60:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="56:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; signaled, if a new (remote) packet cannot be stored in the queue&#10; this event must only be signaled from Receive.receive() !&#10;</short>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="acceptsRemote" ref="0x2b8666d52020" loc="54:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
        <documentation loc="49:../../../Orinoco/lib/net/orinoco/QueueStatus.nc">
          <short>&#10; check if the queue accepts remote packets&#10;&#10; </short>
          <long>&#10; check if the queue accepts remote packets&#10;&#10; @return true, if accepting; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueStatus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8666d80800" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b8666d7c728" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b8666d79020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8666d7bd78" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b866594f488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b866594f488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b8666d78020" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b8666d79c50" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b8666d7c020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b8666d7b290" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d80800"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b8666d7d070" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8666d7d790" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CacheCompare" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b8666d54778" loc="41:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <interfacedef-ref qname="CacheCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b8666d54778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="equal" ref="0x2b8666d4f5b0" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
        <documentation loc="42:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
          <short>&#10; compare a cached element ce with another element cmp&#10;&#10; </short>
          <long>&#10; compare a cached element ce with another element cmp&#10;&#10; @param ce  element in cache&#10; @param cmp element for comparison&#10;&#10; @return true, if a == b; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="CacheCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b8666d54778"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b8666d54778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ce" ref="0x2b8666d4f020" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b8666d54778"/></type-var>
          </variable>
          <variable name="cmp" ref="0x2b8666d4f330" loc="50:../../../Orinoco/lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b8666d54778"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8666d754a0" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d754a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8666d6f3b0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d754a0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b8666d72cf8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b8666d75cc8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b8666d70718" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d754a0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b8666d704a8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d754a0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b8666d724e8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficUpdates" loc="43:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="updateRxBurst" ref="0x2b8666d98378" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b8666d98108" loc="56:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateForwardDelay" ref="0x2b8666d98ca0" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="done" ref="0x2b8666d98a30" loc="59:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTxBurst" ref="0x2b8666d99a18" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b8666d997a8" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktReceptionIntvl" ref="0x2b8666d99110" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktCreationIntvl" ref="0x2b8666d9c9b0" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b8666d4d2a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8666d4d2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b8666d4dab8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b8666d4d2a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b8666d6d8b8" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d6d8b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2b8666d6a338" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d6d8b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b8666d6a0c8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d6d8b8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b8666d68418" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2b8666d6acc8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d6d8b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b8666d6aa58" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b8666d6d8b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoPathCost" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCost" ref="0x2b8666dff880" loc="45:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b86665b5180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reviseCost" ref="0x2b8666dfc020" loc="48:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="inspectBeacon" ref="0x2b8666dfb0c8" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b86665b5180"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666dfc750" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cost" ref="0x2b8666dfcae0" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b86665b5180"/></typename>
            </type-int>
          </variable>
          <variable name="update" ref="0x2b8666dfcdf8" loc="52:../../../Orinoco/lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoBackoffConfig" loc="42:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
      <documentation loc="35:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <short>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; </short>
        <long>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; @author Christian Renner&#10; @date January 11 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMaximumBackoff" ref="0x2b8666e26510" loc="44:../../../Orinoco/lib/net/orinoco/OrinocoBackoffConfig.nc">
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b8666e14290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666e14020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b8666ec53c0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b8666ec8d80" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8666ec5140" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b8666ec1e18" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8666ec1e18"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8666ef0068" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666ef0068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b8666eeecf0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666ef0068"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666eeea80" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b8666eec020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666eefca8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b8666ef0b88" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ef0918" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666eeb2a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666ef0068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666eecc48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b8666eeb020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8666ef0068"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b8666ef8670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ef8400" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b8666ec0968" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ec0380" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b8666ec06e8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b8666ebf710" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ebf4a0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b8666ebec80" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ebe698" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b8666ebea00" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b8666ef75b8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666ef7348" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b8666ef4d48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b8666ef4590" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b8666ef4320" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b8666ef3580" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b8666f17e58" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b8666f17e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b8666f13dc8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f13b58" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8666f133d0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b8666f17e58"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f13160" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b8666f149a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f14738" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8666f11ab0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b8666f17e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f114e8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b8666f11830" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b8666f17e58"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b8666f250d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b8666f26178" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b8666f27848" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b8666f26900" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b8666f25ac0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b8666f20020" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f21cc8" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b8666f28bc8" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b8666f215b8" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f21348" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8666f1f988" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f1f398" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f1f708" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b8666f20cd8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f206e8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f20a58" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b8666f1dc30" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b86663c44c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f1d9c0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b8666f1c928" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b86663c44c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f1c348" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b8666f1c6a8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b86663c44c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8666f1d2d0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f1d060" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b8666f1b070" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b86663c44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b8666f54860" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f54278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b8666f545e0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b8666f52948" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f526d8" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b8666f55a60" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b8666f55108" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b8666f23e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b8666f2fa70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b8666f2f170" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b8666f2f4d0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666f2f7e0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b8666f2bdf0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f2b828" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b8666f2bb38" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8666f2b020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8666f2e7e8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f2e578" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b8666f2c6e8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f2c140" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8666f2c468" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b8666f8e5e0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b8666f62290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f62020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b8666f912d0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f91060" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b8666f909b8" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f90748" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b8666f94c30" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f949c0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b8666f95538" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f952c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b8666f93900" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f93348" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f93680" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b8666f942a0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f95c40" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f94020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b8666f90020" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f919a0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b8666f91cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b8666f65e58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b8666f5b790" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b8666f598e8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f59678" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b8666f5a290" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f5a020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b8666f5ad18" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f5aaa8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b8666fafb28" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b8666fb1ca8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b8666fb1a38" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8666faf420" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b8666fb1258" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b8666fae328" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b86663b7540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b8666fa8468" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666fa81f8" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b8666fac968" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666fac6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8666fa9020" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b8666faa710" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666faa160" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b8666faa490" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b8666fb3e48" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666fb3bd8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b8666fa9a38" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666fa97c8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b8666f38640" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b8666f3be50" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f3bbe0" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b8666f75290" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f75020" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b8666f75ac8" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b8666f74608" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f74398" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b8666f6ac50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f6a9e0" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b8666f6b178" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b8666f6c9b0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666f6c3d0" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f6c730" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b8666f707a8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f70538" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b8666f6f290" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f6f020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b8666f6d118" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666f6fb10" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f6fe70" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b8666f71020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b8666f71d28" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f717b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f71aa8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b8666f6dc08" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f6d998" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b8666f7e4e8" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7e278" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b8666f81cc8" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f81a58" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b8666f8bb88" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f8b5e8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b8666f8b908" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b8666f89b18" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f898a8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b8666f792a0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7aba0" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f79020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b8666f890a8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f8adf8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b8666f7fa78" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7f4e8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b8666f7f7f8" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b8666f86418" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666f87df0" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f86198" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b8666f7a468" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7a1f8" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b8666f8a5f0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f8a380" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b8666f85d28" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f85ab8" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b8666f852a0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8666f86c68" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f85020" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b8666f767c0" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b86663c48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b8666f79ca0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f79a30" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b8666f76030" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b86663c44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b8666f7ba20" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7b470" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b8666f7b7a0" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b8666f875f0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f87380" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b8666f812e0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f82ce0" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b8666f81060" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b8666f7d2a0" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7ec40" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b8666f7d020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b8666fb5290" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666fb5020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b8666f83a78" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f83500" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b8666f837f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b8666f57e48" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f57bd8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b8666f777b8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f77548" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b8666f7dca8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f7da38" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b8666f82538" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f822c8" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b8666f67a60" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f674b0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b8666f677e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b8666f66258" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b8666f68290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f68020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b8666f68cb0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f68a40" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b8666f5f338" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f5f0c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b8666f60820" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f605b0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b8666f5fb20" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b8666f5e5b8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8666f5e348" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b8666ffda18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b8666ffc328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b8666ffcc40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b8666ffd328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b866704c8c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866704c658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b8667048290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8667048020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b86670497a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b86670491f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b8667049520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b866704bc10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
              <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866704b968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b86670768f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b86670747c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b86670740d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b8667076118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b8667079ae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b86663c8bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b8667079e20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b8667122c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b866711f580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b866711abf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b866711a440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b866711d360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b866711db50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b8667111ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b866711bc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b8667111858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b866711bc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b8667116ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b86671125e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b866711bc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b8667112378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b866711bc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b8667111020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b866711bc40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b8667289e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
              <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8667289bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b8667289290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8667289020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b8667277020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b8667278ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b8667277790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8667280cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b8667280a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b8667278640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b86672783d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b866727d020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b866727ed80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b866727c4e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b866727c270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b866727dab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b866727d840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b866727a020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b866727cce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b866727e5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b866727e340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b86663c7020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b866731c428" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b866731a4a0" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b8667319020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b866731ac38" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b8667319780" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b866731cc58" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b8667318020" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b866731ec50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866731e9e0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b8667314020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b86673157b8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8667315548" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b866738de50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866738dbe0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b8667391dd0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b8667391b60" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b866738eab0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866738e520" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b866738e830" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b866738d4e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b866738d278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b86663e2510"/>
                <typename><typedef-ref name="message_t" ref="0x2b86663e0aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b86674013e8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b8667401178" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b86674049c8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b8667415908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b8667415908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b8667415b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8667415b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b8667464630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8667415b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b86674643c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b8667415b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b86674671d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b8667466290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b8667467b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b8667467890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b86674169a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b866741a020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b866741dce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b8667419338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b86674190c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b866741a820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8667419d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8667419ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b866755e6b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b8667561d58" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b866755e100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b866755e420" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b866755ca48" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b866755bda0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b866755c140" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b866755c460" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b866755c7a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b8667563b98" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b8667563928" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b8667547020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b866753ea60" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b8667542538" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b866753d458" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b866753d1e8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b8667548880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b866753f108" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b8667540e18" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b8667544d50" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b8667544ae0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b8667545020" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b866758fb98" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b866758f928" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b86675434d0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b866753b4b0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b866753b240" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b8667590360" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b866753e338" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b866753e0c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b866758f258" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b8667540020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b8667542c18" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b8667545978" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b8667545708" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b8667543de0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b8667543b70" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b866753f918" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b866753db60" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b866753bba0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b8667590aa8" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b8667540738" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b86662239b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b8667547738" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b8667544338" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b86675440c8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b86675e4748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b86675e3020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b86677b1020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b86677b1020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x2b86677b1da0" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b86677b1020"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b86677b1b30" loc="60:/opt/tinyos-2.1.2/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b86677b1020"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoDissemination" loc="9:../../../Orinoco/interfaces/OrinocoDissemination.nc">
      <documentation loc="1:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <short>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.</short>
        <long>&#10; This interface resides between the Orinoco Dissemination &#10; layer and the actual dissemination storage instance.&#10; The dissemination layer only attaches version numbers to &#10; outgoing data packets and receives updates piggy-backed on&#10; incoming beacons and informs the data storage layer.&#10;</long>
      </documentation>
      <function event="" provided="0" name="data" ref="0x2b86677b7e78" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="15:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get data (reference) from owner to send in &#10; outgoing beacon&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x2b86677b7bd0" loc="19:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="version" ref="0x2b86677b74a8" loc="13:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="10:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; get current version from data owner&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="update" ref="0x2b86677b4020" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
        <documentation loc="21:../../../Orinoco/interfaces/OrinocoDissemination.nc">
          <short>&#10; signal there is a new update&#10; the user must copy the data out&#10;</short>
        </documentation>
        <interfacedef-ref qname="OrinocoDissemination"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rversion" ref="0x2b86677b6568" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
          <variable name="rdata" ref="0x2b86677b6900" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x2b86677b6c20" loc="25:../../../Orinoco/interfaces/OrinocoDissemination.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b8665954160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationDelay" loc="40:../../../Orinoco/interfaces/DisseminationDelay.nc">
      <documentation loc="35:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="delay" ref="0x2b86677f3328" loc="47:../../../Orinoco/interfaces/DisseminationDelay.nc">
        <documentation loc="41:../../../Orinoco/interfaces/DisseminationDelay.nc">
          <short> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total delay, i.e., the time elapsed since&#10; data creation and the current time&#10;&#10; @return data delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b8665954b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b866784f218" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b866784f218"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b866784fcc0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b8666248ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b866784f218"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b866784fa50" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b866784f218"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAPeriodicJobConfig" loc="40:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPeriod" ref="0x2b86679908b8" loc="41:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJob" loc="40:../../../EAJobs/interfaces/EAJob.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJob.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b866798ecd0" loc="43:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b866798a3a0" loc="47:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJobConfig" loc="40:../../../EAJobs/interfaces/EAJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b86679c7b00" loc="43:../../../EAJobs/interfaces/EAJobConfig.nc">
        <interfacedef-ref qname="EAJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="ea_generic_jobconfig_t" ref="0x2b86679ca078"/>
              <typename><typedef-ref name="ea_generic_jobconfig_t" ref="0x2b86679ca690"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAScheduler" loc="42:../../../EAJobs/interfaces/EAScheduler.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAScheduler.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="jobStarted" ref="0x2b86679bf108" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b86679942f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b86679c0e40" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b86679942f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleJob" ref="0x2b86679c07d8" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b86679942f8"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b86679c0240" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b86679942f8"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b86679c0558" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b8665955608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
