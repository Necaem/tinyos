<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="46:SinkC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0a6ff4e220"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0a700d70f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0a700d70f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0a700d3c30"/></to>
    </wire>
    <wire loc="49:SinkC.nc">
      <from><interface-ref name="AliveTimer" scoped="" ref="0x2b0a6ff68810"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70293a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70293a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:SinkC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b0a6ff53c48"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0a70464e20"/></to>
    </wire>
    <wire loc="78:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b0a70464e20"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0a704897b0"/></to>
    </wire>
    <wire loc="53:SinkC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x2b0a6ff559d0"/></from>
      <to><interface-ref name="ForwardingControl" scoped="" ref="0x2b0a70461858"/></to>
    </wire>
    <wire loc="79:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="ForwardingControl" scoped="" ref="0x2b0a70461858"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0a70489020"/></to>
    </wire>
    <wire loc="54:SinkC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b0a6ff39530"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x2b0a704600e0"/></to>
    </wire>
    <wire loc="90:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b0a704600e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a70544d30"/></to>
    </wire>
    <wire loc="55:SinkC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a6ff578c8"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70476590"/></to>
    </wire>
    <wire loc="105:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70476590"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f72740"/></to>
    </wire>
    <wire loc="57:SinkC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b0a6fffe930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a7045f1c8"/></to>
    </wire>
    <wire loc="82:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a7045f1c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a704886d0"/></to>
    </wire>
    <wire loc="58:SinkC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0a6ffe7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7045d020"/></to>
    </wire>
    <wire loc="83:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7045d020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a70486538"/></to>
    </wire>
    <wire loc="59:SinkC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a6ffd9688"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7045b2c8"/></to>
    </wire>
    <wire loc="80:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a7045b2c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a70484348"/></to>
    </wire>
    <wire loc="60:SinkC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a6fff72b8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a7047b020"/></to>
    </wire>
    <wire loc="81:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a7047b020"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a70483020"/></to>
    </wire>
    <wire loc="61:SinkC.nc">
      <from><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0a7008e340"/></from>
      <to><interface-ref name="PacketDelay" scoped="" ref="0x2b0a70479020"/></to>
    </wire>
    <wire loc="87:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketDelay" scoped="" ref="0x2b0a70479020"/></from>
      <to><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0a70482060"/></to>
    </wire>
    <wire loc="64:SinkC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b0a6ff4b898"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a710d6310"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a710d6310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a7111b2e8"/></to>
    </wire>
    <wire loc="66:SinkC.nc">
      <from><interface-ref name="UartSend" scoped="" ref="0x2b0a6ffd3b48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a710d52b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0a710d52b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a710ccb60"/></to>
    </wire>
    <wire loc="68:SinkC.nc">
      <from><interface-ref name="UartPacket" scoped="" ref="0x2b0a6ffda808"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a710d49a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a710d49a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a71122578"/></to>
    </wire>
    <wire loc="69:SinkC.nc">
      <from><interface-ref name="UartAMPacket" scoped="" ref="0x2b0a6ffdb020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a710d25e0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0a710d25e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a71123020"/></to>
    </wire>
    <wire loc="72:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a7149bdf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7045b2c8"/></to>
    </wire>
    <wire loc="73:SinkC.nc">
      <from><interface-ref name="OrinocoStatsReportingMsg" scoped="" ref="0x2b0a6ffffaf8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7149b798"/></to>
    </wire>
    <wire loc="67:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7149b798"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a71492288"/></to>
    </wire>
    <wire loc="76:SinkC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a7147c328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7045b2c8"/></to>
    </wire>
    <wire loc="77:SinkC.nc">
      <from><interface-ref name="OrinocoDebugReportingMsg" scoped="" ref="0x2b0a7008d240"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a71499c18"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a71499c18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a71474020"/></to>
    </wire>
    <wire loc="80:SinkC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a7008c020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a70f97230"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a70f97230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a70f93ab8"/></to>
    </wire>
    <wire loc="113:SinkP.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x2b0a7009d0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b0a71344020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b0a71342e30"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a712f8120"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a7111eb98"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a71b35b40"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70f6ead8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70f435f0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a71a50140"/></to>
    </wire>
    <wire loc="119:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a70b691b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a719d7430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a709cf238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a71993de8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a718f2c38"/></to>
    </wire>
    <wire loc="86:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a7048a8e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a7029c300"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0a70287308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0a6fe425c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b0a6fe425c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b0a6feedd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70287ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70c5a870"/></to>
    </wire>
    <wire loc="122:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70287ce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70b6b660"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70287ce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a700d6bf0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a700d6bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a700dc4f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a70286418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0a700d19a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a71469020"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0a700d19a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70df3190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a700dfb98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a70256ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b0a700db398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a702564b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0a700dcb90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70fbe020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b0a700dcb90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0a700dea08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b0a700dea08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b0a700e5428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0a700e8108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0a700d19a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b0a700f15f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b0a700fb1a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b0a700fb1a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a7017d430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b0a700e47f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b0a700e8108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b0a7012dc78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7020c520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b0a7010b7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a701ac020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a701ac020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71615480"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b0a701277e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a701b1d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a701b1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7167b480"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b0a701324d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a701ce8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a701ce8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716e8480"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b0a7013baf0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a70223c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b0a700f94d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a7017b740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a7017b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7153e480"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b0a701201a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a701d05b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a701d05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716ee480"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b0a7010a7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a70189930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a70189930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7154e3e0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b0a70113968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a701a4740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a701a4740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715ac480"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b0a7011cc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a701a9430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a701a9430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7160c480"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b0a70124c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a701c3120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a701c3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716dc480"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b0a700ffc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a70181020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a70181020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714e6480"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b0a70107c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a70186d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a70186d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71545480"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b0a70110e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a701a1bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a701a1bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71609480"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b0a701171a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a701bb8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a701bb8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7166a480"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b0a7012f968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a701cbd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a701cbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716df480"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b0a701297e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7022dc38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b0a701154d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a701b4a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a701b4a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71681480"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a7017d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714dd480"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b0a70103348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a70198120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a70198120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715a0480"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b0a7012b4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a70220cd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b0a70101658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a70190500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a70190500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715b23e0"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b0a7011e968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a701ab120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a701ab120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71612480"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b0a70126968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a701c6e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a701c6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71678480"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b0a70131658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a701cda50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a701cda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716e5480"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b0a700f8658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a7017a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a7017a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7153b480"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b0a70109968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a70188a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a70188a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7154b480"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b0a70112af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a701a38c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a701a38c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715a9480"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b0a7011be00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a701a85b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a701a85b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71671480"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b0a70123e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a701c22a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a701c22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716d8480"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b0a700fee00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a70180120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a70180120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714e3480"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b0a70106e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a70185e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a70185e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71542480"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b0a7010e020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a701a0d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a701a0d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71605480"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b0a7012eaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a701cae18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a701cae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71746480"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b0a7010c348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a701aee40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a701aee40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716183e0"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b0a70128658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a701b3bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a701b3bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7167e480"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b0a7011f348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a701cf740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a701cf740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716eb480"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b0a7013c968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a702283e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b0a700fa348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a7017c5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a7017c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714d9480"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b0a701024d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a701972a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a701972a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7159d480"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b0a70121020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a701d1500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a701d1500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716f13e0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b0a701147e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b0a701a55b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b0a701a55b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715af480"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b0a7011daf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a701aa2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a701aa2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7160f480"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b0a70125af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a701c4020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a701c4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71675480"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b0a701307e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a701ccbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a701ccbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716e2480"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b0a700e7a70"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a70183dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a70183dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714e9448"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b0a70108af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b0a70187bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b0a70187bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71548480"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b0a70111c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b0a701a2a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b0a701a2a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715a6480"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b0a70118020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b0a701a6740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b0a701a6740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7166d480"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b0a7012a658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a7021a3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b0a70116348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b0a701b5930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b0a701b5930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a716843e0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b0a7010d1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b0a7019fe18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b0a7019fe18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a71602480"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b0a700fc020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b0a7017e2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b0a7017e2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a714e0480"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b0a70104100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b0a70199020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b0a70199020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b0a715a3480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6feecc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b0a6fef6168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b0a6fe41e30"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0a6ff11988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0a7036e0c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0a7029b020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b0a7029b020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a704485e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a7029c300"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a702aec08"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a702ad590"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70459128"/></to>
    </wire>
    <wire loc="37:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a702aec08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a703c9c20"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b0a70442858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a703f4ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a703efc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0a702bb748"/></to>
    </wire>
    <wire loc="38:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0a702bb748"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a703c8478"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a70450330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b0a702b4e40"/></to>
    </wire>
    <wire loc="39:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b0a702b4e40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a703c4608"/></to>
    </wire>
    <wire loc="40:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b0a702cb1e0"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b0a703c1670"/></to>
    </wire>
    <wire loc="72:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="GetNow" scoped="" ref="0x2b0a703c1670"/></from>
      <to><interface-ref name="GetNow" scoped="" ref="0x2b0a717c6058"/></to>
    </wire>
    <wire loc="71:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a703c4608"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a717c8020"/></to>
    </wire>
    <wire loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a703c9c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a717cd600"/></to>
    </wire>
    <wire loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a703c8478"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a717cdda8"/></to>
    </wire>
    <wire loc="75:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a717c41a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a7034f180"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a7034f180"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a7035da70"/></to>
    </wire>
    <wire loc="76:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7182e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7034a160"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7034a160"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70358a98"/></to>
    </wire>
    <wire loc="77:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a7182d228"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0a703494e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a703494e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0a70357e18"/></to>
    </wire>
    <wire loc="78:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0a718292a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0a703617b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b0a703617b0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b0a7036e7c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b0a703eccf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b0a7043d930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2b0a70478b48"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2b0a70485d00"/></to>
    </wire>
    <wire loc="64:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a70544d30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a70550d50"/></to>
    </wire>
    <wire loc="84:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0a7045dbb8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a704851c8"/></to>
    </wire>
    <wire loc="123:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b0a7046f9c0"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b0a7102a820"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Stats" scoped="" ref="0x2b0a7102a820"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b0a71026dd0"/></to>
    </wire>
    <wire loc="49:../../lib/net/orinoco/OrinocoConfigC.nc">
      <from><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f72740"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f6b148"/></to>
    </wire>
    <wire loc="91:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a7049d5b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a705417f8"/></to>
    </wire>
    <wire loc="65:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a705417f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7054f7f8"/></to>
    </wire>
    <wire loc="92:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a7049a358"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7053f080"/></to>
    </wire>
    <wire loc="67:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7053f080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7054d080"/></to>
    </wire>
    <wire loc="93:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a70491648"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a70540420"/></to>
    </wire>
    <wire loc="66:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a70540420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a7054e420"/></to>
    </wire>
    <wire loc="96:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a7049fb98"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a7053f8b0"/></to>
    </wire>
    <wire loc="100:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a7053f8b0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70676d80"/></to>
    </wire>
    <wire loc="97:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a704b45e8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a7053eb38"/></to>
    </wire>
    <wire loc="102:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a7053eb38"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a70b46880"/></to>
    </wire>
    <wire loc="98:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a704ceaa8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a7055e130"/></to>
    </wire>
    <wire loc="83:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a7055e130"/></from>
      <to><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b0a706122f0"/></to>
    </wire>
    <wire loc="101:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0a704bddb0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b14790"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b14790"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a702ad590"/></to>
    </wire>
    <wire loc="106:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a704ca518"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f72740"/></to>
    </wire>
    <wire loc="109:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b0a70fa9358"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0a704897b0"/></to>
    </wire>
    <wire loc="110:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a7055a080"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a70fac8d8"/></to>
    </wire>
    <wire loc="50:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a70fac8d8"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a70ff8650"/></to>
    </wire>
    <wire loc="113:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2b0a70499020"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b0a70faa990"/></to>
    </wire>
    <wire loc="116:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="MsgPool" scoped="" ref="0x2b0a704a8270"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b0a71017b58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2b0a71017b58"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2b0a71b33370"/></to>
    </wire>
    <wire loc="119:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="PacketHistory" scoped="" ref="0x2b0a704a0020"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2b0a7103d4a0"/></to>
    </wire>
    <wire loc="120:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="CacheCompare" scoped="" ref="0x2b0a7102c020"/></from>
      <to><interface-ref name="CacheCompare" scoped="" ref="0x2b0a7047dcf0"/></to>
    </wire>
    <wire loc="124:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a704c46c0"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b0a71027560"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="Updates" scoped="" ref="0x2b0a71027560"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b0a71023b38"/></to>
    </wire>
    <wire loc="125:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a7055aad0"/></from>
      <to><interface-ref name="Updates" scoped="" ref="0x2b0a71027560"/></to>
    </wire>
    <wire loc="126:../../lib/net/orinoco/OrinocoP.nc">
      <from><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0a705598e8"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b0a7102a820"/></to>
    </wire>
    <wire loc="147:../../lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b0a704dc190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:../../lib/net/orinoco/OrinocoQueueP.nc">
      <from><interface-ref name="selfReceiveTask" scoped="" ref="0x2b0a704c1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a70b46880"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a70b60880"/></to>
    </wire>
    <wire loc="80:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b0a706122f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70643510"/></to>
    </wire>
    <wire loc="310:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70676d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b3f830"/></to>
    </wire>
    <wire loc="68:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PathCost" scoped="" ref="0x2b0a70581230"/></from>
      <to><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a7055a080"/></to>
    </wire>
    <wire loc="69:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a7057a8a8"/></from>
      <to><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a7055aad0"/></to>
    </wire>
    <wire loc="70:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b0a7057ba40"/></from>
      <to><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0a705598e8"/></to>
    </wire>
    <wire loc="74:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b0a7056f020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a705f7bc0"/></to>
    </wire>
    <wire loc="67:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a705f7bc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a706306e8"/></to>
    </wire>
    <wire loc="75:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70568ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a70617430"/></to>
    </wire>
    <wire loc="74:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a70617430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a706295f8"/></to>
    </wire>
    <wire loc="76:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2b0a70567990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a70614080"/></to>
    </wire>
    <wire loc="75:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0a70614080"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a706282c0"/></to>
    </wire>
    <wire loc="77:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0a70565020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7061bdc0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0a70565020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a70619968"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubReceive" scoped="" ref="0x2b0a705656d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7061bdc0"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0a70565d70"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a7061cc30"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="DataSubSend" scoped="" ref="0x2b0a70564b40"/></from>
      <to><interface-ref name="SendData" scoped="" ref="0x2b0a70f2a7c8"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SendData" scoped="" ref="0x2b0a70f2a7c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a70f232d0"/></to>
    </wire>
    <wire loc="86:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="SubSendData" scoped="" ref="0x2b0a70f27560"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a7061cc30"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70f263b8"/></from>
      <to><interface-ref name="BackoffConfig" scoped="" ref="0x2b0a7056e490"/></to>
    </wire>
    <wire loc="97:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70563b58"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70662518"/></to>
    </wire>
    <wire loc="307:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70662518"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b43d70"/></to>
    </wire>
    <wire loc="98:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7055f020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7067ed28"/></to>
    </wire>
    <wire loc="308:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7067ed28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b49388"/></to>
    </wire>
    <wire loc="105:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a7056fbd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70f78498"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70f78498"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70581c00"/></from>
      <to><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f72740"/></to>
    </wire>
    <wire loc="111:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b0a7057caf8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0a70f47080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b0a70f47080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0a70f41020"/></to>
    </wire>
    <wire loc="115:../../lib/net/orinoco/OrinocoRadioC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a7057e298"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a70f97230"/></to>
    </wire>
    <wire loc="200:../../lib/net/orinoco/OrinocoRadioP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x2b0a705877f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a706306e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a7063b7a0"/></to>
    </wire>
    <wire loc="79:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a7060c190"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a7063f478"/></to>
    </wire>
    <wire loc="101:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a7063f478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70672130"/></to>
    </wire>
    <wire loc="72:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70615e18"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70629020"/></to>
    </wire>
    <wire loc="83:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70629020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70634020"/></to>
    </wire>
    <wire loc="69:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0a7061cc30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a7062d798"/></to>
    </wire>
    <wire loc="80:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0a7062d798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a70638798"/></to>
    </wire>
    <wire loc="71:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0a70619968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a7062a498"/></to>
    </wire>
    <wire loc="82:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0a7062a498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a70636498"/></to>
    </wire>
    <wire loc="85:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a706295f8"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0a70659550"/></to>
    </wire>
    <wire loc="70:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7061bdc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7062c928"/></to>
    </wire>
    <wire loc="81:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7062c928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a70637928"/></to>
    </wire>
    <wire loc="77:../../platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0a7060f588"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0a706279a8"/></to>
    </wire>
    <wire loc="94:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0a706279a8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70667968"/></to>
    </wire>
    <wire loc="86:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0a706282c0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a70633e50"/></to>
    </wire>
    <wire loc="102:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70643510"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70678190"/></to>
    </wire>
    <wire loc="217:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a7063b7a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a14020"/></to>
    </wire>
    <wire loc="98:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70621d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7067ed28"/></to>
    </wire>
    <wire loc="125:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70634020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0a708261a0"/></to>
    </wire>
    <wire loc="127:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0a70659550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a707fa700"/></to>
    </wire>
    <wire loc="122:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0a70638798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a70829510"/></to>
    </wire>
    <wire loc="124:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0a70636498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a70828aa0"/></to>
    </wire>
    <wire loc="97:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a706238d8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70681870"/></to>
    </wire>
    <wire loc="306:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70681870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70b4d060"/></to>
    </wire>
    <wire loc="123:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a70637928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a70828388"/></to>
    </wire>
    <wire loc="271:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70678190"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70b0b7d8"/></to>
    </wire>
    <wire loc="100:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a706440f0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70676d80"/></to>
    </wire>
    <wire loc="96:../../chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70626528"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70662518"/></to>
    </wire>
    <wire loc="226:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70667968"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70abc268"/></to>
    </wire>
    <wire loc="126:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0a70633e50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a707fb1f0"/></to>
    </wire>
    <wire loc="272:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70672130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70b0fa48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a14020"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b0a70a48490"/></to>
    </wire>
    <wire loc="86:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b49388"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b62388"/></to>
    </wire>
    <wire loc="161:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b0a70656218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0a708d0b50"/></to>
    </wire>
    <wire loc="149:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b0a70650208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a708a0748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0a708a0748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a718ee100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b0a708261a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b0a718d4020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b0a70829510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b0a718d7388"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b0a70828aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b0a718d67e0"/></to>
    </wire>
    <wire loc="162:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a7064a020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a709a0900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a709a0900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a7196da88"/></to>
    </wire>
    <wire loc="163:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b0a706493d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7089bb38"/></to>
    </wire>
    <wire loc="83:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70b4d060"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70b65060"/></to>
    </wire>
    <wire loc="218:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a70663d10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a70a49888"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a70a49888"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a719df5e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a707fa700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a718d8578"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a70828388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a718d60c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70b0b7d8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a71a0dc48"/></to>
    </wire>
    <wire loc="79:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b3f830"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e76ba8"/></to>
    </wire>
    <wire loc="92:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b43d70"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b5dd70"/></to>
    </wire>
    <wire loc="159:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a70651d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a708d1888"/></to>
    </wire>
    <wire loc="129:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a70634be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a708268b8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a708268b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a718d4738"/></to>
    </wire>
    <wire loc="188:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b0a7065bb40"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b0a709fab50"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b0a709fab50"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b0a70a2dd28"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70abc268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b0a719d69c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b0a707fb1f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b0a718d9020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70b0fa48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a71a0f020"/></to>
    </wire>
    <wire loc="160:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a70657af0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a708d05b8"/></to>
    </wire>
    <wire loc="309:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70676570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70b3f020"/></to>
    </wire>
    <wire loc="94:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70b3f020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70b59020"/></to>
    </wire>
    <wire loc="130:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a70633860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a70825020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a70825020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a718d4e50"/></to>
    </wire>
    <wire loc="103:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a706d0d58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a709a3980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a709a3980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a71971b00"/></to>
    </wire>
    <wire loc="104:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a706c9bd8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70742c50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a706c2020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70b0b7d8"/></to>
    </wire>
    <wire loc="106:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b0a706c3e08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b4e020"/></to>
    </wire>
    <wire loc="70:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b4e020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b66020"/></to>
    </wire>
    <wire loc="111:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a7076ec68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a70b3eae0"/></to>
    </wire>
    <wire loc="100:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a70b3eae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a70c622e0"/></to>
    </wire>
    <wire loc="117:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70823328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b0a706c1760"/></to>
    </wire>
    <wire loc="118:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a70824430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b0a7081c100"/></to>
    </wire>
    <wire loc="119:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a70824d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b0a708f7430"/></to>
    </wire>
    <wire loc="120:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70825678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b0a708f7a08"/></to>
    </wire>
    <wire loc="138:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0a7083d3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a708a0748"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a7081ca48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b0a708f8a50"/></to>
    </wire>
    <wire loc="154:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a708cf2c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a709a3980"/></to>
    </wire>
    <wire loc="155:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a708cb0a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a708c4d20"/></to>
    </wire>
    <wire loc="156:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a708cb988"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a708f9638"/></to>
    </wire>
    <wire loc="157:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a708cc2e0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a708f9c10"/></to>
    </wire>
    <wire loc="170:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a708f5928"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a70a0f470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a70a0f470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a71997da0"/></to>
    </wire>
    <wire loc="171:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a708f42a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a709fa5b8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a709fa5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a2f0c0"/></to>
    </wire>
    <wire loc="172:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a708f4880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a7099fb98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a7099fb98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a7196cd20"/></to>
    </wire>
    <wire loc="177:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a7099eab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a709f9888"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a709f9888"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a2f698"/></to>
    </wire>
    <wire loc="182:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70a0d580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b0a706acb40"/></to>
    </wire>
    <wire loc="183:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a70a0e510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a70a09bb0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a70a09bb0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0a709f87a0"/></to>
    </wire>
    <wire loc="195:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a709f87a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a70a14a90"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a70a14a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0a70a47020"/></to>
    </wire>
    <wire loc="196:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a2f0c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a70a4a430"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a70a4a430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a47908"/></to>
    </wire>
    <wire loc="197:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a2f698"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70a4a9c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70a4a9c8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a46020"/></to>
    </wire>
    <wire loc="213:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b0a70a48490"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a84708"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a84708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a719d8870"/></to>
    </wire>
    <wire loc="214:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a70a47020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a70abd2a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a70abd2a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a719d7a08"/></to>
    </wire>
    <wire loc="215:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a47908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a70abdb90"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a70abdb90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a719d6430"/></to>
    </wire>
    <wire loc="216:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a46020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b07220"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b07220"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a71a097a0"/></to>
    </wire>
    <wire loc="223:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b0a70abba10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b0a70b50020"/></to>
    </wire>
    <wire loc="67:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b0a70b50020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b0a70b685d8"/></to>
    </wire>
    <wire loc="224:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70aba3f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70a0fd18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70a0fd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0a719936c8"/></to>
    </wire>
    <wire loc="225:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b0a70abcb70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b0a70b51148"/></to>
    </wire>
    <wire loc="66:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b0a70b51148"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b0a70b697b8"/></to>
    </wire>
    <wire loc="230:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a0edf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70b50948"/></to>
    </wire>
    <wire loc="68:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70b50948"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70b67020"/></to>
    </wire>
    <wire loc="269:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b06168"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b3f830"/></to>
    </wire>
    <wire loc="270:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70b05188"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70affa70"/></to>
    </wire>
    <wire loc="273:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0a70b04020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0a70aff020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a70b1b928"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b4e020"/></to>
    </wire>
    <wire loc="304:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70b3ab80"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70ed6318"/></to>
    </wire>
    <wire loc="49:../../chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70ed6318"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70ed2020"/></to>
    </wire>
    <wire loc="305:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a70b39bc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70b0b7d8"/></to>
    </wire>
    <wire loc="312:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b0a70b35750"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0a70aff020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="313:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b0a70b34368"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0a70aff020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="314:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b0a70b6f020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b0a70aff020"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="315:../../chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70b6fab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70742c50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70742c50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a718829a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a71880970"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a7076ec68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b0a7187d880"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0a707445b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a718d03f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a707e3c60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a718d34d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0a70825678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a718d22a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0a70824430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a718d2b90"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0a70824d18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a718d12a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b0a70823328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a7089f510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a718eedf8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a7089fc50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a718ed578"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a718ede18"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a7089e550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b0a718ec5d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b0a718f12a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0a718eb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a7196baf0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a707e3c60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a7196a5b8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0a7099eab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b0a71990020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b0a709d5d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b0a709d5d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b0a709cf850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a71990bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a7198c140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a7198c140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a709ceb18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a71992458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b0a70a0e510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a71992d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a0edf8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b0a719914a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b0a70a0d580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b0a70a2c988"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a70a2d400"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b0a719d4450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b0a70abcb70"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b0a719d3268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0a707445b8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b0a719d3c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b0a70abba10"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b0a719d2578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70aba3f0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b0a719d14f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b0a719d1c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b0a719d2d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b0a71a042a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b0a70b05188"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a71a061c8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b06168"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0a71a05290"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b14790"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0a71a08618"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0a70b04020"/></to>
    </wire>
    <wire loc="69:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b0a70b4c7c8"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b0a70b67798"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a70c622e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a70e3cb68"/></to>
    </wire>
    <wire loc="58:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e76ba8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70eac460"/></to>
    </wire>
    <wire loc="81:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b0a70b848b0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b0a70b3ab80"/></to>
    </wire>
    <wire loc="84:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b0a70b836d0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b0a70b35750"/></to>
    </wire>
    <wire loc="87:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b0a70b82368"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b0a70b34368"/></to>
    </wire>
    <wire loc="90:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b0a70b81020"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b0a70b6f020"/></to>
    </wire>
    <wire loc="93:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a70b81d90"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a70b39bc8"/></to>
    </wire>
    <wire loc="98:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b8b700"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e76ba8"/></to>
    </wire>
    <wire loc="101:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70b7c5e0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70b6fab8"/></to>
    </wire>
    <wire loc="103:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b0a70b59728"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b0a70c6b710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b0a70c6b710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b0a7010a7e0"/></to>
    </wire>
    <wire loc="104:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b0a70b57b18"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b0a70c68990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b0a70c68990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a70c73e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70b8e710"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c665e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c665e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c7c9d0"/></to>
    </wire>
    <wire loc="107:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b0a70b55348"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b0a70c65140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b0a70c65140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b0a701024d0"/></to>
    </wire>
    <wire loc="108:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b0a70b544c0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b0a70c64338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b0a70c64338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b0a700f94d0"/></to>
    </wire>
    <wire loc="110:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b0a70b88d20"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b0a70c634c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b0a70c634c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b0a70c5dcd8"/></to>
    </wire>
    <wire loc="111:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b0a70b7dac8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b0a707445b8"/></to>
    </wire>
    <wire loc="112:../../chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b0a70b85398"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b0a70e753c0"/></to>
    </wire>
    <wire loc="861:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b0a70c27080"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b0a70e3cb68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b0a71a9b9d8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c7c9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c71628"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70c5e438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e34400"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e34400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e81c38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b0a70c4fc18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b0a70118020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b0a70c4ee08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b0a7011cc78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b0a70c51540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b0a70d40370"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b0a70d40370"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b0a70d6ab18"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b0a70c731d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b0a70c70120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b0a70c7c388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b0a70c71020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a70c5bcd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70c7ba18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0a70c73e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a70d54d88"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b0a70d54d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b0a71a4d590"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a70d52ae8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a70c70de0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b0a70c97c78"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b0a70ce1a20"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b0a70ce1a20"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b0a70cdb8d8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b0a70c95910"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b0a6ff123c8"/></to>
    </wire>
    <wire loc="294:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b0a70cbc020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b0a70d13e08"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b0a6ff123c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b0a70cd56a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b0a7010a7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b0a70cd4948"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b0a70109968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b0a70d15ae0"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b0a70108af0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b0a70d14c68"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b0a70107c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a70d53af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a71a4c388"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a70d52268"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a71a4cac8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a71a4b3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a70d52ae8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b0a71a4bb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b0a71a50718"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b0a71ac3780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70d3acf0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70d6b3d0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70d481c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70d70298"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a70d791c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b0a70d654e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a70d791c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b0a70d61770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a70d791c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b0a70d5eb20"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b0a71a97a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70d481c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b0a71a92a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b0a70d791c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70df38b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70d481c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a70e80e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a70e87270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b0a70e85450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a70e30108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a70e30108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a70e74e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70e60020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70d481c8"/></to>
    </wire>
    <wire loc="59:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a70eab648"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a70eb41a0"/></to>
    </wire>
    <wire loc="60:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b0a70eb1450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a70e30108"/></to>
    </wire>
    <wire loc="48:../../chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ed9bc0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ed58a0"/></to>
    </wire>
    <wire loc="52:../../chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70ed1020"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b49388"/></to>
    </wire>
    <wire loc="53:../../chips/rf230/RF230SlimRadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70ece390"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b43d70"/></to>
    </wire>
    <wire loc="52:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="SubAMSend" scoped="" ref="0x2b0a70f22020"/></from>
      <to><interface-ref name="SubSendData" scoped="" ref="0x2b0a70f27560"/></to>
    </wire>
    <wire loc="53:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b0a70f22ca8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b0a70f263b8"/></to>
    </wire>
    <wire loc="56:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b0a70f212a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b0a70f47080"/></to>
    </wire>
    <wire loc="59:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70f21bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a70f4a6e0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a70f4a6e0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <from><interface-ref name="doneTask" scoped="" ref="0x2b0a70f160c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b0a70f48020"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b0a70f43e48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a70f491f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70f435f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a70fbe020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a70f934f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b0a70f911b0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b0a70f94b08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b0a70f94b08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b0a700fee00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b0a70f90338"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b0a70fc1ca8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b0a70fc1ca8"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b0a700ffc78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b0a70f8f4c0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b0a70fc0e30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b0a70fc0e30"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b0a700e7a70"/></to>
    </wire>
    <wire loc="51:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2b0a70ff5020"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2b0a70fa9358"/></to>
    </wire>
    <wire loc="55:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ff5980"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ed9bc0"/></to>
    </wire>
    <wire loc="56:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b0a71021020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b14790"/></to>
    </wire>
    <wire loc="60:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="PktRateJob" scoped="" ref="0x2b0a7106d380"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b0a710984c0"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b0a710984c0"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b0a7108e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b0a71098c80"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a710ec9c0"/></to>
    </wire>
    <wire loc="65:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a710eb020"/></from>
      <to><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b0a710716c8"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710aa530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a71098c80"/></to>
    </wire>
    <wire loc="52:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b0a7108a2b8"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b0a71088420"/></to>
    </wire>
    <wire loc="53:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b0a7108e020"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b0a710871c8"/></to>
    </wire>
    <wire loc="50:../../../EAJobs/lib/EASchedulerC.nc">
      <from><interface-ref name="DispatchTimer" scoped="" ref="0x2b0a71087bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a710b48d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a710b48d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <from><interface-ref name="dispatch" scoped="" ref="0x2b0a7107abe0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b0a710a9788"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b0a700d70f0"/></to>
    </wire>
    <wire loc="51:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710a62e8"/></from>
      <to><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710aa530"/></to>
    </wire>
    <wire loc="54:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <from><interface-ref name="EAScheduler" scoped="" ref="0x2b0a710a68f0"/></from>
      <to><interface-ref name="EAScheduler" scoped="" ref="0x2b0a7108a2b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b0a7111b2e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b0a71147b90"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a710d43c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a711249a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a710d1c78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a71121268"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b0a7111eb98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b0a71147578"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a7116b5a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a710d0608"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b0a71121bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a7111ace8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b0a711208c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a7111a270"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b0a71167ba8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b0a7144a6e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b0a7111ace8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b0a71282020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b0a7111a270"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b0a71283868"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b0a71282db8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b0a71167ba8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a71195bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a7116b5a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a71280a50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a7116b5a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b0a71276420"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b0a7116b5a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0a712816c8"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0a71192b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b0a71280020"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b0a71196898"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0a7118cb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0a7127cb30"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b0a7118b398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0a7127b8b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b0a7127b8b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0a712a8338"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0a712c4448"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0a712ab0c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0a712ab0c0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0a712a3310"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b0a711e5830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b0a71170d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b0a711e8020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b0a711e2918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b0a7127e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b0a7127e8a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b0a712a5290"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b0a712a8af0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b0a712a8af0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b0a712f8e58"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b0a712a3310"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b0a713115f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b0a712a8338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b0a712f86f8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a712a2598"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a71399188"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a71399188"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a71457c50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a7130ec60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a712a2598"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b0a713105f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0a7134d700"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0a7134d700"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0a71344730"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b0a71310d98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0a7134b020"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0a7134b020"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0a71343020"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b0a7130f5c0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b0a7134b860"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b0a7134b860"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b0a713438a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b0a71348020"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b0a713406d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0a7134ae58"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0a71341568"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0a713496f0"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0a71341e00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a7133fc70"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a700dfb98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b0a7133e950"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b0a6ff123c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b0a71454e20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a71393020"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b0a71393020"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b0a71461020"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a7145f0e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a71391c30"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a71391c30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a713d9298"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7138ac90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a713d43d0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b0a71387350"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b0a713d3b18"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a713e01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b0a713ce4e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a713e01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b0a713ca770"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b0a713e01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b0a713c6b20"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b0a71469740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b0a71391c30"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b0a714915b0"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b0a714959b8"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b0a714959b8"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b0a7108e020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b0a71494308"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a71486dd8"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a71485458"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a71483ca8"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="TrafficStats" scoped="" ref="0x2b0a71490020"/></from>
      <to><interface-ref name="Stats" scoped="" ref="0x2b0a7102a820"/></to>
    </wire>
    <wire loc="68:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a714928e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7149bdf0"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710aa530"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a71494308"/></to>
    </wire>
    <wire loc="53:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="EAJob" scoped="" ref="0x2b0a714732a0"/></from>
      <to><interface-ref name="Job" scoped="" ref="0x2b0a7147a9b8"/></to>
    </wire>
    <wire loc="58:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="Job" scoped="" ref="0x2b0a7147a9b8"/></from>
      <to><interface-ref name="EAJob" scoped="" ref="0x2b0a7108e020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="JobConfig" scoped="" ref="0x2b0a71479308"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a714c2dd8"/></to>
    </wire>
    <wire loc="60:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a714c1458"/></from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a714c0ca8"/></to>
    </wire>
    <wire loc="64:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="QueueStats" scoped="" ref="0x2b0a71473d08"/></from>
      <to><interface-ref name="QueueStatistics" scoped="" ref="0x2b0a7047c3a0"/></to>
    </wire>
    <wire loc="65:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="PacketStats" scoped="" ref="0x2b0a714d2020"/></from>
      <to><interface-ref name="PacketStatistics" scoped="" ref="0x2b0a7056edb8"/></to>
    </wire>
    <wire loc="69:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b0a71474678"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b0a7147c328"/></to>
    </wire>
    <wire loc="61:../../../EAJobs/lib/EAJobC.nc">
      <from><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710aa530"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="JobConfig" scoped="" ref="0x2b0a71479308"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="SinkP" loc="44:SinkP.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010/06/29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SinkC.AliveTimer" loc="44(SinkC.AliveTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="26:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <documentation loc="11:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="59(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0a702c6068"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP" loc="51:../../lib/net/orinoco/OrinocoP.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoQueueP" loc="43:../../lib/net/orinoco/OrinocoQueueP.nc">
      <module/>
    </component>
    <component qname="OrinocoRadioC" loc="42:../../lib/net/orinoco/OrinocoRadioC.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoRadioP" loc="45:../../lib/net/orinoco/OrinocoRadioP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:../../platforms/iris/ActiveMessageC.nc">
      <documentation loc="34:../../platforms/iris/ActiveMessageC.nc">
        <short>&#10; Modifications by Christian Renner from Hamburg University of Technology:&#10; Removed PacketLink, PacketAcknowledgement, and LowPowerListening to comply&#10; with Orinoco&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="42:../../chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="38:../../chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230DriverLayerC" loc="28:../../chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="LocalTimeSyncedMicroC" loc="42:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
      <documentation loc="35:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LocalTimeSyncedMicroC.TransformCounterC" loc="54(LocalTimeSyncedMicroC.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeSyncedMicroC.CounterToLocalMicroC" loc="42(LocalTimeSyncedMicroC.CounterToLocalMicroC):../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc">
      <documentation loc="35:../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalMicroC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230SlimRadioC" loc="40:../../chips/rf230/RF230SlimRadioC.nc">
      <documentation loc="35:../../chips/rf230/RF230SlimRadioC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230SlimRadioP" loc="40:../../chips/rf230/RF230SlimRadioP.nc">
      <documentation loc="35:../../chips/rf230/RF230SlimRadioP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC" loc="40:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoForwardLayerP" loc="40:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoForwardLayerC.TimerMilliC" loc="44(OrinocoForwardLayerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoRadioC.Timer" loc="44(OrinocoRadioC.Timer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoConfigC" loc="42:../../lib/net/orinoco/OrinocoConfigC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoConfigC.nc">
        <short>&#10; configuration of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; configuration of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoConfigP" loc="42:../../lib/net/orinoco/OrinocoConfigP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoConfigP.nc">
        <short>&#10; implementation of Orinoco Configuration&#10;&#10; </short>
        <long>&#10; implementation of Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountC" loc="40:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoPathCostHopCountP" loc="40:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoP.SendQueue" loc="42(OrinocoP.SendQueue):/opt/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6ffec198"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b0a6ffec4f0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.MsgPool" loc="41(OrinocoP.MsgPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
            <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoP.MsgPool.PoolP" loc="53(OrinocoP.MsgPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b0a71016280"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoP.PacketHistory" loc="44(OrinocoP.PacketHistory):../../lib/net/orinoco/OrinocoCacheC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="OrinocoCacheC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a6ffed350"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b0a6ffed808"/></typename>
          </type-tag>
          <value cst="I:30">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC" loc="43:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
        <short>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics internal wiring&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoTrafficStatisticsP" loc="45:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.Job" loc="42(OrinocoTrafficStatisticsC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="0">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EASchedulerC" loc="40:../../../EAJobs/lib/EASchedulerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EASchedulerP" loc="44:../../../EAJobs/lib/EASchedulerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EASchedulerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="EASchedulerC.DispatchTimer" loc="44(EASchedulerC.DispatchTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerC" loc="40:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="EAEnergyManagerP" loc="42:../../../EAJobs/lib/EAEnergyManagerP.nc" safe="">
      <documentation loc="35:../../../EAJobs/lib/EAEnergyManagerP.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC" loc="42(OrinocoTrafficStatisticsC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0a6fef2d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0a6fef2d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b0a6fef0630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC" loc="40:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobP" loc="42:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobC.Job" loc="42(OrinocoStatsReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="1">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoStatsReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoStatsReportingJobConfigC" loc="40:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC" loc="40:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobP" loc="42:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobC.Job" loc="42(OrinocoDebugReportingJobC.Job):../../../EAJobs/lib/EAJobC.nc">
      <instance number="2">
        <component-ref qname="EAJobC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC" loc="42(OrinocoDebugReportingJobC.EAPeriodicJobConfigC):../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="EAPeriodicJobConfigC"/>
      </instance>
      <module/>
    </component>
    <component qname="OrinocoDebugReportingJobConfigC" loc="42:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <documentation loc="35:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0a70137d00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0a701340c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0a70134410" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0a7013d600" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0a7013d968" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0a7013dcd0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0a7014e060" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b0a701d7508" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b0a701d7870" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b0a701d7bd8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b0a701d6020" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0a702c6068" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0a702c6068"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0a702c6358" loc="58:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Christian Renner &#60;christian.renner@tu-harburg.de>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b0a702d68e8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b0a702d68e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b0a702d6bd8" loc="59:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a702aade0" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a702aade0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a70409cc8" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a70409cc8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b0a70406020" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a7043b9f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a7043b9f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b0a70839ab0" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b0a7082a170" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0a70df22b0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a70df22b0"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b0a70df2600" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b0a70df6a18" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b0a70df6a18"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b0a70e25198" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a70e25198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b0a70e25498" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b0a70e72430" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b0a70e72430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b0a70e72b80" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a70e72b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b0a70e59918" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b0a70e59918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b0a70e560a8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b0a70e560a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b0a70e56470" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b0a70e56470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b0a70e56be8" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b0a70e56be8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b0a70e55020" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b0a70e557b0" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b0a70e557b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalMicroC" loc="42:../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc" abstract="" safe="">
      <documentation loc="35:../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b0a70fe6338" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b0a70fe6338"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b0a70fe6690" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b0a71016280" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b0a71016280"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2b0a710165d0" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2b0a7100f4c0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2b0a7100f4c0"/></type-var>
        </typedef>
        <constant name="size" ref="0x2b0a7100f7e0" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OrinocoCacheC" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc" abstract="">
      <documentation loc="35:../../lib/net/orinoco/OrinocoCacheC.nc">
        <short>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; </short>
        <long>&#10; A cache implementation (ring buffer) used as packet history for&#10; duplicate recognition (at sink)&#10;&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b0a7103f6c8" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a7103f6c8"/></type-var>
        </typedef>
        <constant name="SIZE" ref="0x2b0a7103f9e8" loc="44:../../lib/net/orinoco/OrinocoCacheC.nc">
          <component-ref qname="OrinocoCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="EAJobC" loc="42:../../../EAJobs/lib/EAJobC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="EAPeriodicJobConfigC" loc="42:../../../EAJobs/lib/EAPeriodicJobConfigC.nc" abstract="">
      <documentation loc="35:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x2b0a6ff53c48" loc="50:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0a6ff53c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0a6ff56020"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0a6ff561a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0a6ff56330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x2b0a6fff72b8" loc="64:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a6fff72b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a6fff7608"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b0a6fff7790"/>
        <function-ref name="setType" scoped="" ref="0x2b0a6fff7918"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b0a6fff7aa0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a6fff7c28"/>
        <function-ref name="getType" scoped="" ref="0x2b0a6fff7db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b0a6ff4e220" loc="46:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0a6ff4e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0a6ff4e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b0a6ff4b898" loc="47:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b0a6ff4b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a6ff4bbe8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a6ff4bd70"/>
        <function-ref name="start" scoped="" ref="0x2b0a6ff39020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a6ff391a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x2b0a7009d0c0" loc="113:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x2b0a7009d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7009d410"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7009d598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoDebugReportingMsg" ref="0x2b0a7008d240" loc="79:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoDebugReportingMsg" scoped="" ref="0x2b0a7008d240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7008d590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b0a6ff39530" loc="48:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b0a6ff39530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a6ff39880"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a6ff39a08"/>
        <function-ref name="start" scoped="" ref="0x2b0a6ff39b90"/>
        <function-ref name="stop" scoped="" ref="0x2b0a6ff39d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b0a6ffd9688" loc="63:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a6ffd9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a6ffd99d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a6ffd9b60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a6ffd9ce8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a6ffd9e70"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a6ffe9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AliveTimer" ref="0x2b0a6ff68810" loc="54:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AliveTimer" scoped="" ref="0x2b0a6ff68810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a6ff66a18"/>
        <function-ref name="fired" scoped="" ref="0x2b0a6ff63158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a6ff63e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a6ff639f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a6ff652e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a6ff66e68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a6ff635a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a6ff64390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a6ff66448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a6ff64830"/>
        <function-ref name="stop" scoped="" ref="0x2b0a6ff64cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b0a6ffe7020" loc="65:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a6ffe7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a6ffe7470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketDelayMilli" ref="0x2b0a7008e340" loc="68:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0a7008e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0a6ffff020"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0a6ffff4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoStatsReportingMsg" ref="0x2b0a6ffffaf8" loc="78:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoStatsReportingMsg" scoped="" ref="0x2b0a6ffffaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a6ffffe48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x2b0a6ff559d0" loc="49:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x2b0a6ff559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a6ff55d20"/>
        <function-ref name="stop" scoped="" ref="0x2b0a6ff49020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a7008c020" loc="81:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a7008c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a7008c370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a7008c4f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a7008c680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a7008c808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a7008c990"/>
        <function-ref name="get" scoped="" ref="0x2b0a7008cb18"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a7008cca0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a7008b330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7008ce28"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a7008b020"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a7008b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartPacket" ref="0x2b0a6ffda808" loc="59:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartPacket" scoped="" ref="0x2b0a6ffda808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a6ffdab58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a6ffdace0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a6ffdae68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a6ff72020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a6ff721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b0a6fffe930" loc="66:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0a6fffe930"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a6fffec80"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a6fffee08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a6fff6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartSend" ref="0x2b0a6ffd3b48" loc="57:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartSend" scoped="" ref="0x2b0a6ffd3b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a6ff73020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a6ff731a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a6ff73330"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a6ff734b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a6ff73640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartAMPacket" ref="0x2b0a6ffdb020" loc="60:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartAMPacket" scoped="" ref="0x2b0a6ffdb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a6ffdb370"/>
        <function-ref name="source" scoped="" ref="0x2b0a6ffdb4f8"/>
        <function-ref name="address" scoped="" ref="0x2b0a6ffdb680"/>
        <function-ref name="destination" scoped="" ref="0x2b0a6ffdb808"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a6ffdb990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a6ffdbb18"/>
        <function-ref name="type" scoped="" ref="0x2b0a6ffdbca0"/>
        <function-ref name="setType" scoped="" ref="0x2b0a6ffdbe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a6ffd9020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a6ffd91a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a6ffd9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoConfig" ref="0x2b0a6ff578c8" loc="52:SinkP.nc">
      <component-ref qname="SinkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a6ff578c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a6ff57c18"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a6ff57da0"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a6ff54020"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a6ff541a8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a6ff54330"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a6ff544b8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a6ff54640"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a6ff547c8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a6ff54950"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a6ff54ad8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a6ff54c60"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a6ff54de8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a6ff52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b0a700d44d8" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a700d44d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700d4828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0a700d70f0" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0a700d70f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0a700d7440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0a700d19a0" loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0a700d19a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700d1cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a700d6bf0" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a700d6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0a700dfb98" loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a700dfb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0a700d1020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0a700d11a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0a700d1330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0a700d14b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0a700d1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b0a700dcb90" loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b0a700dcb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a700dc4f0" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a700dc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700dc840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b0a700db398" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b0a700db398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700db6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0a700e8108" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0a700e8108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700e8458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0a700dea08" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0a700dea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700ded58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b0a700e47f8" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b0a700e47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700e4b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b0a700f15f8" loc="44:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b0a700f15f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700f1948"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700f1ad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700f1c58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700f1de0"/>
        <function-ref name="get" scoped="" ref="0x2b0a700e4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700e41a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a700e4330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700e44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0a700e5428" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0a700e5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a700e5778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b0a7012dc78" loc="98:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b0a7012dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7012c5e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7012c770"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7012c8f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012ca80"/>
        <function-ref name="get" scoped="" ref="0x2b0a7012cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7012cd90"/>
        <function-ref name="set" scoped="" ref="0x2b0a7012b020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7012b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b0a7010b7e0" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b0a7010b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010bb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010bcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010be40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011e020"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011e330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7011e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b0a701277e0" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b0a701277e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70127b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70127cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70127e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70126020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70126330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701264b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70126640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b0a701324d0" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b0a701324d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70132820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701329a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70132b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70132cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70132e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70131020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701311a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70131330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b0a7013baf0" loc="103:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b0a7013baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7013be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70139020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701391a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70139330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701394b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70139640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701397c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70139950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b0a700f94d0" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b0a700f94d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700f9820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700f99a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700f9b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700f9cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0a700f9e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700f8020"/>
        <function-ref name="set" scoped="" ref="0x2b0a700f81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700f8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b0a701201a0" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b0a701201a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701204f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70120678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70120800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70120988"/>
        <function-ref name="get" scoped="" ref="0x2b0a70120b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70120c98"/>
        <function-ref name="set" scoped="" ref="0x2b0a70120e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b0a7010a7e0" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b0a7010a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70109020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70109330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701094b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70109640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b0a70113968" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b0a70113968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70113cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70113e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70112020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701121a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70112330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701124b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70112640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b0a7011cc78" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b0a7011cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7011b020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7011b1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7011b330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011b4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011b640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011b7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7011b950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b0a70124c78" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b0a70124c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70123020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701231a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70123330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701234b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70123640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701237c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70123950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70123ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b0a700ffc78" loc="45:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b0a700ffc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700fe020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700fe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700fe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700fe4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a700fe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700fe7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a700fe950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b0a70107c78" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b0a70107c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70106020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701061a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70106330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701064b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70106640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701067c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70106950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70106ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b0a70110e00" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b0a70110e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010f1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010f330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010f4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7010f640"/>
        <function-ref name="get" scoped="" ref="0x2b0a7010f7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7010f950"/>
        <function-ref name="set" scoped="" ref="0x2b0a7010fad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7010fc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b0a701171a0" loc="78:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b0a701171a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701174f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70117678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70117800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70117988"/>
        <function-ref name="get" scoped="" ref="0x2b0a70117b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70117c98"/>
        <function-ref name="set" scoped="" ref="0x2b0a70117e20"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70116020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b0a7012f968" loc="95:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b0a7012f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7012fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7012fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7012e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7012e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7012e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7012e640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7012e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b0a701297e0" loc="101:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b0a701297e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70129b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70129cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70129e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7013c020"/>
        <function-ref name="get" scoped="" ref="0x2b0a7013c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7013c330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7013c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7013c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b0a701154d0" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b0a701154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70115820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701159a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70115b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70115cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70115e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70128020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701281a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70128330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b0a700fb1a0" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b0a700fb1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700fb4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700fb678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700fb800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700fb988"/>
        <function-ref name="get" scoped="" ref="0x2b0a700fbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700fbc98"/>
        <function-ref name="set" scoped="" ref="0x2b0a700fbe20"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b0a70103348" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b0a70103348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70103698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70103820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701039a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70103b30"/>
        <function-ref name="get" scoped="" ref="0x2b0a70103cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70103e40"/>
        <function-ref name="set" scoped="" ref="0x2b0a70102020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b0a7012b4d0" loc="99:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b0a7012b4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7012b820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7012b9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7012bb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012bcb8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7012be40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7012a020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7012a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7012a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b0a70101658" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b0a70101658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701019a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70101b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70101cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70101e40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70114020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701141a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70114330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b0a7011e968" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b0a7011e968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7011ecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7011ee40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7011d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7011d640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b0a70126968" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b0a70126968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70126cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70126e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70125020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701251a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70125330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701254b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70125640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b0a70131658" loc="93:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b0a70131658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701319a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70131b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70131cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70131e40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70130020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701301a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70130330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701304b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b0a700f8658" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b0a700f8658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700f89a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700f8b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700f8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700f8e40"/>
        <function-ref name="get" scoped="" ref="0x2b0a7010a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7010a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7010a330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7010a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b0a70109968" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b0a70109968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70109cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70109e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70108020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701081a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70108330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701084b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70108640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701087c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b0a70112af0" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b0a70112af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70112e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70111020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701111a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70111330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701114b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70111640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701117c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70111950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b0a7011be00" loc="76:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b0a7011be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7011a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7011a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7011a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011a640"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011a950"/>
        <function-ref name="set" scoped="" ref="0x2b0a7011aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b0a70123e00" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b0a70123e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701221a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70122330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701224b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70122640"/>
        <function-ref name="get" scoped="" ref="0x2b0a701227c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70122950"/>
        <function-ref name="set" scoped="" ref="0x2b0a70122ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70122c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b0a700fee00" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b0a700fee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700fd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700fd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700fd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700fd640"/>
        <function-ref name="get" scoped="" ref="0x2b0a700fd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700fd950"/>
        <function-ref name="set" scoped="" ref="0x2b0a700fdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700fdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b0a70106e00" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b0a70106e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701052e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70105470"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701055f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70105780"/>
        <function-ref name="get" scoped="" ref="0x2b0a70105908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70105a90"/>
        <function-ref name="set" scoped="" ref="0x2b0a70105c18"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70105da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b0a7010e020" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b0a7010e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010e370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7010e808"/>
        <function-ref name="get" scoped="" ref="0x2b0a7010e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7010eb18"/>
        <function-ref name="set" scoped="" ref="0x2b0a7010eca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7010ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b0a7012eaf0" loc="96:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b0a7012eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7012ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7012d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7012d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012d330"/>
        <function-ref name="get" scoped="" ref="0x2b0a7012d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7012d640"/>
        <function-ref name="set" scoped="" ref="0x2b0a7012d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7012d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b0a7010c348" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b0a7010c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010c898"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010ca20"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010cba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7010cd30"/>
        <function-ref name="get" scoped="" ref="0x2b0a7010b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7010b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7010b330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7010b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b0a70128658" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b0a70128658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701289a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70128b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70128cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70128e40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70127020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701271a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70127330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701274b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b0a7011f348" loc="91:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b0a7011f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7011f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7011f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7011f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011fb30"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011fe40"/>
        <function-ref name="set" scoped="" ref="0x2b0a70132020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b0a7013c968" loc="102:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b0a7013c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7013ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7013ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7013b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7013b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7013b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7013b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7013b640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7013b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b0a700fa348" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b0a700fa348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700fa698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700fa820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700fa9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700fab30"/>
        <function-ref name="get" scoped="" ref="0x2b0a700facb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700fae40"/>
        <function-ref name="set" scoped="" ref="0x2b0a700f9020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b0a701024d0" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b0a701024d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70102820"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701029a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70102b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70102cb8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70102e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70101020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70101330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b0a70121020" loc="89:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b0a70121020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70121370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701214f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70121680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70121808"/>
        <function-ref name="get" scoped="" ref="0x2b0a70121990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70121b18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70121ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70121e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b0a701147e0" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b0a701147e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70114b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70114cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70114e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70113020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70113330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701134b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70113640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b0a7011daf0" loc="74:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b0a7011daf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7011de40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7011c020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7011c1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7011c330"/>
        <function-ref name="get" scoped="" ref="0x2b0a7011c4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7011c640"/>
        <function-ref name="set" scoped="" ref="0x2b0a7011c7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7011c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b0a70125af0" loc="85:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b0a70125af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70125e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70124020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701241a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70124330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701244b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70124640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701247c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70124950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b0a701307e0" loc="94:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b0a701307e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70130b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70130cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70130e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012f020"/>
        <function-ref name="get" scoped="" ref="0x2b0a7012f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7012f330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7012f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7012f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b0a700e7a70" loc="44:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b0a700e7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700e7dc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700ff020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700ff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700ff330"/>
        <function-ref name="get" scoped="" ref="0x2b0a700ff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700ff640"/>
        <function-ref name="set" scoped="" ref="0x2b0a700ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b0a70108af0" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b0a70108af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70108e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70107020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70107330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70107640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701077c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70107950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b0a70111c78" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b0a70111c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70110020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701101a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70110330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701104b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70110640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701107c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70110950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70110ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b0a70118020" loc="77:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b0a70118020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70118370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701184f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70118680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70118808"/>
        <function-ref name="get" scoped="" ref="0x2b0a70118990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70118b18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70118ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70118e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b0a7012a658" loc="100:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b0a7012a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7012a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7012ab30"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7012acb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7012ae40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70129020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701291a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70129330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701294b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b0a70116348" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b0a70116348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70116698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70116820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701169a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70116b30"/>
        <function-ref name="get" scoped="" ref="0x2b0a70116cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70116e40"/>
        <function-ref name="set" scoped="" ref="0x2b0a70115020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b0a7010d1a0" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b0a7010d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7010d4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7010d678"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7010d800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7010d988"/>
        <function-ref name="get" scoped="" ref="0x2b0a7010db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7010dc98"/>
        <function-ref name="set" scoped="" ref="0x2b0a7010de20"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7010c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b0a700fc020" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b0a700fc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a700fc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a700fc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a700fc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a700fc808"/>
        <function-ref name="get" scoped="" ref="0x2b0a700fc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a700fcb18"/>
        <function-ref name="set" scoped="" ref="0x2b0a700fcca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a700fce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b0a70104100" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b0a70104100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70104450"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701045d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70104760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701048e8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70104a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70104bf8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70104d80"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70103020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a70180120" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a70180120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70180470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701805f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70180780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70180908"/>
        <function-ref name="get" scoped="" ref="0x2b0a70180a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70180c18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70180da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7017e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a7017c5b8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a7017c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7017c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7017ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7017cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7017cda0"/>
        <function-ref name="get" scoped="" ref="0x2b0a7017b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7017b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7017b330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7017b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a70183dc0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a70183dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70182170"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701822f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70182480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70182608"/>
        <function-ref name="get" scoped="" ref="0x2b0a70182790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70182918"/>
        <function-ref name="set" scoped="" ref="0x2b0a70182aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70182c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a7017e2a8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a7017e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7017e5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7017e780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7017e908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7017ea90"/>
        <function-ref name="get" scoped="" ref="0x2b0a7017ec18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7017eda0"/>
        <function-ref name="set" scoped="" ref="0x2b0a7017d020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7017d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a7017b740" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a7017b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7017ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7017bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7017bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7017a020"/>
        <function-ref name="get" scoped="" ref="0x2b0a7017a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7017a330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7017a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7017a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a70181020" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a70181020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70181370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701814f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70181680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70181808"/>
        <function-ref name="get" scoped="" ref="0x2b0a70181990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70181b18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70181ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70181e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a7017d430" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a7017d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7017d780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7017d908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7017da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7017dc18"/>
        <function-ref name="get" scoped="" ref="0x2b0a7017dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7017c020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7017c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7017c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a7017a8c8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a7017a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7017ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7017ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7018f020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7018f1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7018f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7018f4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7018f640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7018f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714e9448" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714e9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714e9798"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714e9920"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714e9aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714e9c30"/>
        <function-ref name="get" scoped="" ref="0x2b0a714e9db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714e8020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714e81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714e6480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714e67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714e6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714e6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714e6c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a714e6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714e5020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714e51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714e5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714e3480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714e3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714e37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714e3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714e3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714e3c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a714e3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714e2020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714e21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714e2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714e0480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714e0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714e07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714e0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714e0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714e0c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a714e0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714df020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714df1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714df330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714dd480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714dd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714dd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714dd958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714ddae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714ddc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a714dddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714db020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714db1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714db330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a714d9480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a714d9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a714d97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a714d9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a714d9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a714d9c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a714d9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a714d8020"/>
        <function-ref name="set" scoped="" ref="0x2b0a714d81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a714d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7153e480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7153e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7153e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7153e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7153eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7153ec68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7153edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7153d020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7153d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7153d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7153b480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7153b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7153b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7153b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7153bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7153bc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7153bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7153a020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7153a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7153a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a70187bd8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a70187bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70186020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701861a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70186330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701864b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70186640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701867c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70186950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70186ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a70199020" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a70199020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70199370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701994f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70199680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70199808"/>
        <function-ref name="get" scoped="" ref="0x2b0a70199990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70199b18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70199ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70199e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a70189930" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a70189930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70189c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70189e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70188020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701881a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70188330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701884b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70188640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701887c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a70186d60" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a70186d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701850d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70185260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701853e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70185570"/>
        <function-ref name="get" scoped="" ref="0x2b0a701856f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70185880"/>
        <function-ref name="set" scoped="" ref="0x2b0a70185a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70185b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a70198120" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a70198120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70198470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701985f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70198780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70198908"/>
        <function-ref name="get" scoped="" ref="0x2b0a70198a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70198c18"/>
        <function-ref name="set" scoped="" ref="0x2b0a70198da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70197020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a70188a50" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a70188a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70188da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70187020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701871a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70187330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701874b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70187640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701877c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70187950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a70185e18" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a70185e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7019a1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7019a330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7019a4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7019a640"/>
        <function-ref name="get" scoped="" ref="0x2b0a7019a7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7019a950"/>
        <function-ref name="set" scoped="" ref="0x2b0a7019aad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7019ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a701972a8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a701972a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701975f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70197780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70197908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70197a90"/>
        <function-ref name="get" scoped="" ref="0x2b0a70197c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70197da0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70196020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7154e3e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7154e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7154e730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7154e8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7154ea40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7154ebc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7154ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7154d020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7154d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7154d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7154b480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7154b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7154b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7154b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7154bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7154bc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7154bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7154a020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7154a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7154a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71548480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71548480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715487d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71548958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71548ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71548c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71548df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71547020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715471a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71547330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71545480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71545480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715457d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71545958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71545ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71545c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71545df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71544020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715441a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71544330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71542480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71542480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715427d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71542958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71542ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71542c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71542df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71540020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71540330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715a3480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715a3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715a37d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715a3958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715a3ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715a3c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715a3df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715a2020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715a21a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715a0480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715a0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715a07d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715a0958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715a0ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715a0c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715a0df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7159f020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7159f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7159f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7159d480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7159d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7159d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7159d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7159dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7159dc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7159ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7159c020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7159c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7159c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a701a4740" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a701a4740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a4a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a4c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a3020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a3330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a34b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a701a1bd8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a701a1bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a04b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a07c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a0950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a70190500" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a70190500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70190850"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701909d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70190b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70190ce8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70190e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a5020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a701a38c8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a701a38c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a3c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a3da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a21a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a2330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a24b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a2640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a27c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a701a0d60" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a701a0d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7019f0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7019f260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7019f3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7019f570"/>
        <function-ref name="get" scoped="" ref="0x2b0a7019f6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7019f880"/>
        <function-ref name="set" scoped="" ref="0x2b0a7019fa08"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7019fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a701a55b8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a701a55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a5908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a5a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a5c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a5da0"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a4020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a41a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a4330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a44b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a701a2a50" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a701a2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a2da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a1330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a1640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a7019fe18" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a7019fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7019e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7019e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7019e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7019e640"/>
        <function-ref name="get" scoped="" ref="0x2b0a7019e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7019e950"/>
        <function-ref name="set" scoped="" ref="0x2b0a7019ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7019ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715b23e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715b23e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715b2730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715b28b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715b2a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715b2bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a715b2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715b1020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715b11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715b1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715af480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715af480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715af7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715af958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715afae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715afc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715afdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715ae020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715ae1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715ac480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715ac480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715ac7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715ac958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715acae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715acc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715acdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715ab020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715ab1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715ab330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715a9480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715a9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715a97d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715a9958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715a9ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715a9c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715a9df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715a8020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a715a6480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a715a6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a715a67d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a715a6958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a715a6ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a715a6c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a715a6df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a715a5020"/>
        <function-ref name="set" scoped="" ref="0x2b0a715a51a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a715a5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71609480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71609480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716097d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71609958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71609ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71609c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71609df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71607020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716071a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71607330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71605480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71605480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716057d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71605958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71605ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71605c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71605df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71604020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716041a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71604330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71602480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71602480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716027d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71602958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71602ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71602c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71602df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71601020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716011a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71601330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a701ab120" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a701ab120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701ab470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ab5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ab780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ab908"/>
        <function-ref name="get" scoped="" ref="0x2b0a701aba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701abc18"/>
        <function-ref name="set" scoped="" ref="0x2b0a701abda0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a701a85b8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a701a85b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a8908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a8a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a8c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a8da0"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a61a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a6330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a701aee40" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a701aee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701ad1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ad348"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ad4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ad658"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ad7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701ad968"/>
        <function-ref name="set" scoped="" ref="0x2b0a701adaf0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701adc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a701aa2a8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a701aa2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701aa5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701aa780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701aa908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701aaa90"/>
        <function-ref name="get" scoped="" ref="0x2b0a701aac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701aada0"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a9020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a701a6740" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a701a6740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a6a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a6c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701bb020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701bb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701bb330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701bb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a701ac020" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a701ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701ac370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ac4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ac680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ac808"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ac990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701acb18"/>
        <function-ref name="set" scoped="" ref="0x2b0a701acca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701ace28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a701a9430" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a701a9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701a9780"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701a9908"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701a9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701a9c18"/>
        <function-ref name="get" scoped="" ref="0x2b0a701a9da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701a8020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701a81a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701a8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a701bb8c8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a701bb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701bbc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701bbda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ba020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ba1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ba330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701ba4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701ba640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716183e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716183e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a71618730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716188b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71618a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71618bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a71618d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71617020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716171a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71617330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71615480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71615480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716157d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71615958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71615ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71615c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71615df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71614020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716141a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71614330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71612480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71612480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716127d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71612958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71612ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71612c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71612df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71611020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716111a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71611330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7160f480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7160f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7160f7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7160f958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7160fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7160fc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7160fdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7160e020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7160e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7160e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7160c480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7160c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7160c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7160c958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7160cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7160cc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7160cdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7160b020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7160b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7160b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71671480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71671480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716717d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71671958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71671ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71671c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71671df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7166f020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7166f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7166f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7166d480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7166d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7166d7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7166d958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7166dae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7166dc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7166ddf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7166c020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7166c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7166c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7166a480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7166a480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7166a7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7166a958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7166aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7166ac68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7166adf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71669020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71669330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a701b3bd8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a701b3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701b1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701b11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701b1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701b14b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701b1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701b17c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701b1950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701b1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a701c4020" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a701c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c4370"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c44f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c4680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c4808"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c4990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c4b18"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c4ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a701b5930" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a701b5930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701b5c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701b5e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701b4020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701b41a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701b4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701b44b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701b4640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701b47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a701b1d60" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a701b1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c6260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c6570"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c6880"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c6a08"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a701c3120" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a701c3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c3908"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c3c18"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a701b4a50" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a701b4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701b4da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701b3020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701b31a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701b3330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701b34b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701b3640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701b37c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a701c6e18" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a701c6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c5330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c5640"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c5950"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a701c22a8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a701c22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c2a90"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c2da0"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c1020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716843e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a71684730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716848b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71684a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71684bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a71684d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71683020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716831a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71683330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71681480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71681480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716817d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71681958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71681ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71681c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71681df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71680020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716801a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71680330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7167e480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7167e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7167e7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7167e958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7167eae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7167ec68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7167edf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7167d020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7167d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7167d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7167b480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7167b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7167b7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7167b958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7167bae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7167bc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a7167bdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7167a020"/>
        <function-ref name="set" scoped="" ref="0x2b0a7167a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7167a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71678480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71678480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716787d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71678958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71678ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71678c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71678df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71677020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716771a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71677330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71675480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71675480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716757d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71675958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71675ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71675c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71675df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716de020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716de1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716de330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716dc480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716dc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716dc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716dc958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716dcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716dcc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716dcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716da020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716da1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716da330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716d8480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716d8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716d87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716d8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716d8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716d8c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716d8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716d7020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716d71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716d7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b0a701cf740" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b0a701cf740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701cfa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701cfc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701cfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ce020"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ce1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701ce330"/>
        <function-ref name="set" scoped="" ref="0x2b0a701ce4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701ce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b0a701ccbd8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b0a701ccbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701cb020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701cb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701cb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701cb4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701cb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701cb7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701cb950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701cbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b0a701d1500" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b0a701d1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701d1850"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701d19d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701d1b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701d1ce8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701d1e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701d0020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701d01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b0a701ce8c8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b0a701ce8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701cec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ceda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701cd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701cd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701cd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701cd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701cd640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701cd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b0a701cbd60" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b0a701cbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701ca0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ca260"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ca3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ca570"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ca6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701ca880"/>
        <function-ref name="set" scoped="" ref="0x2b0a701caa08"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701cab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b0a701d05b8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b0a701d05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701d0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701d0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701d0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701d0da0"/>
        <function-ref name="get" scoped="" ref="0x2b0a701cf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701cf1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701cf330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701cf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b0a701cda50" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b0a701cda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701cdda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701cc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701cc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701cc330"/>
        <function-ref name="get" scoped="" ref="0x2b0a701cc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701cc640"/>
        <function-ref name="set" scoped="" ref="0x2b0a701cc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701cc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b0a701cae18" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b0a701cae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701c91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701c9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701c94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701c9640"/>
        <function-ref name="get" scoped="" ref="0x2b0a701c97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701c9950"/>
        <function-ref name="set" scoped="" ref="0x2b0a701c9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701c9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716f13e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716f13e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716f1730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716f18b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716f1a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716f1bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a716f1d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716f0020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716f01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716ee480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716ee480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716ee7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716ee958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716eeae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716eec68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716eedf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716ed020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716eb480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716eb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716eb7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716eb958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716ebae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716ebc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716ebdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716ea020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716ea1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716ea330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716e8480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716e8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716e87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716e8958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716e8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716e8c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716e8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716e7020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716e71a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716e7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716e5480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716e5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716e57d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716e5958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716e5ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716e5c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716e5df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716e4020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716e41a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716e4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716e2480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716e2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716e27d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716e2958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716e2ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716e2c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716e2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a716e1020"/>
        <function-ref name="set" scoped="" ref="0x2b0a716e11a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a716e1330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a716df480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a716df480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a716df7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a716df958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a716dfae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a716dfc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a716dfdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71748020"/>
        <function-ref name="set" scoped="" ref="0x2b0a717481a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71748330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a71746480" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a71746480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a717467d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a71746958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a71746ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a71746c68"/>
        <function-ref name="get" scoped="" ref="0x2b0a71746df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a71745020"/>
        <function-ref name="set" scoped="" ref="0x2b0a717451a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a71745330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a701d83e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a701d83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701d8730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701d88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701d8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701d8bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701d8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701ed020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701ed1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701ed330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a701eac38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a701eac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701e9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701e91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701e9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701e94b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701e9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701e97c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701e9950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701e9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a701fb3e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a701fb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701fb730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701fb8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701fba40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701fbbc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701fbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701fa020"/>
        <function-ref name="set" scoped="" ref="0x2b0a701fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a701f7c38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a701f7c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701f5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701f51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701f5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701f54b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a701f5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a701f57c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a701f5950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a701f5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a702093e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a702093e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70209730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a702098b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70209a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70209bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70209d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70208020"/>
        <function-ref name="set" scoped="" ref="0x2b0a702081a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70208330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a70204c38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a70204c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70203020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a702031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70203330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a702034b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70203640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a702037c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70203950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70203ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a701ff480" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a701ff480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a701ff7d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a701ff958"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a701ffae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a701ffc68"/>
        <function-ref name="get" scoped="" ref="0x2b0a701ffdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70216020"/>
        <function-ref name="set" scoped="" ref="0x2b0a702161a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70216330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a70212c38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a70212c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70211020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a702111a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70211330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a702114b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70211640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a702117c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70211950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70211ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7020c520" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7020c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7020c870"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7020c9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7020cb80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7020cd08"/>
        <function-ref name="get" scoped="" ref="0x2b0a7020b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7020b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7020b330"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7020b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a70220cd8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a70220cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7021f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7021f228"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7021f3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7021f538"/>
        <function-ref name="get" scoped="" ref="0x2b0a7021f6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7021f848"/>
        <function-ref name="set" scoped="" ref="0x2b0a7021f9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7021fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7021a3e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7021a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7021a730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7021a8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7021aa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7021abc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7021ad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70219020"/>
        <function-ref name="set" scoped="" ref="0x2b0a702191a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70219330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a7022dc38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a7022dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7022c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7022c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7022c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7022c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7022c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7022c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7022c950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7022cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a702283e0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a702283e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70228730"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a702288b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70228a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70228bc8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70228d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70227020"/>
        <function-ref name="set" scoped="" ref="0x2b0a702271a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70227330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b0a70223c38" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b0a70223c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a7023a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a7023a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a7023a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a7023a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7023a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a7023a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7023a950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a7023aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a702564b0" loc="61:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a702564b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70256800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b0a70256ae0" loc="62:/opt/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a70256ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0a70256e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0a70272020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0a702721a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0a70272330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0a702724b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b0a70286418" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a70286418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70286768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b0a700d3c30" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0a700d3c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0a70287020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b0a70287ce0" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70287ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a702860a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b0a70287308" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0a70287308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70287658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0a702877e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0a70287968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0a6fe1b1c8" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6fe1b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a6fe1b518"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a6fe1b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0a6fe425c8" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0a6fe425c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a6fe42918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0a6fe42aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0a6fe42c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b0a6feecc58" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b0a6feecc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a6fef9020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a6fef91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b0a6fef6168" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0a6fef6168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0a6fef64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b0a6feedd88" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b0a6feedd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a6feec170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b0a6feec2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b0a6feec480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b0a6ff11988" loc="88:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0a6ff11988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0a6ff11cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b0a6fe41e30" loc="84:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b0a6fe41e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b0a6ff151a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b0a6ff123c8" loc="85:../../../LocalTimeSyncedMicro/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0a6ff123c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0a6ff12718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a70293a60" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SinkC.AliveTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70293a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70466d60"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70468470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a704661c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70468d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a70465648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a704651f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a704688c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a70469620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70466790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70469ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70468020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0a702a59a8" loc="49:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0a702a59a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a702a1bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0a702a32e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a702a1020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a702a3b88"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a702a04d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a702a0088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a702a3738"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a702a4528"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a702a15f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a702a49c8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a702a4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b0a7029b020" loc="46:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b0a7029b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a702b12b8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a7029a978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a702b36c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a702b3278"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a702b1b58"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a702b1708"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a7029adc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a7029bb68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a702b3c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a7029a088"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7029a528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a702ad590" loc="47:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a702ad590"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a702af150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a7029c300" loc="45:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a7029c300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a7029c650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0a702cb1e0" loc="31:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0a702cb1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a702cbd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b0a702b4e40" loc="30:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b0a702b4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a702b8be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a702b7548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a702b70c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a702b79d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a702aec08" loc="28:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a702aec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a702a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b0a702bb748" loc="29:../../../LocalTimeSyncedMicro/chips/atm1281/timer/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b0a702bb748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a702b9020"/>
        <function-ref name="fired" scoped="" ref="0x2b0a702a7020"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a702a7930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a702a74a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a702b94a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a702a8578"/>
        <function-ref name="stop" scoped="" ref="0x2b0a702a8a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0a703c1670" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0a703c1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a703c0220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a703c8478" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a703c8478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a703c5b18"/>
        <function-ref name="fired" scoped="" ref="0x2b0a703c6b80"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a703c5510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a703c5088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a703c4020"/>
        <function-ref name="start" scoped="" ref="0x2b0a703c6220"/>
        <function-ref name="stop" scoped="" ref="0x2b0a703c66f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a703c9c20" loc="60:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a703c9c20"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a703c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a703c4608" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a703c4608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a703c23a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a703c2cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a703c2830"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a703c1190"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b0a7182e020" loc="68:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7182e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a7182e370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a7182e4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a7182e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a7182e808"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a7182e990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a7182eb18"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a7182eca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a7182ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GetNow" ref="0x2b0a717c6058" loc="64:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GetNow" scoped="" ref="0x2b0a717c6058"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetNow"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a717c6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a717cdda8" loc="62:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a717cdda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a717c9470"/>
        <function-ref name="fired" scoped="" ref="0x2b0a717cb510"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a717cbe20"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a717cb998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a717c98f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a717ccb38"/>
        <function-ref name="stop" scoped="" ref="0x2b0a717cb088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a717cd600" loc="61:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a717cd600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a717cd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a717c8020" loc="63:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a717c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a717c8d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a717c76b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a717c7230"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a717c7b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b0a718292a0" loc="70:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0a718292a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0a718295f0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0a71829778"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0a71829900"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0a71829a88"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0a71829c10"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0a71829d98"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0a71828020"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0a718281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b0a7182d228" loc="69:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0a7182d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a7182b998"/>
        <function-ref name="fired" scoped="" ref="0x2b0a7182c748"/>
        <function-ref name="get" scoped="" ref="0x2b0a7182dda8"/>
        <function-ref name="reset" scoped="" ref="0x2b0a7182cbd0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a7182be20"/>
        <function-ref name="set" scoped="" ref="0x2b0a7182c270"/>
        <function-ref name="start" scoped="" ref="0x2b0a7182b088"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7182b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a717c41a8" loc="67:../../../LocalTimeSyncedMicro/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a717c41a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a717c1270"/>
        <function-ref name="test" scoped="" ref="0x2b0a717c2930"/>
        <function-ref name="get" scoped="" ref="0x2b0a717c4d28"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a717c16f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a717c1bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a717c3b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a717c36d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a717c2db8"/>
        <function-ref name="set" scoped="" ref="0x2b0a717c31f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a717c2020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a717c24a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a7034a160" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7034a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a7034a4b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a7034a638"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a7034a7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a7034a948"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a7034aad0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a7034ac58"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a7034ade0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a70349020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0a703617b0" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0a703617b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0a70361b00"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0a70361c88"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0a70361e10"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0a70360020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0a703601a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0a70360330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0a703604b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0a70360640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0a703494e8" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0a703494e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a70362db8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70364a20"/>
        <function-ref name="get" scoped="" ref="0x2b0a703640c0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70362020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70361270"/>
        <function-ref name="set" scoped="" ref="0x2b0a70364548"/>
        <function-ref name="start" scoped="" ref="0x2b0a703624a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70362930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a7034f180" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a7034f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a7034b270"/>
        <function-ref name="test" scoped="" ref="0x2b0a7034d930"/>
        <function-ref name="get" scoped="" ref="0x2b0a7034fd00"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a7034b6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a7034bbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a7034eb58"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7034e6d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a7034ddb8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7034e1f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a7034d020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7034d4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a70358a98" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70358a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a70358de8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a70357020"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a703571a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a70357330"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a703574b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a70357640"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a703577c8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a70357950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b0a7036e0c0" loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b0a7036e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b0a7036e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b0a7036e7c0" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b0a7036e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b0a7036eb10"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b0a7036ec98"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b0a7036ee20"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b0a7036d020"/>
        <function-ref name="countBusy" scoped="" ref="0x2b0a7036d1a8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b0a7036d330"/>
        <function-ref name="getAssr" scoped="" ref="0x2b0a7036d4b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b0a7036d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0a70357e18" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0a70357e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a7036f798"/>
        <function-ref name="fired" scoped="" ref="0x2b0a703704f8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70372a18"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70370980"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a7036fc20"/>
        <function-ref name="set" scoped="" ref="0x2b0a70370020"/>
        <function-ref name="start" scoped="" ref="0x2b0a70370e08"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7036f310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a7035da70" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a7035da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a70359b80"/>
        <function-ref name="test" scoped="" ref="0x2b0a70359270"/>
        <function-ref name="get" scoped="" ref="0x2b0a7035c658"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a70358088"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a70358560"/>
        <function-ref name="reset" scoped="" ref="0x2b0a7035b4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7035b020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a703596f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7035cae0"/>
        <function-ref name="start" scoped="" ref="0x2b0a7035b930"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7035bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b0a703eccf0" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b0a703eccf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7040a0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7040a228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0a703efc70" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a703efc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a703ec410"/>
        <function-ref name="fired" scoped="" ref="0x2b0a703ed4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a703eddb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a703ed930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a703ec898"/>
        <function-ref name="start" scoped="" ref="0x2b0a703ee9f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a703ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a703f4ab0" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a703f4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a703f1d60"/>
        <function-ref name="fired" scoped="" ref="0x2b0a703f2470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a703f11c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a703f2d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a703ef648"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a703ef1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a703f28c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a703f3620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a703f1790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a703f3ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a703f2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b0a7043d930" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b0a7043d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7043dc80"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7043de08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b0a70442858" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b0a70442858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a7043fbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0a704401c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a7043f020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70440a60"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a7043d4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a7043d088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70440610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a704413d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a7043f5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70441878"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70441d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a704485e0" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a704485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70444988"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70446020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a70446d70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70446900"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a704422d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a70444df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70446490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a70447198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70444398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70447658"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70447b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70459128" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70459128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70459ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0a70450330" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70450330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a7044f0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a7044f9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a7044f548"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7044fe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b0a70464e20" loc="54:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0a70464e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0a704611a8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0a70461330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0a704614b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b0a7047b020" loc="66:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a7047b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a7047b370"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b0a7047b4f8"/>
        <function-ref name="setType" scoped="" ref="0x2b0a7047b680"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b0a7047b808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a7047b990"/>
        <function-ref name="getType" scoped="" ref="0x2b0a7047bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b0a70478b48" loc="62:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b0a70478b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b0a7045b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x2b0a704600e0" loc="56:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b0a704600e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a70460430"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a704605b8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70460740"/>
        <function-ref name="stop" scoped="" ref="0x2b0a704608c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a7045f1c8" loc="59:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a7045f1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7045f518"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7045f6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7045f828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a7045dbb8" loc="61:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a7045dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7045c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a7045b2c8" loc="65:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a7045b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7045b618"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7045b7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7045b928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7045bab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7045bc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7045d020" loc="60:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7045d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7045d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoTrafficStatistics" ref="0x2b0a7046f9c0" loc="71:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoTrafficStatistics" scoped="" ref="0x2b0a7046f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a7046fd10"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a70473020"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a704731a8"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a70473330"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a704734b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelay" ref="0x2b0a70479020" loc="67:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelay" scoped="" ref="0x2b0a70479020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0a70479b68"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0a70476088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingControl" ref="0x2b0a70461858" loc="55:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingControl" scoped="" ref="0x2b0a70461858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a70461ba8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70461d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b0a70476590" loc="70:../../lib/net/orinoco/OrinocoP.nc">
      <component-ref qname="OrinocoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70476590"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a704768e0"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a70476a68"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a70476bf0"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a70476d78"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a70475020"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a704751a8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a70475330"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a704754b8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a70475640"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a704757c8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a70475950"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a70475ad8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a70475c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2b0a704897b0" loc="48:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0a704897b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0a70489b00"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0a70489c88"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0a70489e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a7049a358" loc="77:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a7049a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7049a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a70491648" loc="76:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a70491648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70491998"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70491b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70491ca8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70491e30"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7049a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2b0a70483020" loc="58:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2b0a70483020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a70483370"/>
        <function-ref name="setOrigin" scoped="" ref="0x2b0a704834f8"/>
        <function-ref name="setType" scoped="" ref="0x2b0a70483680"/>
        <function-ref name="getOrigin" scoped="" ref="0x2b0a70483808"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a70483990"/>
        <function-ref name="getType" scoped="" ref="0x2b0a70483b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2b0a70485d00" loc="54:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2b0a70485d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2b0a704840a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a70484348" loc="57:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a70484348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70484698"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70484820"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a704849a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70484b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70484cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a704851c8" loc="53:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a704851c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70485518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a704886d0" loc="51:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a704886d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="QueueSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70488a20"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70488ba8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70488d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b0a704dc190" loc="147:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b0a704dc190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a704dc4e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a704dc668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketDelayMilli" ref="0x2b0a70482060" loc="61:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketDelayMilli" scoped="" ref="0x2b0a70482060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketDelay"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="delay" scoped="" ref="0x2b0a70482ba8"/>
        <function-ref name="creationTime" scoped="" ref="0x2b0a704810c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2b0a70499020" loc="80:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2b0a70499020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6ffec198"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b0a6ffec4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b0a704928c0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b0a704aa680"/>
        <function-ref name="element" scoped="" ref="0x2b0a704aacb0"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0a70492470"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a704aa020"/>
        <function-ref name="empty" scoped="" ref="0x2b0a70499b68"/>
        <function-ref name="size" scoped="" ref="0x2b0a70492020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a704ca518" loc="95:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a704ca518"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a704ca868"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a704ca9f0"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a704cab78"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a704cad00"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a704c8020"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a704c81a8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a704c8330"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a704c84b8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a704c8640"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a704c87c8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a704c8950"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a704c8ad8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a704c8c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a7049d5b8" loc="75:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a7049d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7049da08"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7049db90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7049dd18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7049b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7049b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a7048a8e8" loc="46:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a7048a8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a7048ac38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CacheCompare" ref="0x2b0a7047dcf0" loc="64:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b0a7047dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a6ffed350"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b0a6ffed808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b0a7047f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2b0a704b45e8" loc="88:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a704b45e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a704b9bb0"/>
        <function-ref name="get" scoped="" ref="0x2b0a704b96a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a704b9190"/>
        <function-ref name="set" scoped="" ref="0x2b0a704b80f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a70486538" loc="52:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a70486538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70486888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampRadio" ref="0x2b0a704ceaa8" loc="89:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a704ceaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a704cc020"/>
        <function-ref name="clear" scoped="" ref="0x2b0a704cc700"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a704b2828"/>
        <function-ref name="set" scoped="" ref="0x2b0a704ccde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b0a7049fb98" loc="86:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a7049fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a704bd760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b0a704bddb0" loc="87:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0a704bddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a704bb968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MsgPool" ref="0x2b0a704a8270" loc="81:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MsgPool" scoped="" ref="0x2b0a704a8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
            <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a704a11b8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0a704a3688"/>
        <function-ref name="empty" scoped="" ref="0x2b0a704a8db8"/>
        <function-ref name="put" scoped="" ref="0x2b0a704a3ad8"/>
        <function-ref name="size" scoped="" ref="0x2b0a704a3238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="selfReceiveTask" ref="0x2b0a704c1020" loc="110:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="selfReceiveTask" scoped="" ref="0x2b0a704c1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a704c1570"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a704c16f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0a70489020" loc="47:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0a70489020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a70489370"/>
        <function-ref name="stop" scoped="" ref="0x2b0a704894f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0a704c46c0" loc="92:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a704c46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0a704c4a10"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0a704c4b98"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0a704c4d20"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0a704ca020"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0a704ca1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="QueueStatistics" ref="0x2b0a7047c3a0" loc="67:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStatistics" scoped="" ref="0x2b0a7047c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b0a7046dc28"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a7046d820"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a7049d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketHistory" ref="0x2b0a704a0020" loc="83:../../lib/net/orinoco/OrinocoQueueP.nc">
      <component-ref qname="OrinocoQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketHistory" scoped="" ref="0x2b0a704a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a6ffed350"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b0a6ffed808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b0a704a0b68"/>
        <function-ref name="flush" scoped="" ref="0x2b0a7049f528"/>
        <function-ref name="lookup" scoped="" ref="0x2b0a7049f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a70544d30" loc="44:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a70544d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a705410d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a70541260"/>
        <function-ref name="start" scoped="" ref="0x2b0a705413e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70541570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a705417f8" loc="46:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a705417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70541b48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70541cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70541e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70540020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a705401a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a70540420" loc="47:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a70540420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70540770"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a705408f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70540a80"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70540c08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70540d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoPathCost" ref="0x2b0a7055a080" loc="56:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a7055a080"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0a7055a3d0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0a7055a558"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0a7055a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b0a7053eb38" loc="52:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a7053eb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7053c190"/>
        <function-ref name="get" scoped="" ref="0x2b0a7053dc38"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a7053d728"/>
        <function-ref name="set" scoped="" ref="0x2b0a7053c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7053f080" loc="48:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7053f080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7053f3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0a7055e130" loc="53:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a7055e130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a7055d588"/>
        <function-ref name="clear" scoped="" ref="0x2b0a7055dc68"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a7055ee80"/>
        <function-ref name="set" scoped="" ref="0x2b0a7055b380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0a7053f8b0" loc="51:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a7053f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a7053e490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStatistics" ref="0x2b0a705598e8" loc="58:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStatistics" scoped="" ref="0x2b0a705598e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a70559c38"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a70559dc0"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a70556020"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a705561a8"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a70556330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0a7055aad0" loc="57:../../lib/net/orinoco/OrinocoRadioC.nc">
      <component-ref qname="OrinocoRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a7055aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0a7055ae20"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0a70559020"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0a705591a8"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0a70559330"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0a705594b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a70550d50" loc="47:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a70550d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a7054f0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a7054f260"/>
        <function-ref name="start" scoped="" ref="0x2b0a7054f3e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7054f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2b0a7055f020" loc="73:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7055f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70583608"/>
        <function-ref name="get" scoped="" ref="0x2b0a705830f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a7055fba0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70583b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a7054f7f8" loc="49:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a7054f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7054fb48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7054fcd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7054fe58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7054e020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7054e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubSend" ref="0x2b0a70564b40" loc="69:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubSend" scoped="" ref="0x2b0a70564b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70563020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a705631a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70563330"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a705634b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70563640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a7054e420" loc="50:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a7054e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7054e770"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7054e8f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7054ea80"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7054ec08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7054ed90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b0a7057caf8" loc="80:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0a7057caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0a7057ce48"/>
        <function-ref name="rand32" scoped="" ref="0x2b0a7057e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70581c00" loc="79:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70581c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a70580020"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a705801a8"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a70580330"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a705804b8"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a70580640"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a705807c8"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a70580950"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a70580ad8"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a70580c60"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a70580de8"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a7057f020"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a7057f1a8"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a7057f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b0a7057ba40" loc="84:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b0a7057ba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a7057bd90"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a7057a020"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a7057a1a8"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a7057a330"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a7057a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70568ba0" loc="64:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70568ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70567020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a705671a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70567330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a705674b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70567640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BackoffConfig" ref="0x2b0a7056e490" loc="53:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffConfig" scoped="" ref="0x2b0a7056e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b0a7056e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketStatistics" ref="0x2b0a7056edb8" loc="56:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStatistics" scoped="" ref="0x2b0a7056edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b0a7048a4e8"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b0a7048bae8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70570930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7054d080" loc="51:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7054d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7054d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b0a7056f020" loc="60:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b0a7056f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a7056f370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a7056f4f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a7056f680"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7056f808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2b0a70567990" loc="65:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2b0a70567990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a70567ce0"/>
        <function-ref name="source" scoped="" ref="0x2b0a70567e68"/>
        <function-ref name="address" scoped="" ref="0x2b0a70566020"/>
        <function-ref name="destination" scoped="" ref="0x2b0a705661a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a70566330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a705664b8"/>
        <function-ref name="type" scoped="" ref="0x2b0a70566640"/>
        <function-ref name="setType" scoped="" ref="0x2b0a705667c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a70566950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a70566ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a70566c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubSend" ref="0x2b0a70565d70" loc="68:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubSend" scoped="" ref="0x2b0a70565d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a705641e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70564370"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a705644f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70564680"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70564808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x2b0a705877f0" loc="200:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x2b0a705877f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a70587b40"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a70587cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a7057e298" loc="82:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a7057e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a7057e5e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a7057e770"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a7057e8f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a7057ea80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a7057ec08"/>
        <function-ref name="get" scoped="" ref="0x2b0a7057ed90"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a7057b020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a7057b640"/>
        <function-ref name="set" scoped="" ref="0x2b0a7057b1a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a7057b330"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a7057b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x2b0a70563b58" loc="72:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70563b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70560190"/>
        <function-ref name="get" scoped="" ref="0x2b0a70562c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70562728"/>
        <function-ref name="set" scoped="" ref="0x2b0a705606a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSubReceive" ref="0x2b0a705656d0" loc="67:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSubReceive" scoped="" ref="0x2b0a705656d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70565a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSubReceive" ref="0x2b0a70565020" loc="66:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSubReceive" scoped="" ref="0x2b0a70565020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70565370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PathCost" ref="0x2b0a70581230" loc="76:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PathCost" scoped="" ref="0x2b0a70581230"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0a70581580"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0a70581708"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0a70581890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a7056fbd0" loc="61:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a7056fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70569dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a7056b510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a70569238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a7056bdb0"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a705686c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a70568278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a7056b960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a7056c740"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70569808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a7056cbe0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7056b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficUpdates" ref="0x2b0a7057a8a8" loc="85:../../lib/net/orinoco/OrinocoRadioP.nc">
      <component-ref qname="OrinocoRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficUpdates" scoped="" ref="0x2b0a7057a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0a7057abf8"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0a7057ad80"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0a70579020"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0a705791a8"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0a70579330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a705f7bc0" loc="46:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a705f7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a7061c020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a7061c1a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a7061c330"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7061c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0a7060c190" loc="59:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a7060c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a7060b700"/>
        <function-ref name="clear" scoped="" ref="0x2b0a7060bde0"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a7060b020"/>
        <function-ref name="set" scoped="" ref="0x2b0a706314f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a70615e18" loc="51:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70615e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a706171a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a7061cc30" loc="48:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a7061cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7061b020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7061b1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7061b330"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7061b4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7061b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a70619968" loc="50:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a70619968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70619cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a70617430" loc="53:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a70617430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70617780"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70617908"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70617a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70617c18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70617da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7061bdc0" loc="49:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7061bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70619170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0a7060f588" loc="56:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0a7060f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0a7060f8d8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a7060fa60"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a7060fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a70614080" loc="54:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a70614080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a706143d0"/>
        <function-ref name="source" scoped="" ref="0x2b0a70614558"/>
        <function-ref name="address" scoped="" ref="0x2b0a706146e0"/>
        <function-ref name="destination" scoped="" ref="0x2b0a70614868"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a706149f0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a70614b78"/>
        <function-ref name="type" scoped="" ref="0x2b0a70614d00"/>
        <function-ref name="setType" scoped="" ref="0x2b0a70613020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a706131a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a70613330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a706134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b0a706122f0" loc="58:../../platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b0a706122f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70611768"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70611e48"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70611088"/>
        <function-ref name="set" scoped="" ref="0x2b0a7060d558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a706306e8" loc="46:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a706306e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a70630a38"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a70630bc0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70630d48"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7062d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0a70621d28" loc="66:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70621d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7061e388"/>
        <function-ref name="get" scoped="" ref="0x2b0a7061fe00"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a7061f8f0"/>
        <function-ref name="set" scoped="" ref="0x2b0a7061e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a70629020" loc="51:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70629020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a70629370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a706295f8" loc="53:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a706295f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70629948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70629ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70629c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70629de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70628020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a7062d798" loc="48:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a7062d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7062dae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7062dc70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7062ddf8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7062c020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7062c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a7062a498" loc="50:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a7062a498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7062a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0a706238d8" loc="65:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a706238d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70621020"/>
        <function-ref name="get" scoped="" ref="0x2b0a706229a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70622490"/>
        <function-ref name="set" scoped="" ref="0x2b0a70621530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7062c928" loc="49:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7062c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7062cc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0a70643510" loc="69:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70643510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70642a88"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70641190"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a706423a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70641870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0a706440f0" loc="68:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a706440f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70644c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0a70626528" loc="64:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70626528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70625b18"/>
        <function-ref name="get" scoped="" ref="0x2b0a70625608"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a706250f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70623088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0a706279a8" loc="62:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0a706279a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0a70627cf8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70627e80"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70626030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a706282c0" loc="54:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a706282c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a70628610"/>
        <function-ref name="source" scoped="" ref="0x2b0a70628798"/>
        <function-ref name="address" scoped="" ref="0x2b0a70628920"/>
        <function-ref name="destination" scoped="" ref="0x2b0a70628aa8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a70628c30"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a70628db8"/>
        <function-ref name="type" scoped="" ref="0x2b0a70627020"/>
        <function-ref name="setType" scoped="" ref="0x2b0a706271a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a70627330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a706274b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a70627640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0a7063f478" loc="70:../../chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a7063f478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a7063e900"/>
        <function-ref name="clear" scoped="" ref="0x2b0a7063d020"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a7063e220"/>
        <function-ref name="set" scoped="" ref="0x2b0a7063d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a7063b7a0" loc="42:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a7063b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a7063baf0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a7063bc78"/>
        <function-ref name="start" scoped="" ref="0x2b0a7063be00"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70638020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0a7067ed28" loc="81:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a7067ed28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7067b388"/>
        <function-ref name="get" scoped="" ref="0x2b0a7067de00"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a7067d8f0"/>
        <function-ref name="set" scoped="" ref="0x2b0a7067b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b0a70656218" loc="61:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b0a70656218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a70656568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b0a70650208" loc="63:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b0a70650208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a70650658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a706507e0"/>
        <function-ref name="request" scoped="" ref="0x2b0a70650968"/>
        <function-ref name="granted" scoped="" ref="0x2b0a70650af0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a70650c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a70634020" loc="48:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a70634020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a70634370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a70638798" loc="45:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a70638798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70638ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70638c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70638df8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70637020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a706371a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a70636498" loc="47:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a70636498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a706367e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0a7064a020" loc="65:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a7064a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0a7064a370"/>
        <function-ref name="address" scoped="" ref="0x2b0a7064a4f8"/>
        <function-ref name="destination" scoped="" ref="0x2b0a7064a680"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a7064a808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a7064a990"/>
        <function-ref name="pan" scoped="" ref="0x2b0a7064ab18"/>
        <function-ref name="setPan" scoped="" ref="0x2b0a7064aca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a7064ae28"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a70649020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b0a706493d0" loc="66:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b0a706493d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70649720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a706498a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70649a30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70649bb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70649d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0a70681870" loc="80:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70681870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7067e020"/>
        <function-ref name="get" scoped="" ref="0x2b0a706809a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70680490"/>
        <function-ref name="set" scoped="" ref="0x2b0a7067e530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0a70663d10" loc="70:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a70663d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b0a706680a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0a70668228"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b0a706683b0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0a70668538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b0a70659550" loc="55:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b0a70659550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a706598a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70659a28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70659bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70659d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70658020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a70637928" loc="46:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a70637928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70637c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0a70678190" loc="85:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70678190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70677700"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70677de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70677020"/>
        <function-ref name="set" scoped="" ref="0x2b0a706734f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0a70676d80" loc="84:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70676d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70679928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0a70662518" loc="79:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70662518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7065aae0"/>
        <function-ref name="get" scoped="" ref="0x2b0a7065a5d0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a7065a0c0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70681020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b0a70651d80" loc="59:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a70651d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70657170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a706572f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70657480"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70657608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70657790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0a70634be0" loc="51:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a70634be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70633020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b0a7065bb40" loc="71:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b0a7065bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0a70667020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0a706671a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0a70667330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0a706674b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0a70667640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0a70667968" loc="77:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70667968"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0a70667cb8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70667e40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70662020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a70633e50" loc="54:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a70633e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a706321e8"/>
        <function-ref name="source" scoped="" ref="0x2b0a70632370"/>
        <function-ref name="address" scoped="" ref="0x2b0a706324f8"/>
        <function-ref name="destination" scoped="" ref="0x2b0a70632680"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a70632808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a70632990"/>
        <function-ref name="type" scoped="" ref="0x2b0a70632b18"/>
        <function-ref name="setType" scoped="" ref="0x2b0a70632ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a70632e28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a70659020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a706591a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0a70672130" loc="86:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70672130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a706717a0"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70671e80"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a706710c0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70670588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b0a70657af0" loc="60:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a70657af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70657e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0a70676570" loc="82:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70676570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a706768c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0a70633860" loc="52:../../chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a70633860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70633bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b0a706be300" loc="51:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b0a706be300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b0a706be650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b0a706a8c00" loc="47:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b0a706a8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b0a70685020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b0a706c1760" loc="50:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b0a706c1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a706c1ab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0a706c1c38"/>
        <function-ref name="source" scoped="" ref="0x2b0a706c1dc0"/>
        <function-ref name="destination" scoped="" ref="0x2b0a706a7020"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a706a71a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a706a7330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a706a74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b0a7069e570" loc="49:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b0a7069e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b0a7069e8c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b0a7069ea48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b0a7069ebd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b0a7069ed58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b0a706ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b0a706c9bd8" loc="61:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a706c9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0a706cd020"/>
        <function-ref name="wait" scoped="" ref="0x2b0a706cd1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a706cd330"/>
        <function-ref name="isFree" scoped="" ref="0x2b0a706cd4b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0a706cd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b0a706c3e08" loc="62:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b0a706c3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a706cc1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a706cc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a706cc4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a706cc640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a706cc7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a706cc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b0a706c2020" loc="64:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a706c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a706eb578"/>
        <function-ref name="clear" scoped="" ref="0x2b0a706ebc58"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a706c2e70"/>
        <function-ref name="set" scoped="" ref="0x2b0a706ea380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b0a70690cc0" loc="43:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70690cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a706940a0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70694228"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a706943b0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0a70694538"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0a706946c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b0a706aa6c0" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b0a706aa6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b0a706aaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b0a70687ad0" loc="44:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b0a70687ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0a70687e20"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b0a70693020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0a706931a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b0a70693330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b0a706934b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b0a70693640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0a706937c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0a70693950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b0a706d0d58" loc="60:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a706d0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0a706c00d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0a706c0260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0a706c03e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0a706c0570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0a706c06f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0a706c0880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0a706c0a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0a706c0b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0a706c0d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0a706bd020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0a706bd1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0a706bd330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0a706bd4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0a706bd740"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a706bd8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0a706bda50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0a706bdbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0a706bdd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0a706cf020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a706cf1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0a706cf330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0a706cf4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0a706cf640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0a706cf7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0a706cf950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b0a706acb40" loc="45:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b0a706acb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a7068e020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0a7068e1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a7068e330"/>
        <function-ref name="getSender" scoped="" ref="0x2b0a7068e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b0a706a30d0" loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b0a706a30d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b0a706a3420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b0a706a35a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b0a706a3730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b0a706a38b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b0a70742c50" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70742c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0a7076e020"/>
        <function-ref name="wait" scoped="" ref="0x2b0a7076e1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7076e330"/>
        <function-ref name="isFree" scoped="" ref="0x2b0a7076e4b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0a7076e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0a7076ec68" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a7076ec68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70760410"/>
        <function-ref name="fired" scoped="" ref="0x2b0a707624a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a70762db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70762930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a70760898"/>
        <function-ref name="start" scoped="" ref="0x2b0a707639f0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70762020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b0a718829a8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a718829a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0a71882d18"/>
        <function-ref name="wait" scoped="" ref="0x2b0a71880020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a718801a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b0a71880330"/>
        <function-ref name="getNow" scoped="" ref="0x2b0a718804b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b0a71880970" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a71880970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a7187d020"/>
        <function-ref name="fired" scoped="" ref="0x2b0a7187e0c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a7187e9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a7187e548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a7187d4a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a7187f730"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7187fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b0a7187d880" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0a7187d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0a7187dbd0"/>
        <function-ref name="suspend" scoped="" ref="0x2b0a7187dd58"/>
        <function-ref name="resume" scoped="" ref="0x2b0a7187c020"/>
        <function-ref name="run" scoped="" ref="0x2b0a7187c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b0a707445b8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0a707445b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0a70744908"/>
        <function-ref name="suspend" scoped="" ref="0x2b0a70744a90"/>
        <function-ref name="resume" scoped="" ref="0x2b0a70744c18"/>
        <function-ref name="run" scoped="" ref="0x2b0a70744da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a70824430" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a70824430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70824780"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70824908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70824a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a70824d18" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a70824d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708230a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a708261a0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a708261a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a70826510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a707fa700" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a707fa700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a707faa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a707fabd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a707fad60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70829020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a70829510" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a70829510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70829880"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70829a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70829b90"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70829d18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70828020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a70828aa0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a70828aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70828e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70825678" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70825678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708259c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70825b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70825cd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70825e60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70824020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a708241a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70823328" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70823328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a70823678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0a70823800"/>
        <function-ref name="source" scoped="" ref="0x2b0a70823988"/>
        <function-ref name="destination" scoped="" ref="0x2b0a70823b10"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a70823c98"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a70823e20"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a70822020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a70828388" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a70828388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708286f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0a708268b8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a708268b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70826c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a707fb1f0" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a707fb1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a707fb540"/>
        <function-ref name="source" scoped="" ref="0x2b0a707fb6c8"/>
        <function-ref name="address" scoped="" ref="0x2b0a707fb850"/>
        <function-ref name="destination" scoped="" ref="0x2b0a707fb9d8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a707fbb60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a707fbce8"/>
        <function-ref name="type" scoped="" ref="0x2b0a707fbe70"/>
        <function-ref name="setType" scoped="" ref="0x2b0a707fa020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a707fa1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a707fa330"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a707fa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0a70825020" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a70825020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70825390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a718d2b90" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a718d2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a718d1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a718d22a8" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a718d22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a718d25f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a718d2780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a718d2908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a718d4020" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a718d4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a718d4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a718d8578" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a718d8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a718d88c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a718d8a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a718d8bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a718d8d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a718d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a718d7388" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a718d7388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a718d76f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a718d7880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a718d7a08"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a718d7b90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a718d7d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b0a718d67e0" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b0a718d67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a718d6b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a718da1c8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a718da1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a718da518"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a718da6a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a718da828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a718da9b0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a718dab38"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a718dacc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a718d12a8" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a718d12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a718d16f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b0a718d1880"/>
        <function-ref name="source" scoped="" ref="0x2b0a718d1a08"/>
        <function-ref name="destination" scoped="" ref="0x2b0a718d1b90"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a718d1d18"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a718d0020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a718d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b0a718d03f0" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a718d03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0a718d0740"/>
        <function-ref name="changed" scoped="" ref="0x2b0a718d08c8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0a718d0a50"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0a718d0bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a718d34d0" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a718d34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a718d3820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a718d39a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a718d3b30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a718d3cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a718d3e40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a718d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a718d60c8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a718d60c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a718d6438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b0a718d4738" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b0a718d4738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a718d4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a718d9020" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a718d9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a718d9370"/>
        <function-ref name="source" scoped="" ref="0x2b0a718d94f8"/>
        <function-ref name="address" scoped="" ref="0x2b0a718d9680"/>
        <function-ref name="destination" scoped="" ref="0x2b0a718d9808"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a718d9990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a718d9b18"/>
        <function-ref name="type" scoped="" ref="0x2b0a718d9ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b0a718d9e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a718d8020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a718d81a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a718d8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b0a718d4e50" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b0a718d4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a718d31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b0a707e3c60" loc="54:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a707e3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0a7080f020"/>
        <function-ref name="changed" scoped="" ref="0x2b0a7080f1a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0a7080f330"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0a7080f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a7081ca48" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a7081ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7081cd98"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7083d020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7083d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b0a7083d3f0" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a7083d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a7083d740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a7083d8c8"/>
        <function-ref name="request" scoped="" ref="0x2b0a7083da50"/>
        <function-ref name="granted" scoped="" ref="0x2b0a7083dbd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a7083dd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b0a7081c100" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b0a7081c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7081c450"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7081c5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7081c760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0a7089f510" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a7089f510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0a7089f880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0a7089fa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0a7089e550" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a7089e550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0a7089e8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b0a7089ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0a708a0748" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a708a0748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a708a0ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a708a0c40"/>
        <function-ref name="request" scoped="" ref="0x2b0a708a0dc8"/>
        <function-ref name="granted" scoped="" ref="0x2b0a7089f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a7089f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0a7089fc50" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a7089fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0a7089e020"/>
        <function-ref name="userId" scoped="" ref="0x2b0a7089e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a718f2c38" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a718f2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a718f1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b0a718f12a8" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b0a718f12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0a718f15f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0a718f1780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0a718f1908"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a718f1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0a718eedf8" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a718eedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0a718ed1a8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0a718ed330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0a718ede18" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a718ede18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0a718ec1c0"/>
        <function-ref name="configure" scoped="" ref="0x2b0a718ec348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0a718ec5d0" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0a718ec5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0a718ec920"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0a718ecaa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0a718ecc30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a718ecdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0a718ee100" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a718ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a718ee470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a718ee5f8"/>
        <function-ref name="request" scoped="" ref="0x2b0a718ee780"/>
        <function-ref name="granted" scoped="" ref="0x2b0a718ee908"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a718eea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0a718ed578" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a718ed578"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0a718ed8c8"/>
        <function-ref name="userId" scoped="" ref="0x2b0a718eda50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0a718eb100" loc="68:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0a718eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a718eb450"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a718eb5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a708cb0a0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a708cb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a708cb3f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a708cb578"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a708cb700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a708cb988" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a708cb988"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708cbcd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b0a708d0b50" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b0a708d0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b0a708cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a7089bb38" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a7089bb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708d1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a708d11a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a708d1330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708d14b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708d1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b0a708cc2e0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a708cc2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708cc630"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a708cc7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708cc940"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708ccac8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a708ccc50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a708ccdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b0a708cf2c8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a708cf2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0a708cf618"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0a708cf7a0"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0a708cf928"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0a708cfab0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0a708cfc38"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0a708cfdc0"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0a708ce020"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0a708ce1a8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0a708ce330"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0a708ce4b8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0a708ce640"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0a708ce7c8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0a708ce950"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0a708cebd8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a708ced60"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0a708cd020"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0a708cd1a8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0a708cd330"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0a708cd4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a708cd640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0a708cd7c8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0a708cd950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0a708cdad8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0a708cdc60"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0a708cdde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b0a708d1888" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a708d1888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a708d1bd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a708d1d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708d0020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a708d01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a708d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b0a708d05b8" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a708d05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708d0908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a708f5928" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a708f5928"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a708f5c78"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a708f5e00"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a708f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a708f42a8" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a708f42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708f45f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0a708f9c10" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a708f9c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708f8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a708f81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708f8330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708f84b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a708f8640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a708f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b0a708f7430" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b0a708f7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708f7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a708f4880" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a708f4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708f4bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a708f4d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708f3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708f31a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a708f3330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a708f34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b0a708f8a50" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b0a708f8a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a708f8da0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a708f7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a708f71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b0a708c4d20" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b0a708c4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a708f90a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a708f9228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a708f93b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b0a708f9638" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b0a708f9638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a708f9988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b0a708f7a08" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b0a708f7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a708f7d58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a708f5020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a708f51a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a708f5330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a708f54b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a708f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0a709a0900" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a709a0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0a709a0c50"/>
        <function-ref name="address" scoped="" ref="0x2b0a709a0dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b0a7099f020"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a7099f1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a7099f330"/>
        <function-ref name="pan" scoped="" ref="0x2b0a7099f4b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b0a7099f640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a7099f7c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a7099f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a7099fb98" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a7099fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7099e020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7099e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7099e330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7099e4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a7099e640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a7099e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b0a709a3980" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a709a3980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0a709a3cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0a709a3e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0a709a2020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0a709a21a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0a709a2330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0a709a24b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0a709a2640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0a709a27c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0a709a2950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0a709a2ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0a709a2c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0a709a2de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0a709a1020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0a709a12a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a709a1430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0a709a15b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0a709a1740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0a709a18c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0a709a1a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a709a1bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0a709a1d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0a709a0020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0a709a01a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0a709a0330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0a709a04b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a7099eab0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a7099eab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7099ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7099c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7099c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7099c330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a7099c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a7099c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b0a7196da88" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b0a7196da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b0a7196ddd8"/>
        <function-ref name="address" scoped="" ref="0x2b0a7196c020"/>
        <function-ref name="destination" scoped="" ref="0x2b0a7196c1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a7196c330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a7196c4b8"/>
        <function-ref name="pan" scoped="" ref="0x2b0a7196c640"/>
        <function-ref name="setPan" scoped="" ref="0x2b0a7196c7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a7196c950"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a7196cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a7196cd20" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a7196cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7196b0a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7196b228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7196b3b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7196b538"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a7196b6c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a7196b848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b0a71971b00" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b0a71971b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b0a71971e50"/>
        <function-ref name="getDSN" scoped="" ref="0x2b0a7196f020"/>
        <function-ref name="setFCF" scoped="" ref="0x2b0a7196f1a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b0a7196f330"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b0a7196f4b8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b0a7196f640"/>
        <function-ref name="setDSN" scoped="" ref="0x2b0a7196f7c8"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b0a7196f950"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b0a7196fad8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b0a7196fc60"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b0a7196fde8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b0a7196e020"/>
        <function-ref name="localAddr" scoped="" ref="0x2b0a7196e1a8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b0a7196e430"/>
        <function-ref name="localPan" scoped="" ref="0x2b0a7196e5b8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b0a7196e740"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b0a7196e8c8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b0a7196ea50"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b0a7196ebd8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a7196ed60"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b0a7196d020"/>
        <function-ref name="getFCF" scoped="" ref="0x2b0a7196d1a8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b0a7196d330"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b0a7196d4b8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b0a7196d640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b0a7196baf0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b0a7196baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b0a7196be40"/>
        <function-ref name="changed" scoped="" ref="0x2b0a7196a020"/>
        <function-ref name="amGroup" scoped="" ref="0x2b0a7196a1a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2b0a7196a330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a7196a5b8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a7196a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7196a908"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7196aa90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7196ac18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7196ada0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a71969020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a719691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a70a0e510" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a70a0e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70a0e860"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70a0e9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70a0eb70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a70a0edf8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a0edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70a0d170"/>
        <function-ref name="header" scoped="" ref="0x2b0a70a0d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a70a0f470" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a70a0f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70a0f7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70a0f948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70a0fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70a0d580" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70a0d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a70a0d8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0a70a0da58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a70a0dbe0"/>
        <function-ref name="getSender" scoped="" ref="0x2b0a70a0dd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b0a70a0fd18" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70a0fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70a0e0a0"/>
        <function-ref name="header" scoped="" ref="0x2b0a70a0e228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a71992458" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a71992458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a719927a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a71992930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a71992ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a71992d40" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a71992d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a719910d8"/>
        <function-ref name="header" scoped="" ref="0x2b0a71991260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b0a71990bd8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a71990bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7198e020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b0a7198e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7198e330"/>
        <function-ref name="set" scoped="" ref="0x2b0a7198e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a71997da0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a71997da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a71993170"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a719932f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a71993480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b0a71990020" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0a71990020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b0a71990370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0a719904f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b0a71990680"/>
        <function-ref name="evicted" scoped="" ref="0x2b0a71990808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b0a71990990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b0a719936c8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a719936c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a71993a18"/>
        <function-ref name="header" scoped="" ref="0x2b0a71993ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a71993de8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a71993de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a71992170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b0a719914a8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b0a719914a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b0a719917f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b0a71991980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b0a71991b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b0a71991c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b0a709d5d58" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0a709d5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b0a709d20d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0a709d2260"/>
        <function-ref name="getNode" scoped="" ref="0x2b0a709d23e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b0a709d2570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b0a709d26f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b0a709ceb18" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a709ceb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a709cee68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b0a709cd020"/>
        <function-ref name="get" scoped="" ref="0x2b0a709cd1a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a709cd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b0a709cf850" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b0a709cf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b0a709cfba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b0a709cfd28"/>
        <function-ref name="getNode" scoped="" ref="0x2b0a709ce020"/>
        <function-ref name="evicted" scoped="" ref="0x2b0a709ce1a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b0a709ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a709cf238" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a709cf238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a709cf588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b0a7198c140" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b0a7198c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7198c490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b0a7198c618"/>
        <function-ref name="get" scoped="" ref="0x2b0a7198c7a0"/>
        <function-ref name="set" scoped="" ref="0x2b0a7198c928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a709f87a0" loc="85:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a709f87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a709f8af0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a709f8c78"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a709f8e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a70a2f0c0" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a2f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70a2f410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b0a70a2c988" loc="93:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b0a70a2c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0a70a2ccd8"/>
        <function-ref name="noAck" scoped="" ref="0x2b0a70a2ce60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b0a70a2b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a70a09bb0" loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a70a09bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a709fa020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a709fa1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a709fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a709f9888" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a709f9888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a709f9bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a709f9d60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a709f8020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a709f81a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a709f8330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a709f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70a2f698" loc="87:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a2f698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70a2f9e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70a2fb70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70a2fcf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70a2fe80"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70a2d030"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70a2d1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b0a70a2dd28" loc="92:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b0a70a2dd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0a70a2c0a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0a70a2c228"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0a70a2c3b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0a70a2c538"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0a70a2c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a709fa5b8" loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a709fa5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a709fa908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b0a70a2d400" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a70a2d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0a70a2d750"/>
        <function-ref name="noAck" scoped="" ref="0x2b0a70a2d8d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b0a70a2da60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b0a709fab50" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b0a709fab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b0a709f9020"/>
        <function-ref name="setRetries" scoped="" ref="0x2b0a709f91a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b0a709f9330"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b0a709f94b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b0a709f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a70a14020" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a70a14370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a70a144f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70a14680"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70a14808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a70a47020" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a70a47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70a47370"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70a474f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70a47680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a70a47908" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a70a47908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70a47c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a70a14a90" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a70a14a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70a14de0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70a4a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70a4a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a70a4a9c8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70a4a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70a4ad18"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70a49020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70a491a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70a49330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70a494b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70a49640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0a70a49888" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a70a49888"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b0a70a49bd8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0a70a49d60"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b0a70a48020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0a70a481a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b0a70a48490" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b0a70a48490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a70a487e0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a70a48968"/>
        <function-ref name="start" scoped="" ref="0x2b0a70a48af0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70a48c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a70a4a430" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a70a4a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70a4a780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70a46020" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70a46020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70a46370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70a464f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70a46680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70a46808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70a46990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70a46b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b0a719df5e8" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b0a719df5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b0a719df938"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b0a719dfac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b0a719dfc48"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b0a719dfdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a70a84708" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a70a84708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a70a84a58"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a70a84be0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70a84d68"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70abd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b0a70abcb70" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0a70abcb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0a70abb020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0a70abb1a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70abb330"/>
        <function-ref name="done" scoped="" ref="0x2b0a70abb4b8"/>
        <function-ref name="standby" scoped="" ref="0x2b0a70abb640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70abb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a70abd2a8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a70abd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70abd5f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70abd780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70abd908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b0a70aba3f0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70aba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70aba740"/>
        <function-ref name="header" scoped="" ref="0x2b0a70aba8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a70abdb90" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a70abdb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70abc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b0a70abba10" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0a70abba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70abbd60"/>
        <function-ref name="ready" scoped="" ref="0x2b0a70aba020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70aba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0a70abc268" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0a70abc268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0a70abc5b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70abc740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70abc8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a719d8870" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a719d8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a719d8bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a719d8d48"/>
        <function-ref name="start" scoped="" ref="0x2b0a719d7020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a719d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b0a719d7430" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a719d7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a719d7780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b0a719d4450" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0a719d4450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0a719d47a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0a719d4928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a719d4ab0"/>
        <function-ref name="done" scoped="" ref="0x2b0a719d4c38"/>
        <function-ref name="standby" scoped="" ref="0x2b0a719d4dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a719d3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a719d7a08" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a719d7a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a719d7d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a719d6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a719d61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b0a719d14f0" loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b0a719d14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a719d1840"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a719d19c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b0a719d2578" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a719d2578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a719d28c8"/>
        <function-ref name="header" scoped="" ref="0x2b0a719d2a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b0a719d1c90" loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b0a719d1c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a719d0020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a719d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a719d6430" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a719d6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a719d6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b0a719d2d18" loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b0a719d2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a719d10a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a719d1228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b0a719d3c98" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0a719d3c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a719d2020"/>
        <function-ref name="ready" scoped="" ref="0x2b0a719d21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a719d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b0a719d69c8" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b0a719d69c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b0a719d6d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a719d4020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a719d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b0a719d3268" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0a719d3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0a719d35b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b0a719d3740"/>
        <function-ref name="resume" scoped="" ref="0x2b0a719d38c8"/>
        <function-ref name="run" scoped="" ref="0x2b0a719d3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b0a70b04020" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0a70b04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b04370"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b044f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b04680"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b04808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a70b07220" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b07220"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b07570"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b076f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b07880"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b07a08"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b07b90"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b07d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70b05188" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70b05188"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b054d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b05660"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b057e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b05970"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b05af8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b05c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0a70b0b7d8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a70b0b7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70b0ac58"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70b09380"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70b0a578"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b09a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b0a70b06168" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b06168"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70b06ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0a70b0fa48" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a70b0fa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70b0d020"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70b0d700"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70b0e828"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b0dde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b0a71a08618" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b0a71a08618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a71a08968"/>
        <function-ref name="get" scoped="" ref="0x2b0a71a08af0"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a71a08c78"/>
        <function-ref name="set" scoped="" ref="0x2b0a71a08e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a71a097a0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a71a097a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a71a09af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a71a09c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71a09e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71a08020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a71a081a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a71a08330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a71a042a0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a71a042a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a71a045f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a71a04778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71a04900"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71a04a88"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a71a04c10"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a71a04d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b0a71a0dc48" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b0a71a0dc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a71a0a0f8"/>
        <function-ref name="clear" scoped="" ref="0x2b0a71a0a7d8"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a71a0b9f0"/>
        <function-ref name="set" scoped="" ref="0x2b0a71a09020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b0a71a061c8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a71a061c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71a06d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b0a71a05290" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b0a71a05290"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71a05e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b0a71a0f020" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b0a71a0f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a71a0e478"/>
        <function-ref name="clear" scoped="" ref="0x2b0a71a0eb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a71a0fd70"/>
        <function-ref name="set" scoped="" ref="0x2b0a71a0d278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70b14790" loc="20:/opt/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b14790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70b113a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a70affa70" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70affa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70affdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b1b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b1b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b1b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b1b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b1b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b0a70b1b928" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b0a70b1b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b1bc78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b1be00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b1a020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b1a1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b1a330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b1a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b0a70aff020" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b0a70aff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70aff390"/>
        <function-ref name="get" scoped="" ref="0x2b0a70aff518"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70aff6a0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70aff828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b0a70b4c7c8" loc="35:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b0a70b4c7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b0a70b4cb18"/>
        <function-ref name="request" scoped="" ref="0x2b0a70b4cca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0a70b49388" loc="39:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b49388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b48a40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b48530"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b48020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b46020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b0a70b34368" loc="54:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b0a70b34368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b346b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b34840"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b349c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b34b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b0a70b39bc8" loc="51:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a70b39bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70b36088"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70b36768"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70b38948"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b36e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b0a70b51148" loc="32:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0a70b51148"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0a70b51498"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0a70b51620"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70b517a8"/>
        <function-ref name="done" scoped="" ref="0x2b0a70b51930"/>
        <function-ref name="standby" scoped="" ref="0x2b0a70b51ab8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70b51c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b0a70b6fab8" loc="56:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70b6fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0a70b6fe08"/>
        <function-ref name="wait" scoped="" ref="0x2b0a70b6e020"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70b6e1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b0a70b6e330"/>
        <function-ref name="getNow" scoped="" ref="0x2b0a70b6e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0a70b4d060" loc="38:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70b4d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b4a640"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b4a130"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b4dbe0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b4ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a70b4e020" loc="36:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b4e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b4e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b4e680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b4e808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b4e990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b4eb18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70b3ab80" loc="50:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70b3ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b39020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b391a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b39330"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0a70b394b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0a70b39640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b0a70b50948" loc="34:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70b50948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70b50c98"/>
        <function-ref name="header" scoped="" ref="0x2b0a70b50e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a70b3eae0" loc="45:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a70b3eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70b3a150"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70b3b1f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a70b3bb08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70b3b680"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a70b3a5d8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70b3d860"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70b3dd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b0a70b46880" loc="40:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a70b46880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b43020"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b459a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b45490"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b43530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0a70b3f830" loc="44:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70b3f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70b3e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b0a70b50020" loc="33:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0a70b50020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70b50370"/>
        <function-ref name="ready" scoped="" ref="0x2b0a70b504f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70b50680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0a70b43d70" loc="41:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b43d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b41388"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b42e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b42928"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b41898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b0a70b6f020" loc="55:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b0a70b6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b6f370"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b6f4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b6f680"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b6f808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b0a70b35750" loc="53:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b0a70b35750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b35aa0"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b35c28"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b35db0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0a70b3f020" loc="42:../../chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70b3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a70b3f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b0a70b67798" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b0a70b67798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b0a70b67ae8"/>
        <function-ref name="request" scoped="" ref="0x2b0a70b67c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b0a70b85398" loc="74:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b0a70b85398"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b0a70b8b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b0a70b62388" loc="56:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70b62388"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b61a40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b61530"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b61020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b60020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b0a70b82368" loc="80:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b0a70b82368"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b826b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b82840"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b829c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b82b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b0a70b691b8" loc="47:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b0a70b691b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70b69508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b0a70b81d90" loc="83:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b0a70b81d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b0a70b7f4f8"/>
        <function-ref name="clear" scoped="" ref="0x2b0a70b7fbd8"/>
        <function-ref name="isValid" scoped="" ref="0x2b0a70b80de8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b7d300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b0a70b544c0" loc="70:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b0a70b544c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70b54810"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70b54998"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70b54b20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70b54ca8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b54e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70b8d020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b8d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70b8d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b0a70b7c5e0" loc="86:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b0a70b7c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b0a70b7c930"/>
        <function-ref name="wait" scoped="" ref="0x2b0a70b7cab8"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70b7cc40"/>
        <function-ref name="isFree" scoped="" ref="0x2b0a70b7cdc8"/>
        <function-ref name="getNow" scoped="" ref="0x2b0a70b7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b0a70b697b8" loc="49:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b0a70b697b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b0a70b69b08"/>
        <function-ref name="turnOn" scoped="" ref="0x2b0a70b69c90"/>
        <function-ref name="setChannel" scoped="" ref="0x2b0a70b69e18"/>
        <function-ref name="done" scoped="" ref="0x2b0a70b68020"/>
        <function-ref name="standby" scoped="" ref="0x2b0a70b681a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b0a70b68330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b0a70b8b700" loc="75:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70b8b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70b843a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b0a70b65060" loc="55:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b0a70b65060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b64640"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b64130"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b65be0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b64b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b0a70b66020" loc="53:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b0a70b66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b66370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a70b664f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b66680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a70b66808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b66990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b66b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b0a70b55348" loc="69:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b0a70b55348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70b55698"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70b55820"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70b559a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70b55b30"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b55cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70b55e40"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b54020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70b541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70b848b0" loc="77:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70b848b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70b84c00"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70b84d88"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70b83020"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0a70b831a8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0a70b83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b0a70b67020" loc="51:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b0a70b67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a70b67370"/>
        <function-ref name="header" scoped="" ref="0x2b0a70b674f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b0a70c27080" loc="861:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b0a70c27080"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a70c273d0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a70c27558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b0a70b60880" loc="57:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b0a70b60880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b5d020"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b5e9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b5e490"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b5d530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0a70b6b660" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70b6b660"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b0a6fe206f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70b6b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b0a70b57b18" loc="65:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b0a70b57b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a70b57e68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a70b56020"/>
        <function-ref name="request" scoped="" ref="0x2b0a70b561a8"/>
        <function-ref name="granted" scoped="" ref="0x2b0a70b56330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a70b564b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b0a70b59728" loc="64:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b0a70b59728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70b59b78"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70b59d00"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70b57020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70b571a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b57330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70b574b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b57640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70b577c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b0a70b5dd70" loc="58:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70b5dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b5a388"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b5be38"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70b5b928"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b5a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b0a70b685d8" loc="50:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b0a70b685d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70b68928"/>
        <function-ref name="ready" scoped="" ref="0x2b0a70b68ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70b68c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b0a70b88d20" loc="72:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b0a70b88d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b0a70b8c0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b0a70b8c228"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70b8c3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b0a70b8c538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b0a70b8e710" loc="67:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70b8e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b0a70b8ea60"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b0a70b8ebe8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b0a70b8ed70"/>
        <function-ref name="write" scoped="" ref="0x2b0a70b55020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b0a70b81020" loc="81:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b0a70b81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b81370"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b814f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b81680"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b81808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b0a70b836d0" loc="79:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b0a70b836d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70b83a20"/>
        <function-ref name="get" scoped="" ref="0x2b0a70b83ba8"/>
        <function-ref name="setValue" scoped="" ref="0x2b0a70b83d30"/>
        <function-ref name="set" scoped="" ref="0x2b0a70b82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0a70b59020" loc="59:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70b59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a70b59370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b0a70b7dac8" loc="85:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b0a70b7dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b0a70b7de18"/>
        <function-ref name="suspend" scoped="" ref="0x2b0a70b7c020"/>
        <function-ref name="resume" scoped="" ref="0x2b0a70b7c1a8"/>
        <function-ref name="run" scoped="" ref="0x2b0a70b7c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b0a70c64338" loc="46:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b0a70c64338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70c64688"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70c64810"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70c64998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70c64b20"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c64ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70c64e30"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c63020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70c631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b0a70c65140" loc="45:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b0a70c65140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70c65490"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70c65618"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70c657a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70c65928"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c65ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70c65c38"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c65dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70c64020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a70c622e0" loc="49:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a70c622e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70c60928"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70c619e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a70c60320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70c61e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a70c60db0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70c61088"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70c61560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b0a70c68990" loc="42:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b0a70c68990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a70c68ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a70c68e68"/>
        <function-ref name="request" scoped="" ref="0x2b0a70c66020"/>
        <function-ref name="granted" scoped="" ref="0x2b0a70c661a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a70c66330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b0a70c6b710" loc="41:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b0a70c6b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70c6ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70c6bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70c6bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70c68020"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c681a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70c68330"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c684b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70c68640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b0a70c634c0" loc="48:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b0a70c634c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b0a70c63810"/>
        <function-ref name="disable" scoped="" ref="0x2b0a70c63998"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70c63b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b0a70c63ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b0a70c665e8" loc="43:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c665e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b0a70c66938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b0a70c66ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b0a70c66c48"/>
        <function-ref name="write" scoped="" ref="0x2b0a70c66dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b0a70c5e438" loc="50:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b0a70c5e438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b0a6ffa6140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70c5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b0a70c4fc18" loc="46:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b0a70c4fc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70c4e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70c4e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70c4e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70c4e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c4e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70c4e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c4e950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70c4ead8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b0a70c51540" loc="45:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0a70c51540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0a70c4f6f8"/>
        <function-ref name="test" scoped="" ref="0x2b0a70c50db8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c570f8"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70c57a58"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70c50020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70c4f270"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c57580"/>
        <function-ref name="start" scoped="" ref="0x2b0a70c504a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70c50930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b0a70c4ee08" loc="47:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b0a70c4ee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70c4c1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70c4c330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70c4c4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70c4c640"/>
        <function-ref name="get" scoped="" ref="0x2b0a70c4c7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70c4c950"/>
        <function-ref name="set" scoped="" ref="0x2b0a70c4cad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70c4cc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b0a70c5a870" loc="40:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b0a70c5a870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70c5abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b0a70c5dcd8" loc="39:/opt/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b0a70c5dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b0a70c5a0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b0a70c5a228"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70c5a3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b0a70c5a538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b0a70c731d8" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b0a70c731d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70c73528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70c736b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b0a70c7c388" loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b0a70c7c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b0a70c7c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70c5bcd0" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70c5bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70c7f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b0a70c7c9d0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c7c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b0a70c7cd20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b0a70c7e020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b0a70c7e1a8"/>
        <function-ref name="write" scoped="" ref="0x2b0a70c7e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0a70c73e80" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a70c73e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a70c7d1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a70c7d380"/>
        <function-ref name="request" scoped="" ref="0x2b0a70c7d508"/>
        <function-ref name="granted" scoped="" ref="0x2b0a70c7d690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a70c7d818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x2b0a70c70de0" loc="95:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a70c70de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0a70c6f170"/>
        <function-ref name="configure" scoped="" ref="0x2b0a70c6f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b0a70cbc020" loc="294:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b0a70cbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a70cbc370"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a70cbc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b0a70c70120" loc="94:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b0a70c70120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70c70470"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70c705f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b0a70c71020" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b0a70c71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b0a70c71370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70c7ba18" loc="91:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70c7ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70c7bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b0a70c97c78" loc="98:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b0a70c97c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b0a70c6d020"/>
        <function-ref name="sleep" scoped="" ref="0x2b0a70c954b8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b0a70c6d330"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0a70c95640"/>
        <function-ref name="initMaster" scoped="" ref="0x2b0a70c6d640"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b0a70c6d7c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0a70c6d950"/>
        <function-ref name="read" scoped="" ref="0x2b0a70c6dad8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b0a70c6dc60"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0a70c6dde8"/>
        <function-ref name="setClock" scoped="" ref="0x2b0a70c6c020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0a70c6c1a8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b0a70c6c330"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b0a70c6c5b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b0a70c6c740"/>
        <function-ref name="write" scoped="" ref="0x2b0a70c6c8c8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b0a70c6ca50"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b0a70c6cbd8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b0a70c6cd60"/>
        <function-ref name="getClock" scoped="" ref="0x2b0a70c95020"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0a70c951a8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b0a70c6d1a8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b0a70c6d4b8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b0a70c95330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b0a70c71628" loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b0a70c71628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b0a70c71978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b0a70c71b00"/>
        <function-ref name="splitRead" scoped="" ref="0x2b0a70c71c88"/>
        <function-ref name="write" scoped="" ref="0x2b0a70c71e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b0a70c95910" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0a70c95910"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0a70c95c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b0a70ce1a20" loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b0a70ce1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b0a70ce1d70"/>
        <function-ref name="sleep" scoped="" ref="0x2b0a70cdc330"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b0a70cde1a8"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0a70cdc4b8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b0a70cde4b8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b0a70cde640"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0a70cde7c8"/>
        <function-ref name="read" scoped="" ref="0x2b0a70cde950"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b0a70cdead8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0a70cdec60"/>
        <function-ref name="setClock" scoped="" ref="0x2b0a70cdede8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0a70cdd020"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b0a70cdd1a8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b0a70cdd430"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b0a70cdd5b8"/>
        <function-ref name="write" scoped="" ref="0x2b0a70cdd740"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b0a70cdd8c8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b0a70cdda50"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b0a70cddbd8"/>
        <function-ref name="getClock" scoped="" ref="0x2b0a70cddd60"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0a70cdc020"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b0a70cde020"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b0a70cde330"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b0a70cdc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b0a70d14c68" loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b0a70d14c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70d13020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70d131a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70d13330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70d134b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d13640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70d137c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d13950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70d13ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b0a70cd4948" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b0a70cd4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70cd4c98"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70cd4e20"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70d15020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70d151a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d15330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70d154b8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d15640"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70d157c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b0a70cd56a8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b0a70cd56a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70cd59f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70cd5b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70cd5d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70cd4020"/>
        <function-ref name="get" scoped="" ref="0x2b0a70cd41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70cd4330"/>
        <function-ref name="set" scoped="" ref="0x2b0a70cd44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70cd4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b0a70d16e48" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b0a70d16e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a70cd51c0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70cd5348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b0a70d13e08" loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b0a70d13e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0a70d121a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b0a70cdb8d8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b0a70cdb8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b0a70cdbc28"/>
        <function-ref name="sleep" scoped="" ref="0x2b0a70cd61a8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b0a70cd8020"/>
        <function-ref name="dataReady" scoped="" ref="0x2b0a70cd6330"/>
        <function-ref name="initMaster" scoped="" ref="0x2b0a70cd8330"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b0a70cd84b8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b0a70cd8640"/>
        <function-ref name="read" scoped="" ref="0x2b0a70cd87c8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b0a70cd8950"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b0a70cd8ad8"/>
        <function-ref name="setClock" scoped="" ref="0x2b0a70cd8c60"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b0a70cd8de8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b0a70cd7020"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b0a70cd72a8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b0a70cd7430"/>
        <function-ref name="write" scoped="" ref="0x2b0a70cd75b8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b0a70cd7740"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b0a70cd78c8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b0a70cd7a50"/>
        <function-ref name="getClock" scoped="" ref="0x2b0a70cd7bd8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b0a70cd7d60"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b0a70cdbdb0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b0a70cd81a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b0a70cd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b0a70d15ae0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b0a70d15ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70d15e30"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70d14020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70d141a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70d14330"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d144b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70d14640"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d147c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70d14950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0a70d53af8" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a70d53af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0a70d53e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0a70d52020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0a70d52ae8" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a70d52ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0a70d52e58"/>
        <function-ref name="configure" scoped="" ref="0x2b0a70d50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0a70d54d88" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a70d54d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a70d53170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a70d532f8"/>
        <function-ref name="request" scoped="" ref="0x2b0a70d53480"/>
        <function-ref name="granted" scoped="" ref="0x2b0a70d53608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a70d53790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0a70d52268" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a70d52268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0a70d525b8"/>
        <function-ref name="userId" scoped="" ref="0x2b0a70d52740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a71a50140" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a71a50140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a71a50490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b0a71a50718" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b0a71a50718"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0a71a50a68"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0a71a50bf0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0a71a50d78"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a71a4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b0a71a4c388" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b0a71a4c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b0a71a4c6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b0a71a4c880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b0a71a4b3e8" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b0a71a4b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b0a71a4b758"/>
        <function-ref name="configure" scoped="" ref="0x2b0a71a4b8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b0a71a4bb68" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0a71a4bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b0a71ac3020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b0a71ac31a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b0a71ac3330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a71ac34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b0a71a4d590" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b0a71a4d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b0a71a4d900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b0a71a4da88"/>
        <function-ref name="request" scoped="" ref="0x2b0a71a4dc10"/>
        <function-ref name="granted" scoped="" ref="0x2b0a71a4dd98"/>
        <function-ref name="isOwner" scoped="" ref="0x2b0a71a4c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b0a71a4cac8" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b0a71a4cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b0a71a4ce18"/>
        <function-ref name="userId" scoped="" ref="0x2b0a71a4b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b0a71ac3780" loc="68:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b0a71ac3780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a71ac3ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a71ac3c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a70d3acf0" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70d3acf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b0a70d410a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a70d41228"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a70d413b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a70d41538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a70d416c0"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a70d41848"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a70d419d0"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a70d41b58"/>
        <function-ref name="setControlC" scoped="" ref="0x2b0a70d41ce0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a70d41e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b0a70d40370" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0a70d40370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0a70d7a580"/>
        <function-ref name="test" scoped="" ref="0x2b0a70d7bc20"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d39020"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70d39980"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d39e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d7a0f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d394a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d7b310"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d7b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0a70d791c8" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0a70d791c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a70d76930"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70d786d0"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d79d48"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d78b58"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d76db8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d781f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d76020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d764a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a70d481c8" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70d481c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a70d44270"/>
        <function-ref name="test" scoped="" ref="0x2b0a70d45930"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d48d48"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a70d446f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a70d44bd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d46b58"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70d466d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d45db8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d461f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d45020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d454a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a70d6b3d0" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a70d6b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b0a70d6b720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a70d6b8a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a70d6ba30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a70d6bbb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a70d6bd40"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a70d6a020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a70d6a1a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a70d6a330"/>
        <function-ref name="setControlC" scoped="" ref="0x2b0a70d6a4b8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a70d6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b0a70d654e0" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b0a70d654e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a70d63c30"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70d649e8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d64088"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d64e70"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d610f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d64510"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d63320"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d637a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b0a70d6ab18" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0a70d6ab18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0a70d67db8"/>
        <function-ref name="test" scoped="" ref="0x2b0a70d674a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d69728"/>
        <function-ref name="captured" scoped="" ref="0x2b0a70d680c0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d68598"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d67930"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d69bb0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d68a20"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b0a70d61770" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b0a70d61770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a70d5e020"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70d60d08"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d603a8"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d5f1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d5e4a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d60830"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d5f680"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d5fb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b0a70d5eb20" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b0a70d5eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a70d9f310"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70d5b0c0"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d5c728"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d5b548"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d9f798"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d5cbb0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d5b9d0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d5be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a70d70298" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70d70298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a70d6d4a8"/>
        <function-ref name="test" scoped="" ref="0x2b0a70d6ea40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70d70e18"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a70d6d930"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a70d6de08"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70d6fc70"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70d6f7e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70d6d020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70d6f310"/>
        <function-ref name="start" scoped="" ref="0x2b0a70d6e130"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70d6e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a70e3cb68" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a70e3cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70e38238"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70e3a2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a70e3abc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70e3a738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a70e386c0"/>
        <function-ref name="start" scoped="" ref="0x2b0a70e3b8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70e3bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70df3190" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70df3190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70df34e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a70df38b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70df38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a70e2a998"/>
        <function-ref name="test" scoped="" ref="0x2b0a70e2a088"/>
        <function-ref name="get" scoped="" ref="0x2b0a70de6490"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a70e2ae20"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a70e29350"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70e2c2b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70de6df0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70e2a510"/>
        <function-ref name="set" scoped="" ref="0x2b0a70de6918"/>
        <function-ref name="start" scoped="" ref="0x2b0a70e2c738"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70e2cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b0a71a9b9d8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b0a71a9b9d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b0a6fe20020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b0a6fe20020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a71a97088"/>
        <function-ref name="fired" scoped="" ref="0x2b0a71a980f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b0a71a98a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a71a98580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b0a71a97510"/>
        <function-ref name="start" scoped="" ref="0x2b0a71a9a768"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71a9ac40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b0a71a92a80" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b0a71a92a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a71a8e270"/>
        <function-ref name="fired" scoped="" ref="0x2b0a71a90020"/>
        <function-ref name="get" scoped="" ref="0x2b0a71a91658"/>
        <function-ref name="reset" scoped="" ref="0x2b0a71a904a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a71a8e6f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a71a91ae0"/>
        <function-ref name="start" scoped="" ref="0x2b0a71a90930"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71a90db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b0a71a97a30" loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b0a71a97a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a71a93b80"/>
        <function-ref name="test" scoped="" ref="0x2b0a71a93270"/>
        <function-ref name="get" scoped="" ref="0x2b0a71a965d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a71a92088"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a71a92560"/>
        <function-ref name="reset" scoped="" ref="0x2b0a71a954a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a71a95020"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a71a936f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a71a96a60"/>
        <function-ref name="start" scoped="" ref="0x2b0a71a95930"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71a95db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70e34400" loc="39:/opt/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e34400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a70e30108" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70e30108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e30e58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70e2f798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70e2f310"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e2fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a70e74e08" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70e74e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TOne" ref="0x2b0a6fef29f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e62be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70e61548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70e610c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e619d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a70e60020" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70e60020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a70e5c0f8"/>
        <function-ref name="test" scoped="" ref="0x2b0a70e5d7a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70e60ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a70e5c580"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a70e5ca58"/>
        <function-ref name="reset" scoped="" ref="0x2b0a70e5f9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e5f560"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a70e5dc30"/>
        <function-ref name="set" scoped="" ref="0x2b0a70e5f088"/>
        <function-ref name="start" scoped="" ref="0x2b0a70e5fe70"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70e5d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b0a70e85450" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b0a70e85450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e831d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70e83ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70e83658"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e82020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a70e87270" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70e87270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e86020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70e86930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70e864a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e86db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70e81c38" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e81c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e80820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0a70e80e48" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70e80e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70e7ebe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70e7d548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70e7d0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e7d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b0a70e753c0" loc="36:/opt/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b0a70e753c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b0a70ebd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70e76ba8" loc="43:../../../LocalTimeSyncedMicro/lib/LocalTimeSyncedMicroC.nc">
      <component-ref qname="LocalTimeSyncedMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70e76ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70eb8760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b0a70eb1450" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeSyncedMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b0a70eb1450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70eb01d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70eb0ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70eb0658"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70eaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a70eb41a0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeSyncedMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70eb41a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70eb3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70eb3930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70eb34a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70eb3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b0a70eac460" loc="43:../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc">
      <component-ref qname="LocalTimeSyncedMicroC.CounterToLocalMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a70eac460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70eab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0a70eab648" loc="44:../../../LocalTimeSyncedMicro/chips/atm1281/timer/CounterToLocalMicroC.nc">
      <component-ref qname="LocalTimeSyncedMicroC.CounterToLocalMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a70eab648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a70ea03f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a70ea0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a70ea0878"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a70e9f1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b0a70ed6318" loc="43:../../chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70ed6318"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70ed6668"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70ed67f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70ed6978"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0a70ed6b00"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0a70ed6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0a70ed9bc0" loc="42:../../chips/rf230/RF230SlimRadioC.nc">
      <component-ref qname="RF230SlimRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ed9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a70ed6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x2b0a70ed1020" loc="46:../../chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b0a70ed1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70ed0608"/>
        <function-ref name="get" scoped="" ref="0x2b0a70ed00f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70ed1ba0"/>
        <function-ref name="set" scoped="" ref="0x2b0a70ed0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b0a70ed2020" loc="43:../../chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b0a70ed2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70ed2370"/>
        <function-ref name="headerLength" scoped="" ref="0x2b0a70ed24f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b0a70ed2680"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b0a70ed2808"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b0a70ed2990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x2b0a70ece390" loc="47:../../chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b0a70ece390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a70ecda40"/>
        <function-ref name="get" scoped="" ref="0x2b0a70ecd530"/>
        <function-ref name="isSet" scoped="" ref="0x2b0a70ecd020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b0a70ed58a0" loc="42:../../chips/rf230/RF230SlimRadioP.nc">
      <component-ref qname="RF230SlimRadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ed58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a70ed5bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b0a70f263b8" loc="46:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b0a70f263b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b0a70f26708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSendData" ref="0x2b0a70f27560" loc="45:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSendData" scoped="" ref="0x2b0a70f27560"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70f278b0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70f27a38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70f27bc0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70f27d48"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70f26020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendData" ref="0x2b0a70f2a7c8" loc="42:../../lib/net/orinoco/OrinocoForwardLayerC.nc">
      <component-ref qname="OrinocoForwardLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendData" scoped="" ref="0x2b0a70f2a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70f2ab18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70f2aca0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70f2ae28"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70f27020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70f271a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMSend" ref="0x2b0a70f22020" loc="45:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMSend" scoped="" ref="0x2b0a70f22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70f22370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70f224f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70f22680"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70f22808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70f22990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a70f232d0" loc="42:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a70f232d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a70f23620"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a70f237a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a70f23930"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a70f23ab8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a70f23c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b0a70f212a8" loc="47:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0a70f212a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0a70f215f8"/>
        <function-ref name="rand32" scoped="" ref="0x2b0a70f21780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="doneTask" ref="0x2b0a70f160c0" loc="70:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="doneTask" scoped="" ref="0x2b0a70f160c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a70f16410"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a70f16598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OrinocoBackoffConfig" ref="0x2b0a70f22ca8" loc="46:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoBackoffConfig" scoped="" ref="0x2b0a70f22ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getMaximumBackoff" scoped="" ref="0x2b0a70f21020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a70f21bc0" loc="48:../../lib/net/orinoco/OrinocoForwardLayerP.nc">
      <component-ref qname="OrinocoForwardLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70f21bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70f1ddd8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70f1f510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a70f1d238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70f1fdb0"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a70f1c6c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a70f1c278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70f1f960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a70f20740"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70f1d808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70f20be0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70f1f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b0a70f47080" loc="46:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0a70f47080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0a70f473d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b0a70f47558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b0a70f48020" loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b0a70f48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f48b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70f491f8" loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70f491f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f49548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b0a70f41020" loc="48:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b0a70f41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b0a70f41370"/>
        <function-ref name="rand32" scoped="" ref="0x2b0a70f414f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b0a70f43e48" loc="47:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b0a70f43e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f429e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70f435f0" loc="46:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70f435f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f43940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a70f4a6e0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoForwardLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70f4a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70f7ea18"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70f7f158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a70f7fe48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70f7f9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a70f7c2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a70f7ee68"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70f7f5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a70f44370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70f7e448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70f44810"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70f44cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a70f78498" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OrinocoRadioC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a70f78498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a70f746c8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a70f77db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a70f76ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a70f76688"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a70f73020"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a70f74b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a70f76238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a70f77020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a70f740f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a70f774c0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a70f77960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b0a70f72740" loc="44:../../lib/net/orinoco/OrinocoConfigC.nc">
      <component-ref qname="OrinocoConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f72740"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a70f72a90"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a70f72c18"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a70f72da0"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a70f6f020"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a70f6f1a8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a70f6f330"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a70f6f4b8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a70f6f640"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a70f6f7c8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a70f6f950"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a70f6fad8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a70f6fc60"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a70f6fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70f6ead8" loc="44:../../lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70f6ead8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f6ee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoConfig" ref="0x2b0a70f6b148" loc="45:../../lib/net/orinoco/OrinocoConfigP.nc">
      <component-ref qname="OrinocoConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoConfig" scoped="" ref="0x2b0a70f6b148"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setWakeUpInterval" scoped="" ref="0x2b0a70f6b498"/>
        <function-ref name="setMaxDwellTime" scoped="" ref="0x2b0a70f6b620"/>
        <function-ref name="setMinQueueSize" scoped="" ref="0x2b0a70f6b7a8"/>
        <function-ref name="getWakeUpDeviation" scoped="" ref="0x2b0a70f6b930"/>
        <function-ref name="setMinDwellTime" scoped="" ref="0x2b0a70f6bab8"/>
        <function-ref name="getMaxDwellTime" scoped="" ref="0x2b0a70f6bc40"/>
        <function-ref name="setWakeUpDeviation" scoped="" ref="0x2b0a70f6bdc8"/>
        <function-ref name="getAbsWakeUpDeviation" scoped="" ref="0x2b0a70f6a020"/>
        <function-ref name="getMinQueueSize" scoped="" ref="0x2b0a70f6a1a8"/>
        <function-ref name="getNumWaitingIntervals" scoped="" ref="0x2b0a70f6a330"/>
        <function-ref name="getMinDwellTime" scoped="" ref="0x2b0a70f6a4b8"/>
        <function-ref name="getWakeUpInterval" scoped="" ref="0x2b0a70f6a640"/>
        <function-ref name="setNumWaitingIntervals" scoped="" ref="0x2b0a70f6a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b0a70f97230" loc="46:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a70f97230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a70f97580"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a70f97708"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a70f97890"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a70f97a18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a70f97ba0"/>
        <function-ref name="get" scoped="" ref="0x2b0a70f97d28"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a70f96020"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a70f96640"/>
        <function-ref name="set" scoped="" ref="0x2b0a70f961a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a70f96330"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a70f964b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b0a70f911b0" loc="50:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b0a70f911b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70f91500"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70f91688"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70f91810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70f91998"/>
        <function-ref name="get" scoped="" ref="0x2b0a70f91b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70f91ca8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70f91e30"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70f90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a70f934f0" loc="46:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70f934f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70f93840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b0a70f90338" loc="51:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b0a70f90338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70f90688"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70f90810"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70f90998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70f90b20"/>
        <function-ref name="get" scoped="" ref="0x2b0a70f90ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70f90e30"/>
        <function-ref name="set" scoped="" ref="0x2b0a70f8f020"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70f8f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b0a70f93ab8" loc="47:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a70f93ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a70f93e08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a70f92020"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a70f921a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a70f92330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a70f924b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70f92640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a70f927c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a70f92de8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70f92950"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a70f92ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a70f92c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b0a70f8f4c0" loc="52:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b0a70f8f4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70f8f810"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70f8f998"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70f8fb20"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70f8fca8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70f8fe30"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70f8e020"/>
        <function-ref name="set" scoped="" ref="0x2b0a70f8e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70f8e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b0a70f94b08" loc="44:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b0a70f94b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70f94e58"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70fc1020"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70fc11a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70fc1330"/>
        <function-ref name="get" scoped="" ref="0x2b0a70fc14b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70fc1640"/>
        <function-ref name="set" scoped="" ref="0x2b0a70fc17c8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70fc1950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b0a70fc1ca8" loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b0a70fc1ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70fc0020"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70fc01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70fc0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70fc04b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a70fc0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70fc07c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a70fc0950"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70fc0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b0a70fbe020" loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a70fbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a70fbe370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b0a70fc0e30" loc="46:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b0a70fc0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b0a70fbf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b0a70fbf330"/>
        <function-ref name="toggle" scoped="" ref="0x2b0a70fbf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b0a70fbf640"/>
        <function-ref name="get" scoped="" ref="0x2b0a70fbf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b0a70fbf950"/>
        <function-ref name="set" scoped="" ref="0x2b0a70fbfad8"/>
        <function-ref name="clr" scoped="" ref="0x2b0a70fbfc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b0a70fa9358" loc="45:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0a70fa9358"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0a70fa96a8"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0a70fa9830"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0a70fa99b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b0a70fac8d8" loc="42:../../lib/net/orinoco/OrinocoPathCostHopCountC.nc">
      <component-ref qname="OrinocoPathCostHopCountC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a70fac8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0a70facc28"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0a70facdb0"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0a70fa9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2b0a70ff5020" loc="45:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2b0a70ff5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2b0a70ff5370"/>
        <function-ref name="setRoot" scoped="" ref="0x2b0a70ff54f8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2b0a70ff5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OrinocoPathCost" ref="0x2b0a70ff8650" loc="42:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OrinocoPathCost" scoped="" ref="0x2b0a70ff8650"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoPathCost"/>
      </instance>
      <interface-functions>
        <function-ref name="getCost" scoped="" ref="0x2b0a70ff89a0"/>
        <function-ref name="reviseCost" scoped="" ref="0x2b0a70ff8b28"/>
        <function-ref name="inspectBeacon" scoped="" ref="0x2b0a70ff8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2b0a70ff5980" loc="46:../../lib/net/orinoco/OrinocoPathCostHopCountP.nc">
      <component-ref qname="OrinocoPathCostHopCountP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b0a70ff5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b0a70ff5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b0a70faa990" loc="43:/opt/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="OrinocoP.SendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b0a70faa990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6ffec198"/>
            <typename><typedef-ref name="mq_entry_t" ref="0x2b0a6ffec4f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b0a7101c278"/>
        <function-ref name="enqueue" scoped="" ref="0x2b0a7101a020"/>
        <function-ref name="element" scoped="" ref="0x2b0a7101a650"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0a70fe7dc8"/>
        <function-ref name="dequeue" scoped="" ref="0x2b0a7101c8d8"/>
        <function-ref name="empty" scoped="" ref="0x2b0a70fe7528"/>
        <function-ref name="size" scoped="" ref="0x2b0a70fe7978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b0a71017b58" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="OrinocoP.MsgPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b0a71017b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
            <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71042b18"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0a71042020"/>
        <function-ref name="empty" scoped="" ref="0x2b0a710436f0"/>
        <function-ref name="put" scoped="" ref="0x2b0a71042470"/>
        <function-ref name="size" scoped="" ref="0x2b0a71043b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2b0a71b33370" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2b0a71b33370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
            <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71b313e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b0a71b328c0"/>
        <function-ref name="empty" scoped="" ref="0x2b0a71b32020"/>
        <function-ref name="put" scoped="" ref="0x2b0a71b32d10"/>
        <function-ref name="size" scoped="" ref="0x2b0a71b32470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a71b35b40" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="OrinocoP.MsgPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a71b35b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a71b33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2b0a7103d4a0" loc="46:../../lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2b0a7103d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a6ffed350"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b0a6ffed808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2b0a7102d020"/>
        <function-ref name="flush" scoped="" ref="0x2b0a7102d960"/>
        <function-ref name="lookup" scoped="" ref="0x2b0a7102d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CacheCompare" ref="0x2b0a7102c020" loc="49:../../lib/net/orinoco/OrinocoCacheC.nc">
      <component-ref qname="OrinocoP.PacketHistory"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CacheCompare" scoped="" ref="0x2b0a7102c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CacheCompare"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a6ffed350"/>
            <typename><typedef-ref name="mc_entry_t" ref="0x2b0a6ffed808"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="equal" scoped="" ref="0x2b0a7102cb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b0a71027560" loc="46:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b0a71027560"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0a710278b0"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0a71027a38"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0a71027bc0"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0a71027d48"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0a71026020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b0a7102a820" loc="45:../../lib/net/orinoco/OrinocoTrafficStatisticsC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b0a7102a820"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a7102ab70"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a7102acf8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a7102ae80"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a71027030"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a710271b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Updates" ref="0x2b0a71023b38" loc="48:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Updates" scoped="" ref="0x2b0a71023b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
      </instance>
      <interface-functions>
        <function-ref name="updateRxBurst" scoped="" ref="0x2b0a71022020"/>
        <function-ref name="updateForwardDelay" scoped="" ref="0x2b0a710221a8"/>
        <function-ref name="updateTxBurst" scoped="" ref="0x2b0a71022330"/>
        <function-ref name="updatePktReceptionIntvl" scoped="" ref="0x2b0a710224b8"/>
        <function-ref name="updatePktCreationIntvl" scoped="" ref="0x2b0a71022640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b0a71021020" loc="52:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b0a71021020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71021ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PktRateJobConfig" ref="0x2b0a710716c8" loc="49:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJobConfig" scoped="" ref="0x2b0a710716c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a71071a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PktRateJob" ref="0x2b0a7106d380" loc="53:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PktRateJob" scoped="" ref="0x2b0a7106d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a7106d6d0"/>
        <function-ref name="done" scoped="" ref="0x2b0a7106d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stats" ref="0x2b0a71026dd0" loc="47:../../lib/net/orinoco/OrinocoTrafficStatisticsP.nc">
      <component-ref qname="OrinocoTrafficStatisticsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stats" scoped="" ref="0x2b0a71026dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a71023170"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a710232f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a71023480"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a71023608"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a71023790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b0a71098c80" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a71098c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a710a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b0a710984c0" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b0a710984c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a71098810"/>
        <function-ref name="done" scoped="" ref="0x2b0a71098998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b0a7108a2b8" loc="42:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b0a7108a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b0a7108a608"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b0a7108a790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b0a7108e020" loc="43:../../../EAJobs/lib/EASchedulerC.nc">
      <component-ref qname="EASchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b0a7108e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="jobid_t" ref="0x2b0a71097190"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a7108e370"/>
        <function-ref name="done" scoped="" ref="0x2b0a7108e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DispatchTimer" ref="0x2b0a71087bb0" loc="50:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DispatchTimer" scoped="" ref="0x2b0a71087bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a71083dd8"/>
        <function-ref name="fired" scoped="" ref="0x2b0a71085510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a71083238"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a71085db0"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a710826c8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a71082278"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a71085960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a71086728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a71083808"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a71086bc8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a710850c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAScheduler" ref="0x2b0a71088420" loc="46:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b0a71088420"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b0a71088770"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b0a710888f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="dispatch" ref="0x2b0a7107abe0" loc="104:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="dispatch" scoped="" ref="0x2b0a7107abe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a71079020"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a710791a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EAJob" ref="0x2b0a710871c8" loc="47:../../../EAJobs/lib/EASchedulerP.nc">
      <component-ref qname="EASchedulerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b0a710871c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a71087518"/>
        <function-ref name="done" scoped="" ref="0x2b0a710876a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a710b48d8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="EASchedulerC.DispatchTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a710b48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6feaf020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b0a6feaf378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b0a710b0bc0"/>
        <function-ref name="fired" scoped="" ref="0x2b0a710b1238"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b0a710b0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b0a710b1ad8"/>
        <function-ref name="getdt" scoped="" ref="0x2b0a710af4d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b0a710af088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b0a710b1688"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b0a710b3458"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b0a710b05f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b0a710b38f8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a710b3d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b0a710aa530" loc="42:../../../EAJobs/lib/EAEnergyManagerC.nc">
      <component-ref qname="EAEnergyManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710aa530"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a710aa880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b0a710a9788" loc="44:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b0a710a9788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b0a710a9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJobConfig" ref="0x2b0a710a62e8" loc="45:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJobConfig" scoped="" ref="0x2b0a710a62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a710a6638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAScheduler" ref="0x2b0a710a68f0" loc="46:../../../EAJobs/lib/EAEnergyManagerP.nc">
      <component-ref qname="EAEnergyManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAScheduler" scoped="" ref="0x2b0a710a68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAScheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="jobStarted" scoped="" ref="0x2b0a710a6c40"/>
        <function-ref name="scheduleJob" scoped="" ref="0x2b0a710a6dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b0a710ec9c0" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a710ec9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a710ecd10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b0a710eb020" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoTrafficStatisticsC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a710eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a710eb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a710d6310" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a710d6310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a710d6660"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a710d67e8"/>
        <function-ref name="start" scoped="" ref="0x2b0a710d6970"/>
        <function-ref name="stop" scoped="" ref="0x2b0a710d6af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a710d52b0" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a710d52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a710d5600"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a710d5788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a710d5910"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a710d5a98"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a710d5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a710d49a0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a710d49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a710d4cf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a710d4e78"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a710d2030"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a710d21b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a710d2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a710d43c8" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a710d43c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a710d4718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a710d0608" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a710d0608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a710d0958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a710d0ae0"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a710d0c68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a710d0df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a710cf020"/>
        <function-ref name="get" scoped="" ref="0x2b0a710cf1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a710cf330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a710cf950"/>
        <function-ref name="set" scoped="" ref="0x2b0a710cf4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a710cf640"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a710cf7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b0a710d1c78" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a710d1c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0a710d0020"/>
        <function-ref name="noAck" scoped="" ref="0x2b0a710d01a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b0a710d0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a710d25e0" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a710d25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a710d2930"/>
        <function-ref name="source" scoped="" ref="0x2b0a710d2ab8"/>
        <function-ref name="address" scoped="" ref="0x2b0a710d2c40"/>
        <function-ref name="destination" scoped="" ref="0x2b0a710d2dc8"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a710d1020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a710d11a8"/>
        <function-ref name="type" scoped="" ref="0x2b0a710d1330"/>
        <function-ref name="setType" scoped="" ref="0x2b0a710d14b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a710d1640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a710d17c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a710d1950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b0a71121bb0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b0a71121bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a71120020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a711201a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71120330"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a711204b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a71120640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b0a711208c8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b0a711208c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a71120c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b0a710ccb60" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b0a710ccb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a71124020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a711241a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71124330"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a711244b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a71124640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b0a71122578" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a71122578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a711228c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a71122a50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a71122bd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71122d60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71121020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a711249a8" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a711249a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a71124d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b0a71121268" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b0a71121268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b0a711215b8"/>
        <function-ref name="noAck" scoped="" ref="0x2b0a71121740"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b0a711218c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b0a71123020" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b0a71123020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b0a71123370"/>
        <function-ref name="source" scoped="" ref="0x2b0a711234f8"/>
        <function-ref name="address" scoped="" ref="0x2b0a71123680"/>
        <function-ref name="destination" scoped="" ref="0x2b0a71123808"/>
        <function-ref name="setSource" scoped="" ref="0x2b0a71123990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b0a71123b18"/>
        <function-ref name="type" scoped="" ref="0x2b0a71123ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b0a71123e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b0a71122020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b0a711221a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b0a71122330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a7111b2e8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a7111b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a7111b638"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a7111b7c0"/>
        <function-ref name="start" scoped="" ref="0x2b0a7111b948"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7111bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a7111ace8" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a7111ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a7116c0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7116c228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7116c3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a7116c538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a7116c6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a7111eb98" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a7111eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a7111b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7111a270" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7111a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7111a5c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a7116b5a8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a7116b5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a7116b8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a7116ba80"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a7116bc08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a7116bd90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a71166020"/>
        <function-ref name="get" scoped="" ref="0x2b0a711661a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a71166330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a71166950"/>
        <function-ref name="set" scoped="" ref="0x2b0a711664b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a71166640"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a711667c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b0a71167ba8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b0a71167ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b0a7116b020"/>
        <function-ref name="offset" scoped="" ref="0x2b0a7116b1a8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b0a7116b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b0a71147b90" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b0a71147b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b0a71146020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b0a711461a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a71146330"/>
        <function-ref name="stop" scoped="" ref="0x2b0a711464b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b0a711e5830" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b0a711e5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a711e5b80"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a711e5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b0a7118b398" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b0a7118b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a7118b6e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7118b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b0a71170d70" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b0a71170d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7116e0f0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7116e278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a71147578" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a71147578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a711478c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b0a71188e40" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b0a71188e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b0a7118a1c0"/>
        <function-ref name="flush" scoped="" ref="0x2b0a7118a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b0a711e8020" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b0a711e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a711e8370"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a711e84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b0a7118cb38" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0a7118cb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b0a71195020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b0a711951a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b0a71195330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b0a711954b8"/>
        <function-ref name="putData" scoped="" ref="0x2b0a71195640"/>
        <function-ref name="putDone" scoped="" ref="0x2b0a711957c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b0a71195950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a71195bc8" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a71195bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a71191020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a711911a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a71191330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a711914b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a71191640"/>
        <function-ref name="get" scoped="" ref="0x2b0a711917c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a71191950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a7118b020"/>
        <function-ref name="set" scoped="" ref="0x2b0a71191ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a71191c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a71191de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b0a711e2918" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b0a711e2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a711e2c68"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a711e2df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b0a71196898" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b0a71196898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b0a71196be8"/>
        <function-ref name="nextByte" scoped="" ref="0x2b0a71196d70"/>
        <function-ref name="startSend" scoped="" ref="0x2b0a71145020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b0a711451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b0a71192b48" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0a71192b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b0a71144020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b0a711441a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b0a71144330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b0a7127e100" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b0a7127e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7127e450"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7127e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b0a71282020" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b0a71282020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a71282390"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a71282518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a712826a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b0a71282828"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a712829b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b0a7127e8a0" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b0a7127e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b0a7127ebf0"/>
        <function-ref name="runTask" scoped="" ref="0x2b0a7127ed78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a71283868" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a71283868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a71283bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b0a71282db8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b0a71282db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b0a6ff2b020"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b0a71281170"/>
        <function-ref name="offset" scoped="" ref="0x2b0a712812f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b0a71281480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a71280a50" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a71280a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a71280da0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a7127f020"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a7127f1a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a7127f330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a7127f4b8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7127f640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a7127f7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a7127fde8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7127fad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a7127f950"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a7127fc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b0a71280020" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b0a71280020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b0a71280370"/>
        <function-ref name="nextByte" scoped="" ref="0x2b0a712804f8"/>
        <function-ref name="startSend" scoped="" ref="0x2b0a71280680"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b0a71280808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b0a712816c8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b0a712816c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b0a71281a18"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b0a71281ba0"/>
        <function-ref name="endPacket" scoped="" ref="0x2b0a71281d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b0a712c4448" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0a712c4448"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a712c4798"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0a712c4920"/>
        <function-ref name="receive" scoped="" ref="0x2b0a712c4aa8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0a712c4c30"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0a712c4db8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0a71276020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a712761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b0a7127cb30" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b0a7127cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b0a7127ce80"/>
        <function-ref name="resetSend" scoped="" ref="0x2b0a71278030"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b0a712781b8"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b0a71278340"/>
        <function-ref name="putData" scoped="" ref="0x2b0a712784c8"/>
        <function-ref name="putDone" scoped="" ref="0x2b0a71278650"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b0a712787d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b0a71276420" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b0a71276420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b0a71276770"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b0a712768f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b0a71276a80"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b0a71276c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b0a71276d90"/>
        <function-ref name="get" scoped="" ref="0x2b0a71275020"/>
        <function-ref name="led1Off" scoped="" ref="0x2b0a712751a8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b0a712757c8"/>
        <function-ref name="set" scoped="" ref="0x2b0a71275330"/>
        <function-ref name="led0On" scoped="" ref="0x2b0a712754b8"/>
        <function-ref name="led2On" scoped="" ref="0x2b0a71275640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0a712a5290" loc="42:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0a712a5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a712a55e0"/>
        <function-ref name="receive" scoped="" ref="0x2b0a712a5768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0a712ab0c0" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0a712ab0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a712ab410"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0a712ab598"/>
        <function-ref name="receive" scoped="" ref="0x2b0a712ab720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0a712ab8a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0a712aba30"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0a712abbb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a712abd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0a7127b8b0" loc="40:/opt/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0a7127b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a7127bc00"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7127bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0a712a8af0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0a712a8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a712a8e40"/>
        <function-ref name="receive" scoped="" ref="0x2b0a712a3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0a712a3310" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0a712a3310"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a712a3660"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0a712a37e8"/>
        <function-ref name="receive" scoped="" ref="0x2b0a712a3970"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0a712a3af8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0a712a3c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0a712a3e08"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a712a2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0a712a2598" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a712a2598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a712a13a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a712a1cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a712a1830"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a712a0190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0a712a8338" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0a712a8338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a712a8688"/>
        <function-ref name="stop" scoped="" ref="0x2b0a712a8810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b0a712f8e58" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b0a712f8e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a713111e8"/>
        <function-ref name="receive" scoped="" ref="0x2b0a71311370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b0a713105f8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b0a713105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a71310948"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71310ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a712f8120" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a712f8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a712f8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b0a713115f8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b0a713115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b0a71311948"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b0a71311ad0"/>
        <function-ref name="receive" scoped="" ref="0x2b0a71311c58"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b0a71311de0"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b0a71310020"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b0a713101a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b0a71310330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b0a7130ec60" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a7130ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a7130d9f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a7130c330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a7130de78"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7130c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b0a7130f5c0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b0a7130f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0a7130f910"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0a7130fa98"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0a7130fc20"/>
        <function-ref name="txDone" scoped="" ref="0x2b0a7130fda8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0a7130e020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0a7130e1a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0a7130e330"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0a7130e4b8"/>
        <function-ref name="tx" scoped="" ref="0x2b0a7130e640"/>
        <function-ref name="rx" scoped="" ref="0x2b0a7130e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b0a712f86f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b0a712f86f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a712f8a48"/>
        <function-ref name="stop" scoped="" ref="0x2b0a712f8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b0a71310d98" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b0a71310d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a7130f170"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7130f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b0a7134b860" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b0a7134b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0a7134bbb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0a7134bd38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0a7134a020"/>
        <function-ref name="txDone" scoped="" ref="0x2b0a7134a1a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0a7134a330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0a7134a4b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0a7134a640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0a7134a7c8"/>
        <function-ref name="tx" scoped="" ref="0x2b0a7134a950"/>
        <function-ref name="rx" scoped="" ref="0x2b0a7134aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b0a71348020" loc="53:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b0a71348020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0a71348370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0a713484f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0a71348680"/>
        <function-ref name="txDone" scoped="" ref="0x2b0a71348808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0a71348990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0a71348b18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0a71348ca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0a71348e28"/>
        <function-ref name="tx" scoped="" ref="0x2b0a71347020"/>
        <function-ref name="rx" scoped="" ref="0x2b0a713471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b0a7134b020" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0a7134b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a7134b370"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7134b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b0a7134ae58" loc="51:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0a7134ae58"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a713491e8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71349370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b0a713496f0" loc="52:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0a713496f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a71349a40"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71349bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b0a7134d700" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0a7134d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a7134da50"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7134dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b0a71344020" loc="114:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b0a71344020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a71344370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b0a713438a0" loc="117:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b0a713438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0a71343bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0a71343d78"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0a71342020"/>
        <function-ref name="txDone" scoped="" ref="0x2b0a713421a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0a71342330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0a713424b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0a71342640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0a713427c8"/>
        <function-ref name="tx" scoped="" ref="0x2b0a71342950"/>
        <function-ref name="rx" scoped="" ref="0x2b0a71342ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b0a71342e30" loc="119:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b0a71342e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a713411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b0a713406d8" loc="122:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b0a713406d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b0a71340a28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b0a71340bb0"/>
        <function-ref name="rxDone" scoped="" ref="0x2b0a71340d38"/>
        <function-ref name="txDone" scoped="" ref="0x2b0a7133f020"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b0a7133f1a8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b0a7133f330"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b0a7133f4b8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b0a7133f640"/>
        <function-ref name="tx" scoped="" ref="0x2b0a7133f7c8"/>
        <function-ref name="rx" scoped="" ref="0x2b0a7133f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b0a71343020" loc="116:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b0a71343020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a71343370"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713434f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b0a71341568" loc="120:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b0a71341568"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a713418b8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71341a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b0a71341e00" loc="121:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b0a71341e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a713401a8"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71340330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b0a7133fc70" loc="124:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b0a7133fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b0a7133e020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b0a7133e1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b0a7133e330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b0a7133e4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b0a7133e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b0a7133e950" loc="125:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b0a7133e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b0a7133eca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b0a71344730" loc="115:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b0a71344730"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b0a71344a80"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71344c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a71399188" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a71399188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71398020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a71398930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a713984a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a71398db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a71393020" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a71393020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0a6fef2d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71393d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a713926b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a71392230"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a71392b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a7138ac90" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a7138ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b0a71388020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a713881a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a71388330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a713884b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a71388640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a713887c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a71388950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a71388ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b0a71388c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a71388de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b0a71387350" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0a71387350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0a71384580"/>
        <function-ref name="test" scoped="" ref="0x2b0a71385c20"/>
        <function-ref name="get" scoped="" ref="0x2b0a71386020"/>
        <function-ref name="captured" scoped="" ref="0x2b0a71386980"/>
        <function-ref name="reset" scoped="" ref="0x2b0a71386e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713840f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a713864a8"/>
        <function-ref name="start" scoped="" ref="0x2b0a71385310"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71385798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b0a713e01c8" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b0a713e01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a713de930"/>
        <function-ref name="fired" scoped="" ref="0x2b0a713df6d0"/>
        <function-ref name="get" scoped="" ref="0x2b0a713e0d48"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713dfb58"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713dedb8"/>
        <function-ref name="set" scoped="" ref="0x2b0a713df1f8"/>
        <function-ref name="start" scoped="" ref="0x2b0a713de020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713de4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a71391c30" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a71391c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a7138bdb8"/>
        <function-ref name="test" scoped="" ref="0x2b0a7138b4a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a7138e820"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a7138a270"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a7138a748"/>
        <function-ref name="reset" scoped="" ref="0x2b0a7138c658"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7138c1d0"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a7138b930"/>
        <function-ref name="set" scoped="" ref="0x2b0a7138eca8"/>
        <function-ref name="start" scoped="" ref="0x2b0a7138cae0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7138b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b0a713d43d0" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b0a713d43d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b0a713d4720"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b0a713d48a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b0a713d4a30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b0a713d4bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b0a713d4d40"/>
        <function-ref name="setControlB" scoped="" ref="0x2b0a713d3020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b0a713d31a8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b0a713d3330"/>
        <function-ref name="setControlC" scoped="" ref="0x2b0a713d34b8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b0a713d3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b0a713ce4e0" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b0a713ce4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a713cbc30"/>
        <function-ref name="fired" scoped="" ref="0x2b0a713cd9e8"/>
        <function-ref name="get" scoped="" ref="0x2b0a713cd088"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713cde70"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713ca0f8"/>
        <function-ref name="set" scoped="" ref="0x2b0a713cd510"/>
        <function-ref name="start" scoped="" ref="0x2b0a713cb320"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713cb7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b0a713d3b18" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b0a713d3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b0a713cfdb8"/>
        <function-ref name="test" scoped="" ref="0x2b0a713cf4a8"/>
        <function-ref name="get" scoped="" ref="0x2b0a713d2728"/>
        <function-ref name="captured" scoped="" ref="0x2b0a713d00c0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713d0598"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713cf930"/>
        <function-ref name="set" scoped="" ref="0x2b0a713d2bb0"/>
        <function-ref name="start" scoped="" ref="0x2b0a713d0a20"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713cf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b0a713ca770" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b0a713ca770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a713c6020"/>
        <function-ref name="fired" scoped="" ref="0x2b0a713c9d08"/>
        <function-ref name="get" scoped="" ref="0x2b0a713c93a8"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713c71f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713c64a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a713c9830"/>
        <function-ref name="start" scoped="" ref="0x2b0a713c7680"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713c7b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b0a713c6b20" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b0a713c6b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b0a713c2310"/>
        <function-ref name="fired" scoped="" ref="0x2b0a713c40c0"/>
        <function-ref name="get" scoped="" ref="0x2b0a713c5728"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713c4548"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713c2798"/>
        <function-ref name="set" scoped="" ref="0x2b0a713c5bb0"/>
        <function-ref name="start" scoped="" ref="0x2b0a713c49d0"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713c4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b0a713d9298" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a713d9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a713d54a8"/>
        <function-ref name="test" scoped="" ref="0x2b0a713d6a40"/>
        <function-ref name="get" scoped="" ref="0x2b0a713d9e18"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a713d5930"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a713d5e08"/>
        <function-ref name="reset" scoped="" ref="0x2b0a713d8c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a713d87e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a713d5020"/>
        <function-ref name="set" scoped="" ref="0x2b0a713d8310"/>
        <function-ref name="start" scoped="" ref="0x2b0a713d6130"/>
        <function-ref name="stop" scoped="" ref="0x2b0a713d65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b0a71469020" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b0a71469020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b0a6fe20388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b0a71469370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a71469740" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a71469740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a71465930"/>
        <function-ref name="test" scoped="" ref="0x2b0a71465020"/>
        <function-ref name="get" scoped="" ref="0x2b0a714683a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a71465db8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a714642f0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a714671f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a71468d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a714654a8"/>
        <function-ref name="set" scoped="" ref="0x2b0a71468830"/>
        <function-ref name="start" scoped="" ref="0x2b0a71467680"/>
        <function-ref name="stop" scoped="" ref="0x2b0a71467b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a71461020" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a71461020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0a6fef2d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71461d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a714606b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a71460230"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a71460b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b0a7145f0e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b0a7145f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b0a7145b270"/>
        <function-ref name="test" scoped="" ref="0x2b0a7145c930"/>
        <function-ref name="get" scoped="" ref="0x2b0a7145fc60"/>
        <function-ref name="setScale" scoped="" ref="0x2b0a7145b6f8"/>
        <function-ref name="getScale" scoped="" ref="0x2b0a7145bbd0"/>
        <function-ref name="reset" scoped="" ref="0x2b0a7145da90"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a7145d608"/>
        <function-ref name="isOn" scoped="" ref="0x2b0a7145cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b0a7145d130"/>
        <function-ref name="start" scoped="" ref="0x2b0a7145c020"/>
        <function-ref name="stop" scoped="" ref="0x2b0a7145c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b0a71454e20" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b0a71454e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TThree" ref="0x2b0a6fef2d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a71453be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a71452548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a714520c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a714529d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b0a71457c50" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b0a71457c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b0a6fead430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b0a6fead788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a714569f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b0a71454330"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b0a71456e78"/>
        <function-ref name="overflow" scoped="" ref="0x2b0a714547b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b0a7144a6e0" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b0a7144a6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b0a7144aa30"/>
        <function-ref name="offset" scoped="" ref="0x2b0a7144abb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b0a7144ad40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b0a7149bdf0" loc="45:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a7149bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a71497170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a714972f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a71497480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71497608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71497790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a7149b798" loc="42:../../../Reporting/OrinocoStatsReportingJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a7149b798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7149bae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b0a714928e0" loc="47:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a714928e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a71492c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a71492db8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a71491020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a714911a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71491330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficStats" ref="0x2b0a71490020" loc="49:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficStats" scoped="" ref="0x2b0a71490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
      </instance>
      <interface-functions>
        <function-ref name="getRxBurst" scoped="" ref="0x2b0a71490370"/>
        <function-ref name="getTxBurst" scoped="" ref="0x2b0a714904f8"/>
        <function-ref name="getPktCreationIntvl" scoped="" ref="0x2b0a71490680"/>
        <function-ref name="getPktReceptionIntvl" scoped="" ref="0x2b0a71490808"/>
        <function-ref name="getForwardDelay" scoped="" ref="0x2b0a71490990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a71492288" loc="44:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a71492288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a714925d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b0a714915b0" loc="48:../../../Reporting/OrinocoStatsReportingJobP.nc">
      <component-ref qname="OrinocoStatsReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b0a714915b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a71491900"/>
        <function-ref name="done" scoped="" ref="0x2b0a71491a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b0a71494308" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a71494308"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a71494658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b0a714959b8" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b0a714959b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a71495d08"/>
        <function-ref name="done" scoped="" ref="0x2b0a71494020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b0a71486dd8" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a71486dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a71485170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b0a71485458" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a71485458"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a714857a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b0a71483ca8" loc="42:../../../Reporting/OrinocoStatsReportingJobConfigC.nc">
      <component-ref qname="OrinocoStatsReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a71483ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a71480020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b0a7147c328" loc="45:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a7147c328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a7147c678"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a7147c800"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a7147c988"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a7147cb10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a7147cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a71499c18" loc="42:../../../Reporting/OrinocoDebugReportingJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a71499c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a7147c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b0a71474678" loc="47:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b0a71474678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b0a714749c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b0a71474b50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b0a71474cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b0a71474e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b0a71473020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QueueStats" ref="0x2b0a71473d08" loc="49:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QueueStats" scoped="" ref="0x2b0a71473d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_queue_statistics_t" ref="0x2b0a7046dc28"/></typename>
              <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2b0a7046d820"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a714728b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b0a71474020" loc="44:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b0a71474020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b0a71474370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketStats" ref="0x2b0a714d2020" loc="50:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketStats" scoped="" ref="0x2b0a714d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="orinoco_packet_statistics_t" ref="0x2b0a7048a4e8"/></typename>
              <type-tag size="I:32" alignment="I:1"><struct-ref ref="0x2b0a7048bae8"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b0a714d2b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="EAJob" ref="0x2b0a714732a0" loc="48:../../../Reporting/OrinocoDebugReportingJobP.nc">
      <component-ref qname="OrinocoDebugReportingJobP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EAJob" scoped="" ref="0x2b0a714732a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a714735f0"/>
        <function-ref name="done" scoped="" ref="0x2b0a71473778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="JobConfig" ref="0x2b0a71479308" loc="47:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a71479308"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a71479658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Job" ref="0x2b0a7147a9b8" loc="44:../../../EAJobs/lib/EAJobC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.Job"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Job" scoped="" ref="0x2b0a7147a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJob"/>
      </instance>
      <interface-functions>
        <function-ref name="run" scoped="" ref="0x2b0a7147ad08"/>
        <function-ref name="done" scoped="" ref="0x2b0a71479020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b0a714c2dd8" loc="44:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a714c2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x2b0a714c1170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubJobConfig" ref="0x2b0a714c1458" loc="47:../../../EAJobs/lib/EAPeriodicJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobC.EAPeriodicJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubJobConfig" scoped="" ref="0x2b0a714c1458"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a714c17a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="JobConfig" ref="0x2b0a714c0ca8" loc="44:../../../Reporting/OrinocoDebugReportingJobConfigC.nc">
      <component-ref qname="OrinocoDebugReportingJobConfigC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="JobConfig" scoped="" ref="0x2b0a714c0ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getPeriod" scoped="" ref="0x2b0a714bd020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2b0a6ff539b0" loc="43:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2b0a6ff49c00" loc="41:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2b0a6ff53328" loc="42:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b0a6fff7020" loc="50:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fff8a20" loc="50:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2b0a6fff8d48" loc="50:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2b0a6fffb2a0" loc="44:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fffcbd0" loc="44:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a6fffb020" loc="44:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b0a6fffa920" loc="47:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fffa348" loc="47:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2b0a6fffa6a0" loc="47:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2b0a6fffc538" loc="43:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fffc2c8" loc="43:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b0a6fff8338" loc="49:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fff80c8" loc="49:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2b0a6fffbc28" loc="46:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2b0a6fff3e28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6fffb9b8" loc="46:/opt/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b0a6ff3ad58" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b0a6ff4c020" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0a6ff4dd58" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b0a6ff4b430" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0a6ff4b1c0" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0a6ff4d3e0" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a6ff4c808" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b0a6fe44070" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b0a6fe44860" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b0a6fff5328" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
              <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffe8a00" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b0a6ffe8d28" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a6fff5060" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b0a6ffd24e8" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffd2278" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b0a6ffd04e8" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffd0278" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0a6ffcd690" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffcd0c8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a6ffcd3d8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a6ffcc7c8" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b0a6ffcf8d8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffcf348" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a6ffcf658" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a6ff52ab8" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a6ff52ab8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0a6ff69328" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0a6ff60e78" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b0a6ff5ead8" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0a6ff5e540" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0a6ff5e858" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b0a6ff5fdb8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b0a6ff68290" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b0a6ff69a48" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0a6ff5f620" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b0a6ff625c0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0a6ff62350" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b0a6ff6a9e0" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0a6ff6a448" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0a6ff6a760" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b0a6ff60030" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0a6ff62d90" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a6ff607d8" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketDelay" loc="40:../../interfaces/PacketDelay.nc">
      <documentation loc="35:../../interfaces/PacketDelay.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a6fff6760" loc="40:../../interfaces/PacketDelay.nc">
          <interfacedef-ref qname="PacketDelay"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a6fff6760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="delay" ref="0x2b0a7008f290" loc="47:../../interfaces/PacketDelay.nc">
        <documentation loc="41:../../interfaces/PacketDelay.nc">
          <short> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; </short>
          <long> &#10; Return the total packet delay, i.e., the time elapsed since&#10; packet creation and the current time&#10;&#10; @return packet delay&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7008f020" loc="47:../../interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="creationTime" ref="0x2b0a7008fd18" loc="55:../../interfaces/PacketDelay.nc">
        <documentation loc="49:../../interfaces/PacketDelay.nc">
          <short> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; </short>
          <long> &#10; Return the time at which the packet was created (on the origin node)&#10; in locale time&#10;&#10; @return locale time, at which the packet was created at its origin&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketDelay"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7008faa8" loc="55:../../interfaces/PacketDelay.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b0a6ff4fcd0" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a6ff554c8" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b0a70099428" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b0a70099b60" loc="67:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b0a70098328" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b0a700971d8" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b0a70095810" loc="100:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a70094020" loc="117:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b0a70098a40" loc="77:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a70094b20" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b0a700948b0" loc="134:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b0a70088cd8" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b0a70097948" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b0a700950d8" loc="94:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="QueueSend" loc="48:../../interfaces/QueueSend.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a70003658" loc="66:../../interfaces/QueueSend.nc">
        <documentation loc="50:../../interfaces/QueueSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; messages was successfully stored in the sending queue and will&#10; be eventually sent/forwarded.&#10; There is no event signaled after packet sending.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted, EBUSY if&#10;                  the component cannot accept the request now but&#10;                  will be able to later, FAIL if the stack is in&#10;                  a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a700030c8" loc="66:../../interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a700033d8" loc="66:../../interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0a70002418" loc="91:../../interfaces/QueueSend.nc">
        <documentation loc="81:../../interfaces/QueueSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70001e08" loc="91:../../interfaces/QueueSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a70002160" loc="91:../../interfaces/QueueSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a70001600" loc="78:../../interfaces/QueueSend.nc">
        <documentation loc="68:../../interfaces/QueueSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="QueueSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x2b0a6ffcb398" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b0a6ffbca50" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0a6ffbcdb0" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a6ffcb108" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0a6ffc5708" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffc5140" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a6ffc5450" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a6ffc68e0" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0a6ffca670" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffca400" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a6ffc8ab0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a6ffc8508" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0a6ffc8830" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b0a6ffdd930" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffdd6c0" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b0a6ffd6a88" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffd6818" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b0a6ffd8020" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0a6ffd8a78" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffd8808" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0a6ffe32a0" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffd4c98" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a6ffe3020" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0a6ffd5dc0" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffd5808" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a6ffd5b40" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b0a6ffe05c8" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffe0358" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b0a6ffdf840" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffdf2c0" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b0a6ffdf5c0" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b0a6ff2ebd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0a6ffe2478" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffe2208" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b0a6ffebd20" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b0a6ffeb770" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0a6ffebaa0" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b0a6ffeaac8" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoConfig" loc="42:../../lib/net/orinoco/OrinocoConfig.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoConfig.nc">
        <short>&#10; Orinoco Configuration&#10;&#10; </short>
        <long>&#10; Orinoco Configuration&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="setWakeUpInterval" ref="0x2b0a6ff51290" loc="44:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Ts" ref="0x2b0a6ff51020" loc="44:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMaxDwellTime" ref="0x2b0a6ff5bc30" loc="69:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b0a6ff5b9c0" loc="69:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinQueueSize" ref="0x2b0a6ff58dc0" loc="81:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m" ref="0x2b0a6ff58b50" loc="81:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpDeviation" ref="0x2b0a6ff5dae8" loc="56:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinDwellTime" ref="0x2b0a6ff5cbb0" loc="63:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Td" ref="0x2b0a6ff5c940" loc="63:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxDwellTime" ref="0x2b0a6ff59378" loc="72:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWakeUpDeviation" ref="0x2b0a6ff5d3b0" loc="53:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="alpha" ref="0x2b0a6ff5d140" loc="53:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAbsWakeUpDeviation" ref="0x2b0a6ff5c2a8" loc="60:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinQueueSize" ref="0x2b0a6ff57530" loc="84:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNumWaitingIntervals" ref="0x2b0a6ff584c0" loc="78:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinDwellTime" ref="0x2b0a6ff5b328" loc="66:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWakeUpInterval" ref="0x2b0a6ff519d0" loc="47:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNumWaitingIntervals" ref="0x2b0a6ff59cc0" loc="75:../../lib/net/orinoco/OrinocoConfig.nc">
        <interfacedef-ref qname="OrinocoConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0a6ff59a50" loc="75:../../lib/net/orinoco/OrinocoConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0a700d4030" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b0a700df810" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b0a700df5a0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b0a700e2020" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b0a700e2a18" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0a700e27a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b0a700e14d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b0a700e1260" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b0a700e1d18" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b0a700f4dc0" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b0a700f24c8" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b0a700f4070" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b0a700f1290" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a700f4710" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b0a700f2b80" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a700f5328" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b0a700f5998" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b0a6fe37378" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b0a6fe42258" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b0a6fe37a90" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b0a6fef9e28" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b0a6ff114f8" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b0a6fe7e940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b0a6ff12020" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a702b07d0" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a702b07d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0a702ad0d8" loc="61:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetNow" loc="44:/opt/tinyos-2.x/tos/interfaces/GetNow.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/GetNow.nc">
        <short> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Get&#60;/tt> interface (see TEP 114) this interface can be&#10; used for reading small values, but in contrast to the &#60;tt>Get&#60;/tt> interface&#10; the value is read asynchronously.&#10;&#10; @param data_type the type of the object that will be returned&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x2b0a702cc428" loc="44:/opt/tinyos-2.x/tos/interfaces/GetNow.nc">
          <interfacedef-ref qname="GetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b0a702cc428"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0a702ccce0" loc="51:/opt/tinyos-2.x/tos/interfaces/GetNow.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/GetNow.nc">
          <short>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Returns a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="GetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x2b0a702cc428"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a702b63f8" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a702b63f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0a702b6628" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702b6628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0a702b5020" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702b6628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b0a702b4070" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b0a702b5838" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0a702b4760" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a702a9ab8" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a702a9ab8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0a702a9ce8" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b0a702bc7a0" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0a702bf770" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b0a702bdd70" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b0a702bd7d0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b0a702bdaf0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b0a702bd020" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b0a702bb020" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0a702c0810" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0a702c05a0" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702a9ce8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a702bf020" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0a702e9598" loc="89:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0a702eb488" loc="85:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b0a702ed328" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0a702ebdf8" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0a702ebb88" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b0a702ecce8" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0a702eca78" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0a702e8020" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0a702e9ca0" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b0a702eda58" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b0a702ec3c0" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0a702ec150" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b0a70310a28" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b0a702f7b08" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b0a702f5258" loc="74:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b0a702f5a28" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b0a7030f258" loc="98:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b0a70310258" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b0a702fa910" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0a6fec4978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0a6fec4d80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b0a702f7338" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0a6fec4978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0a6fec4d80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b0a702f70c8" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b0a6fec4978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b0a6fec4d80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0a702f09d0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702f09d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b0a702fd0d8" loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b0a703003e0" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a70301328" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702f09d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0a70300ae8" loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0a702fd828" loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a70301c70" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702f09d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0a70301a00" loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a702f09d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0a702fe258" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a702fe940" loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b0a702e4dc0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a702e4dc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b0a702dc290" loc="98:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b0a702dd3e0" loc="87:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a702e16c0" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a702e4dc0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b0a702dcbe0" loc="104:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b0a702dc970" loc="104:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b0a702f43a0" loc="110:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0a702e0e60" loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b0a702e0740" loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0a702ddb38" loc="93:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a702e0020" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a702e4dc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0a702e1d88" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b0a702e4dc0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0a702de590" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a702dec78" loc="81:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2b0a7047a5c0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7045cbf0" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b0a7047a020" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a7047a330" loc="31:/opt/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficStatistics" loc="43:../../interfaces/OrinocoTrafficStatistics.nc">
      <documentation loc="35:../../interfaces/OrinocoTrafficStatistics.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date February 9th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRxBurst" ref="0x2b0a7046f020" loc="52:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTxBurst" ref="0x2b0a70471920" loc="50:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktCreationIntvl" ref="0x2b0a70474ae8" loc="46:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPktReceptionIntvl" ref="0x2b0a70471258" loc="48:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardDelay" ref="0x2b0a7046f728" loc="54:../../interfaces/OrinocoTrafficStatistics.nc">
        <interfacedef-ref qname="OrinocoTrafficStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a70498348" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7049bd50" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a704980c8" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0a70494628" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70494060" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a70494370" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a70493828" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0a704975b8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70497348" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a704969a8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70496400" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0a70496728" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0a7049ae00" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b0a7048ec68" loc="73:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b0a704ad588" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b0a704ad318" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2b0a6f542488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2b0a6f542488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b0a704ac498" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a704ac228" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b0a7048e560" loc="65:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0a704ae7d8" loc="81:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a7049ae00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b0a7048f680" loc="50:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b0a7048fda0" loc="58:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CacheCompare" loc="41:../../lib/net/orinoco/CacheCompare.nc">
      <documentation loc="35:../../lib/net/orinoco/CacheCompare.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date January 4 2012&#10;</long>
      </documentation>
      <parameters>
        <typedef name="cache_t" ref="0x2b0a70481a20" loc="41:../../lib/net/orinoco/CacheCompare.nc">
          <interfacedef-ref qname="CacheCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a70481a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="equal" ref="0x2b0a7047d7e8" loc="50:../../lib/net/orinoco/CacheCompare.nc">
        <documentation loc="42:../../lib/net/orinoco/CacheCompare.nc">
          <short>&#10; compare a cached element ce with another element cmp&#10;&#10; </short>
          <long>&#10; compare a cached element ce with another element cmp&#10;&#10; @param ce  element in cache&#10; @param cmp element for comparison&#10;&#10; @return true, if a == b; false, else&#10;</long>
        </documentation>
        <interfacedef-ref qname="CacheCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a70481a20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a70481a20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ce" ref="0x2b0a7047d258" loc="50:../../lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a70481a20"/></type-var>
          </variable>
          <variable name="cmp" ref="0x2b0a7047d568" loc="50:../../lib/net/orinoco/CacheCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="cache_t" scoped="" ref="0x2b0a70481a20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b0a704ba1f8" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0a704ba1f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b0a704b6290" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704b6020" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a704b7730" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0a704ba1f8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704b74c0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b0a704bad08" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704baa98" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a704b4020" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0a704ba1f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704b6980" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b0a704b6cc8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b0a704ba1f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a704b8b68" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a704b8b68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0a704b8d98" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a704b8d98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b0a704d0ac0" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a704b8d98"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704d0850" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b0a704cfb88" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704cf918" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b0a704b0940" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704b06d0" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a704cddf0" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a704b8d98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a704cd830" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b0a704cdb70" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a704b8d98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0a704a9970" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a9970"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0a704a28b8" loc="97:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a9970"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b0a704a5258" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b0a704a61d8" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2b0a704a5c20" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a9970"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b0a704a59b0" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a9970"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b0a704a69c0" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoTrafficUpdates" loc="43:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <short>&#10; Orinoco Traffic Statistics interface&#10;&#10; </short>
        <long>&#10; Orinoco Traffic Statistics interface&#10;&#10; @author Christian Renner&#10; @date January 20th 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="updateRxBurst" ref="0x2b0a704c59d0" loc="52:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b0a704c5760" loc="52:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateForwardDelay" ref="0x2b0a704c4338" loc="54:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="done" ref="0x2b0a704c40c8" loc="54:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updateTxBurst" ref="0x2b0a704c5108" loc="50:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="end" ref="0x2b0a704c7e30" loc="50:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktReceptionIntvl" ref="0x2b0a704c77d8" loc="48:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="updatePktCreationIntvl" ref="0x2b0a704c70d8" loc="46:../../lib/net/orinoco/OrinocoTrafficUpdates.nc">
        <interfacedef-ref qname="OrinocoTrafficUpdates"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.x/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2b0a7047e468" loc="49:/opt/tinyos-2.x/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0a7047e468"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b0a7047ec80" loc="55:/opt/tinyos-2.x/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2b0a7047e468"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b0a704a1d30" loc="44:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a1d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2b0a7049e7a0" loc="51:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a1d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b0a7049e530" loc="51:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a1d30"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b0a704be9b8" loc="65:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2b0a704be290" loc="59:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a1d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2b0a704be020" loc="59:/opt/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b0a704a1d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoPathCost" loc="42:../../lib/net/orinoco/OrinocoPathCost.nc">
      <documentation loc="35:../../lib/net/orinoco/Orinoco.h">
        <short>&#10; Orinoco Definitions&#10;&#10; </short>
        <long>&#10; Orinoco Definitions&#10;&#10; @author Christian Renner&#10; @date December 13 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCost" ref="0x2b0a70558640" loc="45:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0a6fff2698"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reviseCost" ref="0x2b0a70558d00" loc="49:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="inspectBeacon" ref="0x2b0a70557dc0" loc="53:../../lib/net/orinoco/OrinocoPathCost.nc">
        <interfacedef-ref qname="OrinocoPathCost"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0a6fff2698"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70557488" loc="53:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cost" ref="0x2b0a70557818" loc="53:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="orinoco_pathcost_t" ref="0x2b0a6fff2698"/></typename>
            </type-int>
          </variable>
          <variable name="update" ref="0x2b0a70557b30" loc="53:../../lib/net/orinoco/OrinocoPathCost.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b0a7057c7c8" loc="52:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b0a7057c030" loc="46:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OrinocoBackoffConfig" loc="42:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
      <documentation loc="35:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
        <short>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; </short>
        <long>&#10; Orinoco backoff configuration for sending data packets&#10;&#10; @author Christian Renner&#10; @date January 11 2012&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMaximumBackoff" ref="0x2b0a7056e110" loc="44:../../lib/net/orinoco/OrinocoBackoffConfig.nc">
        <interfacedef-ref qname="OrinocoBackoffConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b0a70615040" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b0a70618a38" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0a70618d98" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b0a70610a88" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b0a706102d0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0a70610060" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b0a7060f290" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b0a7064cb88" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b0a7064ec50" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b0a7064e360" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b0a7064c428" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b0a7064b848" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b0a70648c10" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706489a0" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b0a7064f860" loc="37:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0a70648290" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70648020" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0a7066d610" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7066d020" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a7066d390" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0a70646938" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70646348" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a706466b8" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b0a7066b980" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b0a6ffa44c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7066b710" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b0a7066a600" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b0a6ffa44c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7066a020" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0a7066a380" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b0a6ffa44c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0a7066b020" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7066dcc0" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b0a7066ad08" loc="53:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b0a6ffa44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b0a706643f0" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70666d88" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b0a70664170" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b0a706634e8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70663278" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b0a70666608" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b0a70669c90" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b0a70669a20" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a706555c0" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b0a70658c80" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b0a70655020" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a70655330" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b0a70651988" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706513c0" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a706516d0" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a70652b70" loc="110:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0a70654338" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706540c8" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a706522a0" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70654c68" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0a70652020" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b0a7065d3d0" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7065d160" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b0a706616b0" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706610c8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b0a70661430" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b0a7065e468" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7065e1f8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b0a7065f9e8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7065f400" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b0a7065f768" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b0a7065b338" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7065b0c8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b0a7067abd8" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7067a968" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b0a706be020" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b0a706a8938" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706a86c8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b0a70699d10" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70699aa0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b0a706c1370" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c1100" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b0a7069b6b0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7069b440" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b0a7069c020" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706abc70" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b0a70699388" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7069bd88" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a70699108" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b0a7069cce0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7069c728" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a7069ca60" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b0a706989b0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70698400" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b0a70698730" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b0a706a2598" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b0a706a1020" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b0a7069e290" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7069e020" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b0a706a1aa8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706a1838" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b0a706a05b8" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706a0348" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b0a706c9110" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b0a706ca290" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b0a706ca020" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0a706ca9c8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b0a706ce748" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b0a706c98c0" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b0a6ffa6540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b0a706c3a10" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c37a0" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b0a706c5020" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c7d48" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a706c4578" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b0a706c5d88" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c57d8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b0a706c5b08" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b0a706c74e8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c7278" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b0a706c3020" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706c4d20" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b0a70692ae0" loc="46:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b0a70692338" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706920c8" loc="40:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b0a706915f0" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70691380" loc="52:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b0a70691e28" loc="59:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b0a706909a0" loc="65:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70690730" loc="65:/opt/tinyos-2.x/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b0a706aa338" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706aa0c8" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b0a70687788" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b0a70687020" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a706888b8" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a70688c18" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b0a7068cb48" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7068c8d8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b0a7068b630" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7068b3c0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b0a70689600" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70689020" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a70689380" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b0a7068d360" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b0a7068c118" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7068db68" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a7068de60" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b0a70688118" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70689e80" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b0a706afc88" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706afa18" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b0a706b04e8" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b0278" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b0a706bb2a0" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706bcb80" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b0a706bb020" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b0a706b8290" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b8020" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b0a706d4828" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706d4278" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a706d45a8" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b0a706ba7b0" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706ba540" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b0a706af2a0" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b0ce0" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b0a706af020" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b0a706b7b28" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a706b7548" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a706b78a8" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b0a706d5b18" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706d58a8" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b0a706bbce0" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706bba70" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b0a706b4468" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b41f8" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b0a706b6988" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a706b63a8" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a706b6708" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b0a706d1d88" loc="178:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b0a6ffa48b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b0a706d2290" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706d2020" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b0a706d15f8" loc="173:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b0a6ffa44c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b0a706d5118" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706adb10" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b0a706ade40" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b0a706b8d18" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b8aa8" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b0a706b2aa8" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b2508" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b0a706b2828" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b0a706ae9a0" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706ae400" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b0a706ae720" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b0a706d0790" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706d0520" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b0a706b32a0" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b4c08" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b0a706b3020" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b0a706bc408" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706bc198" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b0a706d2d78" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706d2b08" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b0a706ad3d0" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706ad160" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b0a706b3d28" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706b3ab8" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b0a706ac020" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70683a20" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b0a70683d50" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b0a706ac7a8" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b0a70684810" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706845a0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b0a70683290" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70683020" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b0a706a6ad8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706a6868" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b0a706a6020" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70685cf0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b0a706a5328" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b0a706a5d78" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a706a5b08" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b0a70730b28" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b0a7072f428" loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b0a7072fd40" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b0a70730438" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b0a7077fd90" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7077fb20" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b0a7077b7a8" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7077b538" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a7077ccd0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a7077c728" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b0a7077ca50" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b0a707782c8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
              <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70778020" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b0a70793070" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b0a70792020" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b0a707937d0" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b0a70795868" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b0a707952b0" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b0a6ff2d020"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b0a707955e8" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b0a70835c90" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b0a70832580" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b0a7082dbf0" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b0a7082d440" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b0a70830360" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b0a70830b50" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b0a70854ac8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0a7082ec40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0a70854858" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0a7082ec40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b0a70859ae0" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b0a708555e8" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0a7082ec40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0a70855378" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b0a7082ec40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b0a70854020" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b0a7082ec40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b0a70994e70" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
              <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70994bc8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b0a70994290" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70994020" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b0a709b7020" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709b8ce0" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b0a709b7790" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a709c1cf8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709c1a88" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a709b8640" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709b83d0" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b0a709bd020" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709bed80" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b0a709bc4e0" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0a709bc270" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b0a709bdab0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709bd840" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b0a709bb020" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b0a709bcce8" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b0a709be5b0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b0a709be340" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b0a6ff2d3d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b0a70a006d8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70a00468" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b0a709ff818" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a709ff5a8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b0a709fd8c8" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a709fd658" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b0a70a3b328" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b0a70a39378" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b0a70a39d80" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b0a70a39b10" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b0a70a38538" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b0a70a3bb58" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b0a70a38d68" loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b0a70a3d9f0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70a3d780" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b0a70a35d88" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a70a35580" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0a70a35310" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b0a70aa3468" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70aa31f8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a70aa6408" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70aa6198" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b0a70aa5118" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70aa6b58" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b0a70aa6e68" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a70aa5ab0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a70aa5840" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b0a70b4c3e8" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0a70b4c178" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b0a70b4f9c8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b0a70b86068" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b0a70b86068"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b0a70b86298" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70b86298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b0a70b86d30" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70b86298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b0a70b86ac0" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70b86298"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b0a70b89808" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b0a70b889c8" loc="66:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b0a70b88290" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b0a70b88020" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b0a70b89020" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b0a70b535b0" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70b53340" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b0a70b528b0" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70b52640" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b0a70b53db0" loc="68:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b0a70b8e338" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70b8e0c8" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b0a70c594d0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b0a70c51020" loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b0a70c52c98" loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b0a70c53e18" loc="76:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b0a70c59d88" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b0a70c55108" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0a70c56e28" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b0a70c55848" loc="64:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b0a70c525c0" loc="82:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b0a70c566f0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b0a70c56480" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b0a70c594d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b0a70c53020" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a70c53708" loc="70:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a70c7ab88" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b0a70c7a278" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b0a70c7a5d8" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a70c7a8f8" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a70c76020" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b0a70c782b0" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b0a70c78610" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a70c78930" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b0a70c78c78" loc="83:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b0a70c7c020" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b0a70c7fc18" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b0a70ca6d30" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b0a70c9c5c0" loc="126:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b0a70ca0258" loc="117:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b0a70c9a020" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b0a70c9ccf8" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b0a70ca65f0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b0a70c9ec78" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b0a70c9ea08" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b0a70ca2a38" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b0a70ca27c8" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b0a70ca5bf0" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b0a70c97960" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b0a70c976f0" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b0a70ca11d8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b0a70c990a8" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b0a70c9add8" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b0a70c98020" loc="136:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b0a70c9de48" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b0a70c9dbd8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b0a70c97020" loc="140:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b0a70ca0ba8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b0a70ca0938" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b0a70ca4578" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70ca4308" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b0a70ca1ae8" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b0a70ca1878" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b0a70c9d4a8" loc="123:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b0a70c9a728" loc="129:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b0a70c99798" loc="132:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b0a70c98768" loc="138:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b0a70c9e328" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b0a70ca5488" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b0a70ca2020" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a70ca4c90" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b0a70d16258" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b0a70d16a30" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b0a70d3fa30" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b0a70d3dda8" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b0a70d42bb8" loc="79:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b0a70d3a020" loc="91:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b0a70d3b748" loc="88:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b0a70d3b4d8" loc="88:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b0a70d3ece8" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0a70d3ea78" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b0a70d3a998" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b0a70d3a728" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b0a70d3f328" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b0a70d3d648" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0a70d3d3d8" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b0a70d3e3c0" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b0a70d3e150" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b0a70f49d88" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b0a70f49d88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b0a70f468c8" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b0a70f49d88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b0a70f46658" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b0a70f49d88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAPeriodicJobConfig" loc="40:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPeriod" ref="0x2b0a71071328" loc="41:../../../EAJobs/interfaces/EAPeriodicJobConfig.nc">
        <interfacedef-ref qname="EAPeriodicJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJob" loc="40:../../../EAJobs/interfaces/EAJob.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJob.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="run" ref="0x2b0a710728b8" loc="43:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="done" ref="0x2b0a7106d020" loc="47:../../../EAJobs/interfaces/EAJob.nc">
        <interfacedef-ref qname="EAJob"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAJobConfig" loc="40:../../../EAJobs/interfaces/EAJobConfig.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAJobConfig.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x2b0a71093928" loc="43:../../../EAJobs/interfaces/EAJobConfig.nc">
        <interfacedef-ref qname="EAJobConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:1" alignment="I:1"><struct-ref name="ea_generic_jobconfig_t" ref="0x2b0a71097ea8"/>
              <typename><typedef-ref name="ea_generic_jobconfig_t" ref="0x2b0a710954e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="EAScheduler" loc="42:../../../EAJobs/interfaces/EAScheduler.nc">
      <documentation loc="35:../../../EAJobs/interfaces/EAScheduler.nc">
        <short>&#10; </short>
        <long>&#10; @author Christian Renner&#10; @date December 14 2011&#10;</long>
      </documentation>
      <function event="" provided="0" name="jobStarted" ref="0x2b0a7108a020" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b0a71097190"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b0a7108cc20" loc="44:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b0a71097190"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="scheduleJob" ref="0x2b0a7108c5b8" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
        <interfacedef-ref qname="EAScheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b0a71097190"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="jobId" ref="0x2b0a7108c020" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="jobid_t" ref="0x2b0a71097190"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b0a7108c338" loc="43:../../../EAJobs/interfaces/EAScheduler.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b0a6f548608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b0a711672a0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a71168b70" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b0a71167020" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b0a71169458" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b0a711682a0" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b0a71169c70" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:99" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b0a6ffbfd10"/>
                <typename><typedef-ref name="message_t" ref="0x2b0a6ffbc2e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b0a71168020" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b0a71188b60" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b0a71188450" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b0a711901d8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b0a7118f528" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b0a7118c020" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a7118ed60" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b0a7118fd40" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b0a71190cc8" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a71190a58" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b0a7118c818" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b0a7118e5b8" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b0a71197020" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b0a711978d8" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b0a71198668" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b0a711983f8" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b0a71196430" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b0a711961c0" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b0a71194020" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b0a71194bc8" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a71194958" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b0a71192640" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b0a711923d0" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a712749b8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0a71274418" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a71274738" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b0a712c94a8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0a712c9238" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b0a712c82a0" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0a712c9c20" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a712c8020" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b0a712cb1d8" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b0a712c7a38" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0a712c7160" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a712c7480" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b0a712c77a8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b0a712cba50" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b0a712732b0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b0a712cc880" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b0a712ccba0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b0a6f547b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b0a71273020" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b0a712aabb0" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0a712aa940" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b0a712a79b0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b0a712a73f8" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b0a712a7730" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b0a712ee578" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b0a712ef738" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b0a712ebc08" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a712eb998" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b0a712edc08" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b0a712f27f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b0a712ef020" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b0a712efe58" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b0a6fe3eae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b0a712eec58" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b0a6fe199b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b0a712ed578" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b0a712ed308" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b0a712eb328" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b0a6f547160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
